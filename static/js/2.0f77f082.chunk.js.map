{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator/index.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","../node_modules/cross-fetch/dist/browser-ponyfill.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","../../../../src/lib/fetch.ts","../../../../src/lib/constants.ts","../../../../src/lib/cookies.ts","../../../../src/lib/helpers.ts","../../../src/GoTrueApi.ts","../../../../src/lib/polyfills.ts","../../../src/GoTrueClient.ts","../../../../src/lib/transformers.ts","../../../../src/lib/SupabaseAuthClient.ts","../../../../src/lib/types.ts","../../../../src/lib/PostgrestFilterBuilder.ts","../../../../src/lib/PostgrestTransformBuilder.ts","../../../../src/lib/PostgrestQueryBuilder.ts","../../../../src/lib/PostgrestRpcBuilder.ts","../../../src/PostgrestClient.ts","../../../../src/lib/timer.ts","../../../../src/lib/push.ts","../../../src/RealtimeSubscription.ts","../../../../src/lib/serializer.ts","../../../src/RealtimeClient.ts","../../../../src/lib/SupabaseRealtimeClient.ts","../../../../src/lib/SupabaseQueryBuilder.ts","../../../../src/lib/StorageFileApi.ts","../../../src/SupabaseStorageClient.ts","../../../../src/lib/StorageBucketApi.ts","../../../src/SupabaseClient.ts","../../../src/index.ts","../node_modules/websocket/lib/browser.js","../node_modules/es5-ext/global.js","../node_modules/websocket/lib/version.js"],"names":["_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","_unsupportedIterableToArray","o","minLen","n","prototype","toString","call","slice","constructor","name","from","test","_arrayLikeToArray","len","arr2","module","exports","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","error","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","global","__self__","F","fetch","DOMException","support","Blob","e","viewClasses","isArrayBufferView","ArrayBuffer","isView","obj","indexOf","normalizeName","String","toLowerCase","normalizeValue","iteratorFor","items","shift","Headers","headers","map","forEach","append","header","getOwnPropertyNames","consumed","body","bodyUsed","fileReaderReady","reader","onload","result","onerror","readBlobAsArrayBuffer","blob","FileReader","promise","readAsArrayBuffer","bufferClone","buf","view","Uint8Array","byteLength","set","buffer","Body","_initBody","_bodyInit","_bodyText","isPrototypeOf","_bodyBlob","FormData","_bodyFormData","URLSearchParams","DataView","_bodyArrayBuffer","get","type","rejected","Error","arrayBuffer","text","readAsText","readBlobAsText","chars","fromCharCode","join","readArrayBufferAsText","formData","decode","json","JSON","parse","oldValue","has","hasOwnProperty","callback","thisArg","keys","values","entries","methods","Request","input","options","url","credentials","method","mode","signal","upcased","toUpperCase","normalizeMethod","referrer","form","trim","split","bytes","replace","decodeURIComponent","parseHeaders","rawHeaders","line","parts","Response","bodyInit","status","ok","statusText","clone","response","redirectStatuses","redirect","RangeError","location","message","stack","create","init","request","aborted","xhr","XMLHttpRequest","abortXhr","abort","getAllResponseHeaders","responseURL","responseText","ontimeout","onabort","open","withCredentials","responseType","setRequestHeader","addEventListener","onreadystatechange","readyState","removeEventListener","send","polyfill","defineProperty","ponyfill","ctx","default","_toConsumableArray","arrayLikeToArray","iter","opt","configurable","__magic__","PostgresTypes","SOCKET_STATES","CHANNEL_STATES","CHANNEL_EVENTS","window","_globalThis","globalThis","require","NativeWebSocket","WebSocket","MozWebSocket","websocket_version","W3CWebSocket","uri","protocols","prop","naiveFallback","__global__","version"],"mappings":"2NAIe,SAASA,EAAeC,EAAKC,GAC1C,OCLa,SAAyBD,GACtC,GAAIE,MAAMC,QAAQH,GAAM,OAAOA,EDIxB,CAAeA,IELT,SAA+BA,EAAKC,GACjD,GAAsB,qBAAXG,QAA4BA,OAAOC,YAAYC,OAAON,GAAjE,CACA,IAAIO,EAAO,GACPC,GAAK,EACLC,GAAK,EACLC,OAAKC,EAET,IACE,IAAK,IAAiCC,EAA7BC,EAAKb,EAAII,OAAOC,cAAmBG,GAAMI,EAAKC,EAAGC,QAAQC,QAChER,EAAKS,KAAKJ,EAAGK,QAEThB,GAAKM,EAAKW,SAAWjB,GAH8CO,GAAK,IAK9E,MAAOW,GACPV,GAAK,EACLC,EAAKS,EACL,QACA,IACOX,GAAsB,MAAhBK,EAAW,QAAWA,EAAW,SAC5C,QACA,GAAIJ,EAAI,MAAMC,GAIlB,OAAOH,GFnBuB,CAAqBP,EAAKC,IAAM,OAAAmB,EAAA,GAA2BpB,EAAKC,IGLjF,WACb,MAAM,IAAIoB,UAAU,6IHIgF,K,iCILtG,+CACe,SAASC,EAA4BC,EAAGC,GACrD,GAAKD,EAAL,CACA,GAAiB,kBAANA,EAAgB,OAAO,YAAiBA,EAAGC,GACtD,IAAIC,EAAInB,OAAOoB,UAAUC,SAASC,KAAKL,GAAGM,MAAM,GAAI,GAEpD,MADU,WAANJ,GAAkBF,EAAEO,cAAaL,EAAIF,EAAEO,YAAYC,MAC7C,QAANN,GAAqB,QAANA,EAAoBvB,MAAM8B,KAAKT,GACxC,cAANE,GAAqB,2CAA2CQ,KAAKR,GAAW,YAAiBF,EAAGC,QAAxG,K,iCCPa,SAASU,EAAkBlC,EAAKmC,IAClC,MAAPA,GAAeA,EAAMnC,EAAIkB,UAAQiB,EAAMnC,EAAIkB,QAE/C,IAAK,IAAIjB,EAAI,EAAGmC,EAAO,IAAIlC,MAAMiC,GAAMlC,EAAIkC,EAAKlC,IAC9CmC,EAAKnC,GAAKD,EAAIC,GAGhB,OAAOmC,EAPT,mC,oBCAAC,EAAOC,QAAU,EAAQ,M,iCCAzB,SAASC,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChB7B,EAAQ8B,EAAK9B,MACjB,MAAO+B,GAEP,YADAN,EAAOM,GAILD,EAAKhC,KACP0B,EAAQxB,GAERgC,QAAQR,QAAQxB,GAAOiC,KAAKP,EAAOC,GAIxB,SAASO,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACPC,EAAOC,UACX,OAAO,IAAIP,SAAQ,SAAUR,EAASC,GACpC,IAAIF,EAAMY,EAAGK,MAAMJ,EAAME,GAEzB,SAASZ,EAAM1B,GACbsB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQ3B,GAGlE,SAAS2B,EAAOzB,GACdoB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASzB,GAGnEwB,OAAMhC,OA/BZ,mC,kBCAA,IAAI+C,EAAyB,qBAATL,KAAuBA,KAAOC,KAC9CK,EAAY,WAChB,SAASC,IACTN,KAAKO,OAAQ,EACbP,KAAKQ,aAAeJ,EAAOI,aAG3B,OADAF,EAAElC,UAAYgC,EACP,IAAIE,EANK,IAQhB,SAAUP,IAEQ,SAAUf,GAE1B,IAAIyB,EACY,oBAAqBV,EADjCU,EAEQ,WAAYV,GAAQ,aAAcjD,OAF1C2D,EAIA,eAAgBV,GAChB,SAAUA,GACT,WACC,IAEE,OADA,IAAIW,MACG,EACP,MAAOC,GACP,OAAO,GALV,GANDF,EAcQ,aAAcV,EAdtBU,EAeW,gBAAiBV,EAOhC,GAAIU,EACF,IAAIG,EAAc,CAChB,qBACA,sBACA,6BACA,sBACA,uBACA,sBACA,uBACA,wBACA,yBAGEC,EACFC,YAAYC,QACZ,SAASC,GACP,OAAOA,GAAOJ,EAAYK,QAAQjE,OAAOoB,UAAUC,SAASC,KAAK0C,KAAS,GAIhF,SAASE,EAAczC,GAIrB,GAHoB,kBAATA,IACTA,EAAO0C,OAAO1C,IAEZ,4BAA4BE,KAAKF,GACnC,MAAM,IAAIV,UAAU,0CAEtB,OAAOU,EAAK2C,cAGd,SAASC,EAAe1D,GAItB,MAHqB,kBAAVA,IACTA,EAAQwD,OAAOxD,IAEVA,EAIT,SAAS2D,EAAYC,GACnB,IAAIxE,EAAW,CACbS,KAAM,WACJ,IAAIG,EAAQ4D,EAAMC,QAClB,MAAO,CAAC/D,UAAgBJ,IAAVM,EAAqBA,MAAOA,KAU9C,OANI8C,IACF1D,EAASD,OAAOC,UAAY,WAC1B,OAAOA,IAIJA,EAGT,SAAS0E,EAAQC,GACf1B,KAAK2B,IAAM,GAEPD,aAAmBD,EACrBC,EAAQE,SAAQ,SAASjE,EAAOc,GAC9BuB,KAAK6B,OAAOpD,EAAMd,KACjBqC,MACMpD,MAAMC,QAAQ6E,GACvBA,EAAQE,SAAQ,SAASE,GACvB9B,KAAK6B,OAAOC,EAAO,GAAIA,EAAO,MAC7B9B,MACM0B,GACT1E,OAAO+E,oBAAoBL,GAASE,SAAQ,SAASnD,GACnDuB,KAAK6B,OAAOpD,EAAMiD,EAAQjD,MACzBuB,MAgEP,SAASgC,EAASC,GAChB,GAAIA,EAAKC,SACP,OAAOvC,QAAQP,OAAO,IAAIrB,UAAU,iBAEtCkE,EAAKC,UAAW,EAGlB,SAASC,EAAgBC,GACvB,OAAO,IAAIzC,SAAQ,SAASR,EAASC,GACnCgD,EAAOC,OAAS,WACdlD,EAAQiD,EAAOE,SAEjBF,EAAOG,QAAU,WACfnD,EAAOgD,EAAO1C,WAKpB,SAAS8C,EAAsBC,GAC7B,IAAIL,EAAS,IAAIM,WACbC,EAAUR,EAAgBC,GAE9B,OADAA,EAAOQ,kBAAkBH,GAClBE,EAoBT,SAASE,EAAYC,GACnB,GAAIA,EAAIvE,MACN,OAAOuE,EAAIvE,MAAM,GAEjB,IAAIwE,EAAO,IAAIC,WAAWF,EAAIG,YAE9B,OADAF,EAAKG,IAAI,IAAIF,WAAWF,IACjBC,EAAKI,OAIhB,SAASC,IA0FP,OAzFApD,KAAKkC,UAAW,EAEhBlC,KAAKqD,UAAY,SAASpB,GAhM5B,IAAoBjB,EAiMhBhB,KAAKsD,UAAYrB,EACZA,EAEsB,kBAATA,EAChBjC,KAAKuD,UAAYtB,EACRxB,GAAgBC,KAAKtC,UAAUoF,cAAcvB,GACtDjC,KAAKyD,UAAYxB,EACRxB,GAAoBiD,SAAStF,UAAUoF,cAAcvB,GAC9DjC,KAAK2D,cAAgB1B,EACZxB,GAAwBmD,gBAAgBxF,UAAUoF,cAAcvB,GACzEjC,KAAKuD,UAAYtB,EAAK5D,WACboC,GAAuBA,KA5MlBO,EA4M6CiB,IA3MjD4B,SAASzF,UAAUoF,cAAcxC,KA4M3ChB,KAAK8D,iBAAmBjB,EAAYZ,EAAKkB,QAEzCnD,KAAKsD,UAAY,IAAI5C,KAAK,CAACV,KAAK8D,oBACvBrD,IAAwBK,YAAY1C,UAAUoF,cAAcvB,IAASpB,EAAkBoB,IAChGjC,KAAK8D,iBAAmBjB,EAAYZ,GAEpCjC,KAAKuD,UAAYtB,EAAOjF,OAAOoB,UAAUC,SAASC,KAAK2D,GAhBvDjC,KAAKuD,UAAY,GAmBdvD,KAAK0B,QAAQqC,IAAI,kBACA,kBAAT9B,EACTjC,KAAK0B,QAAQwB,IAAI,eAAgB,4BACxBlD,KAAKyD,WAAazD,KAAKyD,UAAUO,KAC1ChE,KAAK0B,QAAQwB,IAAI,eAAgBlD,KAAKyD,UAAUO,MACvCvD,GAAwBmD,gBAAgBxF,UAAUoF,cAAcvB,IACzEjC,KAAK0B,QAAQwB,IAAI,eAAgB,qDAKnCzC,IACFT,KAAKyC,KAAO,WACV,IAAIwB,EAAWjC,EAAShC,MACxB,GAAIiE,EACF,OAAOA,EAGT,GAAIjE,KAAKyD,UACP,OAAO9D,QAAQR,QAAQa,KAAKyD,WACvB,GAAIzD,KAAK8D,iBACd,OAAOnE,QAAQR,QAAQ,IAAIuB,KAAK,CAACV,KAAK8D,oBACjC,GAAI9D,KAAK2D,cACd,MAAM,IAAIO,MAAM,wCAEhB,OAAOvE,QAAQR,QAAQ,IAAIuB,KAAK,CAACV,KAAKuD,cAI1CvD,KAAKmE,YAAc,WACjB,OAAInE,KAAK8D,iBACA9B,EAAShC,OAASL,QAAQR,QAAQa,KAAK8D,kBAEvC9D,KAAKyC,OAAO7C,KAAK4C,KAK9BxC,KAAKoE,KAAO,WACV,IAAIH,EAAWjC,EAAShC,MACxB,GAAIiE,EACF,OAAOA,EAGT,GAAIjE,KAAKyD,UACP,OAjGN,SAAwBhB,GACtB,IAAIL,EAAS,IAAIM,WACbC,EAAUR,EAAgBC,GAE9B,OADAA,EAAOiC,WAAW5B,GACXE,EA6FI2B,CAAetE,KAAKyD,WACtB,GAAIzD,KAAK8D,iBACd,OAAOnE,QAAQR,QA5FrB,SAA+B2D,GAI7B,IAHA,IAAIC,EAAO,IAAIC,WAAWF,GACtByB,EAAQ,IAAI3H,MAAMmG,EAAKnF,QAElBjB,EAAI,EAAGA,EAAIoG,EAAKnF,OAAQjB,IAC/B4H,EAAM5H,GAAKwE,OAAOqD,aAAazB,EAAKpG,IAEtC,OAAO4H,EAAME,KAAK,IAqFSC,CAAsB1E,KAAK8D,mBAC7C,GAAI9D,KAAK2D,cACd,MAAM,IAAIO,MAAM,wCAEhB,OAAOvE,QAAQR,QAAQa,KAAKuD,YAI5B9C,IACFT,KAAK2E,SAAW,WACd,OAAO3E,KAAKoE,OAAOxE,KAAKgF,KAI5B5E,KAAK6E,KAAO,WACV,OAAO7E,KAAKoE,OAAOxE,KAAKkF,KAAKC,QAGxB/E,KA1MTyB,EAAQrD,UAAUyD,OAAS,SAASpD,EAAMd,GACxCc,EAAOyC,EAAczC,GACrBd,EAAQ0D,EAAe1D,GACvB,IAAIqH,EAAWhF,KAAK2B,IAAIlD,GACxBuB,KAAK2B,IAAIlD,GAAQuG,EAAWA,EAAW,KAAOrH,EAAQA,GAGxD8D,EAAQrD,UAAR,OAA8B,SAASK,UAC9BuB,KAAK2B,IAAIT,EAAczC,KAGhCgD,EAAQrD,UAAU2F,IAAM,SAAStF,GAE/B,OADAA,EAAOyC,EAAczC,GACduB,KAAKiF,IAAIxG,GAAQuB,KAAK2B,IAAIlD,GAAQ,MAG3CgD,EAAQrD,UAAU6G,IAAM,SAASxG,GAC/B,OAAOuB,KAAK2B,IAAIuD,eAAehE,EAAczC,KAG/CgD,EAAQrD,UAAU8E,IAAM,SAASzE,EAAMd,GACrCqC,KAAK2B,IAAIT,EAAczC,IAAS4C,EAAe1D,IAGjD8D,EAAQrD,UAAUwD,QAAU,SAASuD,EAAUC,GAC7C,IAAK,IAAI3G,KAAQuB,KAAK2B,IAChB3B,KAAK2B,IAAIuD,eAAezG,IAC1B0G,EAAS7G,KAAK8G,EAASpF,KAAK2B,IAAIlD,GAAOA,EAAMuB,OAKnDyB,EAAQrD,UAAUiH,KAAO,WACvB,IAAI9D,EAAQ,GAIZ,OAHAvB,KAAK4B,SAAQ,SAASjE,EAAOc,GAC3B8C,EAAM7D,KAAKe,MAEN6C,EAAYC,IAGrBE,EAAQrD,UAAUkH,OAAS,WACzB,IAAI/D,EAAQ,GAIZ,OAHAvB,KAAK4B,SAAQ,SAASjE,GACpB4D,EAAM7D,KAAKC,MAEN2D,EAAYC,IAGrBE,EAAQrD,UAAUmH,QAAU,WAC1B,IAAIhE,EAAQ,GAIZ,OAHAvB,KAAK4B,SAAQ,SAASjE,EAAOc,GAC3B8C,EAAM7D,KAAK,CAACe,EAAMd,OAEb2D,EAAYC,IAGjBd,IACFgB,EAAQrD,UAAUtB,OAAOC,UAAY0E,EAAQrD,UAAUmH,SAqJzD,IAAIC,EAAU,CAAC,SAAU,MAAO,OAAQ,UAAW,OAAQ,OAO3D,SAASC,EAAQC,EAAOC,GAEtB,IAAI1D,GADJ0D,EAAUA,GAAW,IACF1D,KAEnB,GAAIyD,aAAiBD,EAAS,CAC5B,GAAIC,EAAMxD,SACR,MAAM,IAAInE,UAAU,gBAEtBiC,KAAK4F,IAAMF,EAAME,IACjB5F,KAAK6F,YAAcH,EAAMG,YACpBF,EAAQjE,UACX1B,KAAK0B,QAAU,IAAID,EAAQiE,EAAMhE,UAEnC1B,KAAK8F,OAASJ,EAAMI,OACpB9F,KAAK+F,KAAOL,EAAMK,KAClB/F,KAAKgG,OAASN,EAAMM,OACf/D,GAA2B,MAAnByD,EAAMpC,YACjBrB,EAAOyD,EAAMpC,UACboC,EAAMxD,UAAW,QAGnBlC,KAAK4F,IAAMzE,OAAOuE,GAYpB,GATA1F,KAAK6F,YAAcF,EAAQE,aAAe7F,KAAK6F,aAAe,eAC1DF,EAAQjE,SAAY1B,KAAK0B,UAC3B1B,KAAK0B,QAAU,IAAID,EAAQkE,EAAQjE,UAErC1B,KAAK8F,OAjCP,SAAyBA,GACvB,IAAIG,EAAUH,EAAOI,cACrB,OAAOV,EAAQvE,QAAQgF,IAAY,EAAIA,EAAUH,EA+BnCK,CAAgBR,EAAQG,QAAU9F,KAAK8F,QAAU,OAC/D9F,KAAK+F,KAAOJ,EAAQI,MAAQ/F,KAAK+F,MAAQ,KACzC/F,KAAKgG,OAASL,EAAQK,QAAUhG,KAAKgG,OACrChG,KAAKoG,SAAW,MAEK,QAAhBpG,KAAK8F,QAAoC,SAAhB9F,KAAK8F,SAAsB7D,EACvD,MAAM,IAAIlE,UAAU,6CAEtBiC,KAAKqD,UAAUpB,GAOjB,SAAS2C,EAAO3C,GACd,IAAIoE,EAAO,IAAI3C,SAYf,OAXAzB,EACGqE,OACAC,MAAM,KACN3E,SAAQ,SAAS4E,GAChB,GAAIA,EAAO,CACT,IAAID,EAAQC,EAAMD,MAAM,KACpB9H,EAAO8H,EAAM/E,QAAQiF,QAAQ,MAAO,KACpC9I,EAAQ4I,EAAM9B,KAAK,KAAKgC,QAAQ,MAAO,KAC3CJ,EAAKxE,OAAO6E,mBAAmBjI,GAAOiI,mBAAmB/I,QAGxD0I,EAGT,SAASM,EAAaC,GACpB,IAAIlF,EAAU,IAAID,EAYlB,OAT0BmF,EAAWH,QAAQ,eAAgB,KACzCF,MAAM,SAAS3E,SAAQ,SAASiF,GAClD,IAAIC,EAAQD,EAAKN,MAAM,KACnBhH,EAAMuH,EAAMtF,QAAQ8E,OACxB,GAAI/G,EAAK,CACP,IAAI5B,EAAQmJ,EAAMrC,KAAK,KAAK6B,OAC5B5E,EAAQG,OAAOtC,EAAK5B,OAGjB+D,EAKT,SAASqF,EAASC,EAAUrB,GACrBA,IACHA,EAAU,IAGZ3F,KAAKgE,KAAO,UACZhE,KAAKiH,YAA4B5J,IAAnBsI,EAAQsB,OAAuB,IAAMtB,EAAQsB,OAC3DjH,KAAKkH,GAAKlH,KAAKiH,QAAU,KAAOjH,KAAKiH,OAAS,IAC9CjH,KAAKmH,WAAa,eAAgBxB,EAAUA,EAAQwB,WAAa,KACjEnH,KAAK0B,QAAU,IAAID,EAAQkE,EAAQjE,SACnC1B,KAAK4F,IAAMD,EAAQC,KAAO,GAC1B5F,KAAKqD,UAAU2D,GAjDjBvB,EAAQrH,UAAUgJ,MAAQ,WACxB,OAAO,IAAI3B,EAAQzF,KAAM,CAACiC,KAAMjC,KAAKsD,aAmCvCF,EAAK9E,KAAKmH,EAAQrH,WAgBlBgF,EAAK9E,KAAKyI,EAAS3I,WAEnB2I,EAAS3I,UAAUgJ,MAAQ,WACzB,OAAO,IAAIL,EAAS/G,KAAKsD,UAAW,CAClC2D,OAAQjH,KAAKiH,OACbE,WAAYnH,KAAKmH,WACjBzF,QAAS,IAAID,EAAQzB,KAAK0B,SAC1BkE,IAAK5F,KAAK4F,OAIdmB,EAASrH,MAAQ,WACf,IAAI2H,EAAW,IAAIN,EAAS,KAAM,CAACE,OAAQ,EAAGE,WAAY,KAE1D,OADAE,EAASrD,KAAO,QACTqD,GAGT,IAAIC,EAAmB,CAAC,IAAK,IAAK,IAAK,IAAK,KAE5CP,EAASQ,SAAW,SAAS3B,EAAKqB,GAChC,IAA0C,IAAtCK,EAAiBrG,QAAQgG,GAC3B,MAAM,IAAIO,WAAW,uBAGvB,OAAO,IAAIT,EAAS,KAAM,CAACE,OAAQA,EAAQvF,QAAS,CAAC+F,SAAU7B,MAGjE5G,EAAQwB,aAAeT,EAAKS,aAC5B,IACE,IAAIxB,EAAQwB,aACZ,MAAO3C,GACPmB,EAAQwB,aAAe,SAASkH,EAASjJ,GACvCuB,KAAK0H,QAAUA,EACf1H,KAAKvB,KAAOA,EACZ,IAAIiB,EAAQwE,MAAMwD,GAClB1H,KAAK2H,MAAQjI,EAAMiI,OAErB3I,EAAQwB,aAAapC,UAAYpB,OAAO4K,OAAO1D,MAAM9F,WACrDY,EAAQwB,aAAapC,UAAUI,YAAcQ,EAAQwB,aAGvD,SAASD,EAAMmF,EAAOmC,GACpB,OAAO,IAAIlI,SAAQ,SAASR,EAASC,GACnC,IAAI0I,EAAU,IAAIrC,EAAQC,EAAOmC,GAEjC,GAAIC,EAAQ9B,QAAU8B,EAAQ9B,OAAO+B,QACnC,OAAO3I,EAAO,IAAIJ,EAAQwB,aAAa,UAAW,eAGpD,IAAIwH,EAAM,IAAIC,eAEd,SAASC,IACPF,EAAIG,QAGNH,EAAI3F,OAAS,WACX,IAAIsD,EAAU,CACZsB,OAAQe,EAAIf,OACZE,WAAYa,EAAIb,WAChBzF,QAASiF,EAAaqB,EAAII,yBAA2B,KAEvDzC,EAAQC,IAAM,gBAAiBoC,EAAMA,EAAIK,YAAc1C,EAAQjE,QAAQqC,IAAI,iBAC3E,IAAI9B,EAAO,aAAc+F,EAAMA,EAAIX,SAAWW,EAAIM,aAClDnJ,EAAQ,IAAI4H,EAAS9E,EAAM0D,KAG7BqC,EAAIzF,QAAU,WACZnD,EAAO,IAAIrB,UAAU,4BAGvBiK,EAAIO,UAAY,WACdnJ,EAAO,IAAIrB,UAAU,4BAGvBiK,EAAIQ,QAAU,WACZpJ,EAAO,IAAIJ,EAAQwB,aAAa,UAAW,gBAG7CwH,EAAIS,KAAKX,EAAQhC,OAAQgC,EAAQlC,KAAK,GAEV,YAAxBkC,EAAQjC,YACVmC,EAAIU,iBAAkB,EACW,SAAxBZ,EAAQjC,cACjBmC,EAAIU,iBAAkB,GAGpB,iBAAkBV,GAAOvH,IAC3BuH,EAAIW,aAAe,QAGrBb,EAAQpG,QAAQE,SAAQ,SAASjE,EAAOc,GACtCuJ,EAAIY,iBAAiBnK,EAAMd,MAGzBmK,EAAQ9B,SACV8B,EAAQ9B,OAAO6C,iBAAiB,QAASX,GAEzCF,EAAIc,mBAAqB,WAEA,IAAnBd,EAAIe,YACNjB,EAAQ9B,OAAOgD,oBAAoB,QAASd,KAKlDF,EAAIiB,KAAkC,qBAAtBnB,EAAQxE,UAA4B,KAAOwE,EAAQxE,cAIvE/C,EAAM2I,UAAW,EAEZnJ,EAAKQ,QACRR,EAAKQ,MAAQA,EACbR,EAAK0B,QAAUA,EACf1B,EAAK0F,QAAUA,EACf1F,EAAKgH,SAAWA,GAGlB/H,EAAQyC,QAAUA,EAClBzC,EAAQyG,QAAUA,EAClBzG,EAAQ+H,SAAWA,EACnB/H,EAAQuB,MAAQA,EAEhBvD,OAAOmM,eAAenK,EAAS,aAAc,CAAErB,OAAO,IA5gBtC,CAghBhB,IAlhBF,CAmhBG0C,GACHA,EAASE,MAAM6I,UAAW,SAEnB/I,EAASE,MAAM2I,SAGtB,IAAIG,EAAMhJ,GACVrB,EAAUqK,EAAI9I,OACN+I,QAAUD,EAAI9I,MACtBvB,EAAQuB,MAAQ8I,EAAI9I,MACpBvB,EAAQyC,QAAU4H,EAAI5H,QACtBzC,EAAQyG,QAAU4D,EAAI5D,QACtBzG,EAAQ+H,SAAWsC,EAAItC,SACvBhI,EAAOC,QAAUA,G,6FCriBF,SAASuK,EAAmB7M,GACzC,OCJa,SAA4BA,GACzC,GAAIE,MAAMC,QAAQH,GAAM,OAAO,OAAA8M,EAAA,GAAiB9M,GDGzC,CAAkBA,IELZ,SAA0B+M,GACvC,GAAsB,qBAAX3M,QAA0BA,OAAOC,YAAYC,OAAOyM,GAAO,OAAO7M,MAAM8B,KAAK+K,GFIvD,CAAgB/M,IAAQ,OAAAoB,EAAA,GAA2BpB,IGLvE,WACb,MAAM,IAAIqB,UAAU,wIHIwE,K,8/BIMxF,EAAmB,SAAC,GAAD,OACvB,EAAI,KAAO,EAAI,SAAW,EAAI,mBAAqB,EAAI,OAAS,KAAK,UAAU,IAE3E,EAAc,SAAC,EAAY,GAC7B,GAAwB,oBAAf,EAAM,KACX,OAAG,EAAO,GAEd,EAAI,OAAO,MAAK,SAACF,GACb,OAAG,EAAO,CACZ,QAAS,EAAiB,GAC1B,QAAa,OAAL,QAAK,IAAL,OAAK,EAAL,EAAO,SAAU,UAKzB,EAAoB,SAAC,EAA2B,EAAwB,GAC1E,IAAI,EAA+B,CAAE,SAAQ,SAAgB,OAAP,QAAO,IAAP,OAAO,EAAP,EAAS,UAAW,IAE1E,MAAa,QAAX,IAIF,EAAK,QAAO,eAAK,eAAgB,4BAAsC,OAAP,QAAO,IAAP,OAAO,EAAP,EAAS,SACzE,EAAK,KAAO,KAAK,UAAU,IAJpB,GASX,SAAe,EACb,EACA,EACA,EACA,G,6IAEO,IAAI,SAAQ,SAAC,EAAS,GAC3B,IAAM,EAAK,EAAkB,EAAQ,EAAS,IAC3C,MAAK,SAAC,GACL,IAAK,EAAO,GAAI,MAAM,EACtB,OAAW,OAAP,QAAO,IAAP,OAAO,EAAP,EAAS,eAAsB,EAC5B,EAAO,UAEf,MAAK,SAAC,GAAD,OAAU,EAAQ,MACvB,OAAM,SAAC,GAAD,OAAW,EAAY,EAAO,U,2CAIrC,SAAgB,EAAI,EAAa,G,6IAC9B,EAAe,MAAO,EAAK,I,2CAG9B,SAAgB,EAAK,EAAa,EAAc,G,6IAC7C,EAAe,OAAQ,EAAK,EAAS,I,2CAGxC,SAAgB,EAAI,EAAa,EAAc,G,6IAC5C,EAAe,MAAO,EAAK,EAAS,I,2CAGvC,SAAgB,EAAO,EAAa,EAAc,G,6IAC/C,EAAe,SAAU,EAAK,EAAS,I,2CCtEzC,IAIM,EAAc,sBACd,EAAiB,CAC1B,KAAI,WACJ,SAAQ,MACR,OAAM,GACR,KAAM,IACN,SAAU,OCsHZ,SAAS,EAAgB,EAAgB,G,UACvC,OArHF,SACE,EACA,EACA,GAUE,IAAI6L,EAAM,GAAW,GACjB,EAAM,mBACN,EAAqB,wCAEzB,GAAiB,oBAAR,EACT,MAAM,IAAI,UAAU,4BAGpB,IAAG,EAAmB,KAAK,GACvB,MAAE,IAAI,UAAU,4BAGpB,IAAI,EAAQ,EAAI,GAEhB,GAAE,IAAU,EAAmB,KAAK,GAChC,MAAE,IAAI,UAAU,2BAGpB,IAAE,EAAM,EAAO,IAAM,EAErB,GAAE,MAAQ,EAAI,OAAQ,CACtB,IAAM,EAAS,EAAI,OAAS,EAE5B,GAAI,MAAM,KAAY,SAAS,GAC7B,MAAM,IAAI,UAAU,4BAGlB,GAAG,aAAe,KAAK,MAAM,GAGjC,GAAE,EAAI,OAAQ,CACV,IAAC,EAAmB,KAAK,EAAI,QACzB,UAAI,UAAU,4BAGlB,GAAG,YAAc,EAAI,OAGzB,GAAE,EAAI,KAAM,CACZ,IAAK,EAAmB,KAAK,EAAI,MAC/B,MAAM,IAAI,UAAU,0BAGtB,GAAO,UAAY,EAAI,KAGvB,GAAE,EAAI,QAAS,CACX,GAAmC,oBAA5B,EAAI,QAAQ,YACrB,MAAM,IAAI,UAAU,6BAGlB,GAAG,aAAe,EAAI,QAAQ,cAWlC,GARE,EAAI,WACN,GAAO,cAGL,EAAI,SACN,GAAO,YAGL,EAAI,SAGF,OAFqC,kBAAjB,EAAI,SAAwB,EAAI,SAAS,cAAgB,EAAI,UAGnF,IAAK,MACH,GAAO,iBACP,MACF,IAAK,SACH,GAAO,oBACP,MACF,IAAK,OACH,GAAO,kBACP,MACF,QACE,MAAM,IAAI,UAAU,8BAIxB,OAAK,EAwBA,CAAU,EAAO,KAAM,EAAO,MAAO,CAC1C,OAAQ,EAAO,OACf,QAAS,IAAI,KAAK,KAAK,MAAwB,IAAhB,EAAO,QACtC,UAAU,EACV,SACA,KAAiB,QAAb,EAAE,EAAO,YAAI,QAAI,IACrB,OAAqB,QAAf,EAAE,EAAO,cAAM,QAAI,GACzB,SAAyB,QAAjB,EAAE,EAAO,gBAAQ,QAAI,QAO3B,SAAU,EAAW,EAAU,EAAU,GAC7C,IAAM,EAAa,EAAQ,KAAI,SAAC,GAAD,OAAO,EAAgB,EAjCxD,SAA6B,GAC3B,IAAK,IAAQ,EAAI,UAAY,EAAI,QAAQ,KACvC,MAAM,IAAI,MAAM,8CAGlB,IAAM,EACH,EAAI,QAAQ,KAAK,QAAQ,MAAQ,GAAK,EAAI,QAAQ,KAAK,MAAM,KAAK,IAAO,EAAI,QAAQ,KACtF,QAAE,CAAC,YAAa,aAAa,QAAQ,IAAS,GAAK,EAAK,SAAS,WA0BV,CAAoB,OACvE,EAAkB,EAAI,UAAU,cAClC,IACE,aAA2B,MAC7B,MAAM,UAAU,KAAK,MAAM,EAAY,GACH,kBAApB,GAChB,EAAW,KAAK,IAGpB,EAAI,UAAU,aAAc,GAMxB,SAAU,EAAU,EAAU,EAAU,GAC5C,EAAW,EAAK,EAAK,CAAC,IChKlB,SAAU,EAAU,GAExB,OADgB,KAAK,MAAM,KAAK,MAAQ,KACvB,EAWZ,IAAM,EAAY,iBAAwB,qBAAX,QAEhC,SAAU,EAAmB,EAAc,GAC1C,IAAK,EAAM,OAAO,SAAS,MAChC,EAAO,EAAK,QAAQ,UAAW,QAC/B,IACE,EADU,IAAI,OAAO,QAAU,EAAO,qBACtB,KAAK,GACvB,OAAK,EACA,EAAQ,GACN,mBAAmB,EAAQ,GAAG,QAAQ,MAAO,MAD5B,GADH,KAKvB,IAAa,EAAb,WAIE,WAAY,GAAqB,oBAC/B,KAAK,aAAe,GAAgB,WAAW,aALnD,OAAE,gBAAF,kBAOE,WACE,OAAO,KAAK,aAAa,UAR7B,iBAUE,SAAI,GACF,OAAO,KAAK,aAAa,IAAI,KAXjC,qBAaE,SAAQ,EAAa,GACnB,OAAO,KAAK,aAAa,QAAQ,EAAK,KAd1C,qBAgBE,SAAQ,GACN,OAAO,KAAK,aAAa,QAAQ,KAjBrC,wBAmBE,SAAW,GACT,OAAO,KAAK,aAAa,WAAW,OApBxC,K,sSCnBqB,E,WAOnB,cAUC,QATC,WASD,MATO,GASP,MARC,eAQD,MARW,GAQX,EAPC,EAOD,EAPC,cAOD,oBACC,KAAK,IAAM,EACX,KAAK,QAAU,EACf,KAAK,cAAa,+BAAQ,GAAmB,G,mDAYzC,SACJ,EACA,GAGY,IAFZ,EAEM,uDAAF,G,gIAQW,O,SALT,EAAO,iBAAQ,KAAK,SACpB,EAAc,GACd,EAAQ,aACV,EAAc,gBAAkB,mBAAmB,EAAQ,a,SAE1C,EAAI,UAAI,KAAK,IAAT,kBAAsB,GAAe,CAAE,QAAO,YAAY,CAAE,Y,cAA7E,E,QACF,EAAO,iBAAQ,IACP,aAAY,EAAQ,WAAa,EAAU,EAAK,a,kBACrD,CAAE,KAAM,EAAS,MAAO,O,2DAExB,CAAE,KAAM,KAAM,MAAK,O,yFAUxB,SACJ,EACA,GAGM,IAFN,EAEM,uDAAF,G,gIAQW,O,SALT,EAAO,iBAAQ,KAAK,SACpB,EAAc,uBACd,EAAQ,aACV,GAAe,gBAAkB,mBAAmB,EAAQ,a,SAE3C,EAAI,UAAI,KAAK,IAAT,iBAAqB,GAAe,CAAE,QAAO,YAAY,CAAE,Y,cAA5E,E,QACF,EAAO,iBAAQ,IACP,aAAY,EAAQ,WAAa,EAAU,EAAK,a,kBACrD,CAAE,KAAM,EAAS,MAAO,O,2DAExB,CAAE,KAAM,KAAM,MAAK,O,4FASxB,SACJ,GAGM,IAFN,EAEM,uDAAF,G,8HAQW,O,SALT,EAAO,iBAAQ,KAAK,SACpB,EAAc,GACd,EAAQ,aACV,GAAe,gBAAkB,mBAAmB,EAAQ,a,SAE3C,EAAI,UAAI,KAAK,IAAT,qBAAyB,GAAe,CAAE,SAAS,CAAE,Y,cAAtE,E,yBACC,CAAE,OAAM,MAAO,O,2DAEf,CAAE,KAAM,KAAM,MAAK,O,2FASxB,SACJ,GAGM,IAFN,EAEM,uDAAF,G,8HAQW,O,SALT,EAAO,iBAAQ,KAAK,SACpB,EAAc,GACd,EAAQ,aACV,GAAe,gBAAkB,mBAAmB,EAAQ,a,SAE3C,EAAI,UAAI,KAAK,IAAT,kBAAsB,GAAe,CAAE,SAAS,CAAE,Y,cAAnE,E,yBACC,CAAE,OAAM,MAAO,O,2DAEf,CAAE,KAAM,KAAM,MAAK,O,+FASxB,SACJ,GAGM,IAFN,EAEM,uDAAF,G,8HAQW,O,SALT,EAAO,iBAAQ,KAAK,SACpB,EAAc,GACd,EAAQ,aACV,GAAe,gBAAkB,mBAAmB,EAAQ,a,SAE3C,EAAI,UAAI,KAAK,IAAT,mBAAuB,GAAe,CAAE,SAAS,CAAE,Y,cAApE,E,yBACC,CAAE,OAAM,MAAO,O,2DAEf,CAAE,KAAM,KAAM,MAAK,O,+FAStB,SAAsB,GAC5B,IAAM,EAAO,iBAAQ,KAAK,SAE1B,OADA,EAAO,cAAP,iBAAqC,GAC9B,I,qBAOH,SAAQ,G,oHAEV,O,kBAAM,EAAI,UACL,KAAK,IADA,WAER,GACA,CAAE,QAAS,KAAK,sBAAsB,GAAM,eAAe,I,gCAEtD,CAAE,MAAO,O,yDAET,CAAE,MAAK,O,yFAUlB,SACE,EACA,GAKM,IAAF,EAAsB,oBAAa,mBAAmB,KAO1D,OANW,OAAP,QAAO,IAAP,OAAO,EAAP,EAAS,aACX,EAAU,KAAV,sBAA8B,mBAAmB,EAAQ,eAEhD,OAAP,QAAO,IAAP,OAAO,EAAP,EAAS,SACX,EAAU,KAAV,iBAAyB,mBAAmB,EAAQ,UAEtD,UAAU,KAAK,IAAf,sBAAgC,EAAU,KAAK,Q,qBAO3C,SACJ,G,0HAGoB,O,kBAAM,EAAG,UAAI,KAAK,IAAT,SAAqB,CAAE,QAAS,KAAK,sBAAsB,K,cAAhF,E,yBACC,CAAE,KAAM,EAAM,OAAM,MAAO,O,yDAE3B,CAAE,KAAM,KAAM,KAAM,KAAM,MAAK,O,mFASpC,SACJ,EACA,G,0HAGoB,O,kBAAM,EAAG,UAAI,KAAK,IAAT,SAAqB,EAAY,CAC1D,QAAS,KAAK,sBAAsB,K,cADhC,E,yBAGC,CAAE,KAAM,EAAM,OAAM,MAAO,O,yDAE3B,CAAE,KAAM,KAAM,KAAM,KAAM,MAAK,O,mFASpC,SACJ,EACA,G,0HAGoB,O,kBAAM,EAAM,UACzB,KAAK,IADoB,wBACD,GAC3B,GACA,CACE,QAAS,KAAK,sBAAsB,K,cAJlC,E,yBAOC,CAAE,KAAM,EAAM,OAAM,MAAO,O,yDAE3B,CAAE,KAAM,KAAM,KAAM,KAAM,MAAK,O,2FAQpC,SACJ,G,4HAGoB,O,kBAAM,EAAI,UACvB,KAAK,IADkB,mCAE1B,CAAE,cAAe,GACjB,CAAE,QAAS,KAAK,U,cAHZ,E,QAKF,EAAO,iBAAQ,IACP,aAAY,EAAQ,WAAa,EAAU,EAAK,a,kBACrD,CAAE,KAAM,EAAS,MAAO,O,yDAExB,CAAE,KAAM,KAAM,MAAK,O,sFAQ9B,SAAc,EAAU,GACH,SAAf,EAAI,SACN,EAAI,UAAU,QAAS,QACvB,EAAI,OAAO,KAAK,IAAI,uBAEtB,MAA2B,EAAI,KAAvB,EAAR,EAAQ,MAAO,EAAf,EAAe,QACf,IAAK,EAAO,MAAM,IAAI,MAAM,uBAC5B,GAAc,cAAV,EAAuB,CACzB,IAAK,EAAS,MAAM,IAAI,MAAM,yBAC9B,EAAU,EAAK,EAAK,CAClB,KAAM,KAAK,cAAc,KACzB,MAAO,EAAQ,aACf,OAAQ,KAAK,cAAc,OAC3B,OAAQ,KAAK,cAAc,SAC3B,KAAM,KAAK,cAAc,KACzB,SAAU,KAAK,cAAc,WAGnB,eAAV,GFpJF,SAAuB,EAAU,EAAU,GAC/C,EAAU,EAAK,EAAK,CAClB,OACA,MAAO,GACP,QAAS,IEgJmB,CAAa,EAAK,EAAK,KAAK,cAAc,MACtE,EAAI,OAAO,KAAK,KAAK,M,6BAOjB,SACJ,G,4IAGO,EAAI,Q,sBACD,IAAI,MACR,mG,UAEC,EAAI,QAAQ,KAAK,cAAc,M,sBAAc,IAAI,MAAM,oB,OAEpC,OADlB,EAAQ,EAAI,QAAQ,KAAK,cAAc,M,SACf,KAAK,QAAQ,G,mBAAnC,E,EAAA,OAAM,E,EAAA,O,uBACG,E,iCACV,CAAE,OAAM,KAAM,EAAM,MAAO,O,2DAE3B,CAAE,KAAM,KAAM,KAAM,KAAM,MAAK,O,8WCxUtC,WACF,GAAwB,kBAAf,WACT,IACI1M,OAAG,eAAe,OAAO,UAAW,YAAa,CAC7C+G,IAAD,WACK,OAAD,MAEH4F,cAAQ,IAEZC,UAAM,WAAa,iBAChB,OAAO,UAAU,UACxB,MAAO,GACa,qBAAT,OACT,KAAK,WAAa,OCHxB,GAEA,ICVY,EDUN,EAAkB,CACpB,ILlBsB,wBKmBtB,kBAAgB,EAChB,gBAAc,EAChB,aAAc,WAAW,aACzB,oBAAoB,EAClB,QLrB2B,IOAlB,EAAb,YAAE,qBAAF,iBACI,SAAF,EAAYjE,GAOX,uCACO,GATR,OAAF,G,WFqDI,SAAF,EAAY,GAQX,oBApBS,yBAAiD,IAAI,IAqB7D,IAAM,EAAQ,+BAAQ,GAAoB,GACtC,KAAC,YAAc,KACf,KAAC,eAAiB,KAClB,KAAC,iBAAmB,EAAS,iBAC7B,KAAC,eAAiB,EAAS,eAC3B,KAAC,aAAe,IAAI,EAAa,EAAS,cAC1C,KAAC,IAAM,IAAI,EAAU,CACjB,IAAD,EAAS,IACR,QAAG,EAAS,QACZ,cAAS,EAAS,gBAEtB,KAAC,kBACD,KAAC,qBAGD,IACE,EAAS,oBAAsB,KAAiB,EAAmB,iBAC7D,KAAH,kBAAkB,CAAE,cAAc,IAEzC,MAAO,GACD,QAAE,IAAI,oC,0CAWV,YAIE,IAHJ,EAGI,EAHJ,MAAO,EAGH,EAHG,SACT,EAEM,uDAAF,G,kIAUsB,O,SAFxB,KAAK,iB,SAEyB,KAAK,IAAI,gBAAgB,EAAQ,EAAW,CACxE,WAAY,EAAQ,a,mBADd,E,EAAA,OAAM,E,EAAA,O,sBAKN,E,UAGH,E,sBACG,gC,eAGJ,EAA0B,KAC1B,EAAoB,KAEnB,EAAiB,eAEpB,GADA,EAAU,GACK,KACf,KAAK,aAAa,GAClB,KAAK,sBAAsB,cAGxB,EAAc,KACjB,EAAO,G,kBAGF,CAAE,OAAM,OAAM,UAAS,MAAO,O,2DAE9B,CAAE,KAAM,KAAM,KAAM,KAAM,QAAS,KAAM,MAAK,O,gFAcnD,YAKE,IAJJ,EAII,EAJJ,MAAO,EAIH,EAJG,SAAU,EAIb,EAJa,aAAc,EAI3B,EAJ2B,SACjC,EAGM,uDAAF,G,4IAUF,KAAK,kBAED,GAAU,E,gBACM,O,SAAM,KAAK,IAAI,mBAAmB,EAAO,CACzD,WAAY,EAAQ,a,uBADd,E,EAAA,M,kBAGD,CAAE,KAAM,KAAM,KAAM,KAAM,QAAS,KAAM,U,WAE9C,IAAS,E,0CACJ,KAAK,mBAAmB,EAAO,EAAU,CAC9C,WAAY,EAAQ,c,YAGpB,E,iBAEgB,O,UAAM,KAAK,kBAAkB,G,sBAAvC,E,EAAA,O,uBACS,E,iCAEV,CACL,KAAM,KAAK,eACX,KAAM,KAAK,YACX,QAAS,KAAK,eACd,MAAO,O,YAGP,E,0CACK,KAAK,sBAAsB,EAAU,CAC1C,WAAY,EAAQ,WACpB,OAAQ,EAAQ,U,cAGd,IAAI,MAAJ,+D,2DAEC,CAAE,KAAM,KAAM,KAAM,KAAM,QAAS,KAAM,MAAK,O,8EASzD,WACQ,OAAC,KAAK,c,qBAMd,WACQ,OAAC,KAAK,iB,4BAMR,W,8IAMsB,QAApB,EAAC,KAAK,sBAAc,eAAE,a,sBAAoB,IAAI,MAAM,kB,OAGtC,O,SAAM,KAAK,oB,qBAArB,E,EAAA,O,sBACS,E,gCAEV,CAAE,KAAM,KAAK,eAAgB,KAAM,KAAK,YAAa,MAAO,O,2DAE5D,CAAE,KAAM,KAAM,KAAM,KAAM,MAAK,O,gFAOpC,SACJ,G,kJAG0B,QAApB,EAAC,KAAK,sBAAc,eAAE,a,sBAAoB,IAAI,MAAM,kB,OAEhC,O,SAAM,KAAK,IAAI,WACrC,KAAK,eAAe,aACpB,G,mBAFM,E,EAAA,OAAM,E,EAAA,O,uBAIG,E,WACZ,E,uBAAY,MAAM,sB,eAEjB,EAAO,+BAAQ,KAAK,gBAAc,CAAE,SAC1C,KAAK,aAAa,GAClB,KAAK,sBAAsB,gB,kBAEpB,CAAE,KAAM,EAAM,OAAM,MAAO,O,2DAE3B,CAAE,KAAM,KAAM,KAAM,KAAM,MAAK,O,oFAQpC,SACJ,G,0IAGO,E,sBACG,IAAI,MAAM,uB,OAEM,O,SAAM,KAAK,IAAI,mBAAmB,G,mBAAlD,E,EAAA,OAAM,E,EAAA,O,0CAEL,CAAE,QAAS,KAAM,MAAO,I,WAE5B,E,0CACI,CACL,QAAS,KACT,MAAO,CAAE,KAAM,wBAAyB,QAAS,mC,eAIrD,KAAK,aAAa,GAClB,KAAK,sBAAsB,a,kBACpB,CAAE,QAAS,EAAM,MAAO,O,2DAExB,CAAE,MAAK,KAAE,QAAS,O,iFAQ7B,SAAQ,GAQA,OAPN,KAAK,eAAc,+BACd,KAAK,gBAAc,CACtB,eACA,WAAY,SACZ,KAAM,OAGD,KAAK,iB,+BAOR,SAAkB,G,4JAIf,I,sBAAmB,IAAI,MAAM,wB,YAE5B,EAAoB,EAAmB,sB,sBAChB,IAAI,MAAM,G,UAEjC,EAAiB,EAAmB,kBACpC,EAAe,EAAmB,gB,uBACf,IAAI,MAAM,6B,WAC7B,EAAa,EAAmB,c,uBACf,IAAI,MAAM,2B,WAC3B,EAAgB,EAAmB,iB,uBACf,IAAI,MAAM,8B,WAC9B,EAAa,EAAmB,c,uBACf,IAAI,MAAM,2B,QAKT,OAHlB,EAAU,KAAK,MAAM,KAAK,MAAQ,KAClC,EAAa,EAAU,SAAS,G,UAER,KAAK,IAAI,QAAQ,G,oBAAvC,E,EAAA,OAAM,E,EAAA,O,uBACG,E,eAEX,EAAmB,CACvB,iBACA,eACA,WAAY,SAAS,GACrB,aACA,gBACA,aACA,KAAM,IAEG,OAAP,QAAO,IAAP,OAAO,EAAP,EAAS,gBACX,KAAK,aAAa,GAClB,KAAK,sBAAsB,aACQ,aAA/B,EAAmB,SACrB,KAAK,sBAAsB,sBAI/B,OAAO,SAAS,KAAO,G,kBAEhB,CAAE,KAAM,EAAS,MAAO,O,2DAExB,CAAE,KAAM,KAAM,MAAK,O,iFAUxB,W,uIACE,EAAiC,QAAtB,EAAG,KAAK,sBAAc,eAAE,aACzC,KAAK,iBACL,KAAK,sBAAsB,eACvB,E,iBACgB,O,SAAM,KAAK,IAAI,QAAQ,G,qBAAjC,E,EAAA,O,0CACU,CAAE,U,iCAEf,CAAE,MAAO,O,kFAOlB,SACE,GAEM,IACJ,IAAM,EHhYH,uCAAuC,QAAQ,SAAS,SAAU,GACvE,IAAI,EAAqB,GAAhB,KAAK,SAAiB,EAE/B,OADW,KAAL,EAAW,EAAS,EAAJ,EAAW,GACxB,SAAS,OG8XV,EAAO,KACP,EAA6B,CACjC,KACA,WACA,YAAa,WACX,EAAK,oBAAoB,OAAO,KAIpC,OADA,KAAK,oBAAoB,IAAI,EAAI,GAC1B,CAAE,KAAM,EAAc,MAAO,MACpC,MAAO,GACP,MAAO,CAAE,KAAM,KAAM,Y,gCAIX,SACZ,EACA,GAGY,I,EAFZ,EAEM,uDAAF,G,8HAGsB,O,kBAAM,KAAK,IAAI,gBAAgB,EAAO,EAAU,CACtE,WAAY,EAAQ,a,mBADd,E,EAAA,OAAM,E,EAAA,QAGA,E,yCAAa,CAAE,KAAM,KAAM,KAAM,KAAM,QAAS,KAAM,U,cAEtD,QAAd,EAAQ,OAAJ,QAAI,IAAJ,OAAI,EAAJ,EAAM,YAAI,eAAE,gBACd,KAAK,aAAa,GAClB,KAAK,sBAAsB,c,kBAGtB,CAAE,OAAM,KAAM,EAAK,KAAM,QAAS,EAAM,MAAO,O,2DAE/C,CAAE,KAAM,KAAM,KAAM,KAAM,QAAS,KAAM,MAAK,O,+FAIjD,SACN,GAIM,IAHN,EAGM,uDAAF,GAEE,EAAc,KAAK,IAAI,kBAAkB,EAAU,CAC/C,WAAI,EAAQ,WACpB,OAAQ,EAAQ,SAGlB,IAKU,OAHJ,MACF,OAAO,SAAS,KAAO,GAElB,CAAE,WAAU,MAAK,KAAM,KAAM,QAAS,KAAM,KAAM,KAAM,MAAO,MACtE,MAAO,GAEC,OAAF,EAAY,CAAE,WAAU,MAAK,KAAM,KAAM,QAAS,KAAM,KAAM,KAAM,MAAO,MAC1E,CAAE,KAAM,KAAM,KAAM,KAAM,QAAS,KAAM,Y,6BAQ5C,W,MACA,IACJ,IAAM,EAAO,MAAgC,QAArB,EAAI,KAAK,oBAAY,eAAE,QAAQ,IACvD,IAAK,GAAwB,kBAAT,EAClB,OAAO,KAGT,IAAM,EAAO,KAAK,MAAM,GAChB,EAA8B,EAA9B,eAA8B,EAAd,WACR,KAAK,MAAM,KAAK,MAAQ,OAEE,OAAd,QAAc,IAAd,OAAc,EAAd,EAAgB,QAC1C,KAAK,aAAa,GAClB3F,KAAK,sBAAsB,cAE7B,MAAO,GACP,QAAQ,IAAI,QAAS,M,gCAQX,W,uJAEG,K,qBAAgB,O,SAAM,KAAK,aAAa,QAAQ,G,6BAAvD,E,8CAEG,M,UAGH,EAAO,KAAK,MAAM,GAChB,EAA8B,EAA9B,eAAgB,EAAc,EAAd,UAClB,EAAU,KAAK,MAAM,KAAK,MAAQ,OAEpC,EAAY,G,qBACV,KAAK,mBAAoB,EAAe,c,iBACxB,O,UAAM,KAAK,kBAAkB,EAAe,e,sBAAtD,E,EAAA,O,iBAGN,OADA,QAAQ,IAAI,EAAM,S,UACZ,KAAK,iB,gCAGb,KAAK,iB,gCAEG,GAAmB,EAAe,MAM5C,KAAK,aAAa,GAClB,KAAK,sBAAsB,eAN3B,QAAQ,IAAI,oCACZ,KAAK,kB,iEAQP,QAAQ,MAAR,M,kBACO,M,2FAIG,SAAkB,G,0BAAA,EAAmC,QAAnC,EAAgB,KAAK,sBAAc,eAAE,e,mIAE5D,E,sBACG,IAAI,MAAM,uB,OAEM,O,SAAM,KAAK,IAAI,mBAAmB,G,mBAAlD,E,EAAA,OAAM,E,EAAA,O,uBACG,E,WACZ,E,uBAAY,MAAM,yB,eAEvB,KAAK,aAAa,GAClB,KAAK,sBAAsB,a,kBAEpB,CAAE,OAAM,MAAO,O,2DAEf,CAAE,KAAM,KAAM,MAAK,O,+FAItB,SAAsB,GAAsB,WAClD,KAAK,oBAAoB,SAAQ,SAAC,GAAD,OAAO,EAAE,SAAS,EAAO,EAAK,qB,0BAOzD,SAAa,GACnB,KAAK,eAAiB,EACtB,KAAK,YAAc,EAAQ,KAE3B,IAAM,EAAY,EAAQ,WAC1B,GAAI,EAAW,CACb,IACM,EAAY,EADF,KAAK,MAAM,KAAK,MAAQ,KAElC,EAA+B,EAAY,GAAK,GAAK,GAC3D,KAAK,uBAAoE,KAA5C,EAAY,IAKvC,KAAK,gBAAkB,EAAQ,YACjC,KAAK,gBAAgB,KAAK,kB,6BAItB,SAAgB,GACtB,IAAM,EAAO,CAAE,iBAAgB,UAAW,EAAe,YACzD,KAAe,KAAK,aAAa,QAAQ,EAAa,KAAK,UAAU,M,4BAGzD,W,uHACZ,KAAK,eAAiB,KACtB,KAAK,YAAc,KACf,KAAK,mBAAmB,aAAa,KAAK,mB,KAC9C,K,qBAAgB,O,SAAM,KAAK,aAAa,WAAW,G,sFAO7C,SAAuB,GAAa,WACtC,KAAK,mBAAmB,aAAa,KAAK,mBAC1C,GAAS,IAAM,KAAK,mBAExB,KAAK,kBAAoB,YAAW,kBAAM,EAAK,sBAAqB,GACxB,oBAAjC,KAAK,kBAAkB,OAAsB,KAAK,kBAAkB,a,qTGvhB7D,EAAtB,WAQI,SAAF,EAAY,GAA4B,oBAClC,OAAG,OAAO,KAAM,GATtB,uBAAE,IAAJ,eAAI,MAkBF,WAEQ,OADA,KAAD,oBAAqB,EACnB,OApBX,CAAI,IAAJ,OAAI,MAuBF,SACE,EAIA,GAAmF,WAcnF,MAX2B,qBAAhB,KAAK,SAEL,CAAC,MAAO,QAAQ,SAAS,KAAK,QACvC,KAAK,QAAQ,kBAAoB,KAAK,OAEtC,KAAK,QAAQ,mBAAqB,KAAK,QAErB,QAAhB,KAAK,QAAoC,SAAhB,KAAK,SAChC,KAAK,QAAQ,gBAAkB,oBAG1B,IAAM,KAAK,IAAI,WAAY,CAChC,OAAQ,KAAK,OACb,QAAS,KAAK,QACd,KAAM,KAAK,UAAU,KAAK,QAEzB,MAAK,SAAO,GAAP,OAAc,uIACd,EAAQ,KACR,EAAO,KACP,EAAQ,MAER,EAAI,GALU,oBAMV,EAAwC,QAAzB,EAAG,KAAK,QAAL,cAAsB,eAAE,MAAM,KAAK,SAAS,kBAChD,SAAhB,KAAK,QAAsB,EAPf,iBAQD,OARC,SAQK,EAAI,OART,QAQR,EARQ,UAYZ,EADoC,aAA3B,KAAK,QAAL,OACF,EAEA,KAAK,MAAM,IAdN,QAkBV,EAAoC,QAAzB,EAAG,KAAK,QAAL,cAAsB,eAAE,MAAM,mCAC5C,EAA+C,QAAnC,EAAG,EAAI,QAAQ,IAAI,wBAAgB,eAAE,MAAM,KACzD,GAAe,GAAgB,EAAa,OAAS,IACvD,EAAQ,SAAS,EAAa,KArBhB,wBAwBR,OAxBQ,UAwBF,EAAI,OAxBF,aAwBhB,EAxBgB,UA0BH,KAAK,mBA1BF,uBA2BR,EA3BQ,eA+BZ,EAA0C,CAC9C,QACA,OACA,QACA,OAAQ,EAAI,OACZ,WAAY,EAAI,WAChB,KAAM,GArCU,kBAwCX,GAxCW,oDA0CnB,KAAK,EAAa,OAzFzB,KCpBqB,E,kDAAnB,SAAF,IAAI,IAAJ,EAAI,4B,2BAgLF,GAAK,EAAK,SAwBV,KAAK,EAAK,YAeV,KAAK,EAAK,QAeN,EAAJ,GAAK,EAAK,QAeN,EAAJ,IAAM,EAAK,SAeX,MAAM,EAAK,SAeX,MAAM,EAAK,cAqBX,KAAK,EAAK,SAxSZ,E,uCAQE,SAAI,EAAiB,EAA0B,GAE7C,OADA,KAAK,IAAI,aAAa,OAAtB,UAAgC,GAAhC,cAAiD,EAAjD,YAA6D,IACtD,O,gBAST,SAAG,GAAiE,6DAAF,GAA5C,EAA8C,EAA9C,aACd,EAA8B,qBAAjB,EAA+B,KAAtC,UAAgD,EAAhD,OAEZ,OADA,KAAK,IAAI,aAAa,OAAO,EAA7B,WAAsC,EAAtC,MACO,O,gBAUT,SAAG,EAAiB,GAElB,OADA,KAAK,IAAI,aAAa,OAAtB,UAAgC,GAAhC,aAAgD,IACzC,O,iBAUT,SAAI,EAAiB,GAEnB,OADA,KAAK,IAAI,aAAa,OAAtB,UAAgC,GAAhC,cAAiD,IAC1C,O,gBAUT,SAAG,EAAiB,GAElB,OADA,KAAK,IAAI,aAAa,OAAtB,UAAgC,GAAhC,aAAgD,IACzC,O,iBAUT,SAAI,EAAiB,GAEnB,OADA,KAAK,IAAI,aAAa,OAAtB,UAAgC,GAAhC,cAAiD,IAC1C,O,gBAUT,SAAG,EAAiB,GAElB,OADA,KAAK,IAAI,aAAa,OAAtB,UAAgC,GAAhC,aAAgD,IACzC,O,iBAUT,SAAI,EAAiB,GAEnB,OADA,KAAK,IAAI,aAAa,OAAtB,UAAgC,GAAhC,cAAiD,IAC1C,O,kBAUT,SAAK,EAAiB,GAEpB,OADA,KAAK,IAAI,aAAa,OAAtB,UAAgC,GAAhC,eAAkD,IAC3C,O,mBAUT,SAAM,EAAiB,GAErB,OADA,KAAK,IAAI,aAAa,OAAtB,UAAgC,GAAhC,gBAAmD,IAC5C,O,gBAUT,SAAG,EAAiB,GAElB,OADM,KAAD,IAAI,aAAa,OAAtB,UAAgC,GAAhC,aAAgD,IACzC,O,gBAUT,SAAG,EAAiB,GAClB,IAAM,EAAgB,EACnB,KAAI,SAAC,GAGJ,MAAiB,kBAAN,GAAkB,IAAI,OAAO,SAAS,KAAK,GAAI,WAAW,EAAX,KACrD,UAAU,MAEhB,KAAK,KAER,OADA,KAAK,IAAI,aAAa,OAAtB,UAAgC,GAAhC,cAAiD,EAAjD,MACO,O,sBAUT,SAAS,EAAiB,GAYxB,MAXqB,kBAAV,EAGT,KAAK,IAAI,aAAa,OAAtB,UAAgC,GAAhC,aAAgD,IACvC,MAAM,QAAQ,GAEvB,KAAK,IAAI,aAAa,OAAtB,UAAgC,GAAhC,cAAiD,EAAM,KAAK,KAA5D,MAGA,KAAK,IAAI,aAAa,OAAtB,UAAgC,GAAhC,aAAgD,KAAK,UAAU,KAE1D,O,yBAaT,SAAY,EAAiB,GAW3B,MAVqB,kBAAV,EAET,KAAK,IAAI,aAAa,OAAtB,UAAgC,GAAhC,aAAgD,IACvC,MAAM,QAAQ,GAEvB,KAAK,IAAI,aAAa,OAAtB,UAAgC,GAAhC,cAAiD,EAAM,KAAK,KAA5D,MAGA,KAAK,IAAI,aAAa,OAAtB,UAAgC,GAAhC,aAAgD,KAAK,UAAU,KAE1D,O,qBAaT,SAAQ,EAAiB,GAEvB,OADA,KAAK,IAAI,aAAa,OAAtB,UAAgC,GAAhC,aAAgD,IACzC,O,qBAaT,SAAQ,EAAiB,GAEvB,OADA,KAAK,IAAI,aAAa,OAAtB,UAAgC,GAAhC,aAAgD,IACzC,O,sBAaT,SAAS,EAAiB,GAExB,OADA,KAAK,IAAI,aAAa,OAAtB,UAAgC,GAAhC,cAAiD,IAC1C,O,sBAaT,SAAS,EAAiB,GAExB,OADA,KAAK,IAAI,aAAa,OAAtB,UAAgC,GAAhC,cAAiD,IAC1C,O,2BAaT,SAAc,EAAiB,GAE7B,OADA,KAAK,IAAI,aAAa,OAAtB,UAAgC,GAAhC,cAAiD,IAC1C,O,sBAaT,SAAS,EAAiB,GAQxB,MAPqB,kBAAV,EAET,KAAK,IAAI,aAAa,OAAtB,UAAgC,GAAhC,aAAgD,IAGhD,KAAK,IAAI,aAAa,OAAtB,UAAgC,GAAhC,cAAiD,EAAM,KAAK,KAA5D,MAEK,O,wBAeT,SACE,EACA,GAI2E,6DAAF,GAFvE,EAEyE,EAFzE,OAEyE,IADzE,YACyE,MADlE,KACkE,EAEvE,EAAW,GACF,UAAT,EACF,EAAW,KACO,WAAT,EACT,EAAW,KACO,cAAT,IACT,EAAW,KAEb,IAAM,OAAwB,IAAX,EAAuB,GAAvB,WAAgC,EAAhC,KAEnB,OADA,KAAK,IAAI,aAAa,OAAtB,UAAgC,GAAhC,UAA6C,EAA7C,cAA2D,EAA3D,YAAyE,IAClE,O,iBAaT,SAAI,EAAiB,GAAmD,6DAAF,GAAhC,EAAkC,EAAlC,OAC9B,EAA+B,qBAAX,EAAyB,GAAhC,WAAyC,EAAzC,KAEnB,OADA,KAAK,IAAI,aAAa,OAAtB,UAAgC,GAAhC,aAAgD,EAAhD,YAA8D,IACvD,O,mBAaT,SAAM,EAAiB,GAAmD,6DAAF,GAAhC,EAAkC,EAAlC,OAChC,EAA+B,qBAAX,EAAyB,GAAhC,WAAyC,EAAzC,KAEnB,OADA,KAAK,IAAI,aAAa,OAAtB,UAAgC,GAAhC,eAAkD,EAAlD,YAAgE,IACzD,O,mBAaT,SAAM,EAAiB,GAAmD,6DAAF,GAAhC,EAAkC,EAAlC,OAChC,EAA+B,qBAAX,EAAyB,GAAhC,WAAyC,EAAzC,KAEnB,OADA,KAAK,IAAI,aAAa,OAAtB,UAAgC,GAAhC,eAAkD,EAAlD,YAAgE,IACzD,O,kBAaT,SAAK,EAAiB,GAAmD,6DAAF,GAAhC,EAAkC,EAAlC,OAC/B,EAA+B,qBAAX,EAAyB,GAAhC,WAAyC,EAAzC,KAEnB,OADA,KAAK,IAAI,aAAa,OAAtB,UAAgC,GAAhC,cAAiD,EAAjD,YAA+D,IACxD,O,oBAUT,SAAO,EAAiB,EAA0B,GAEhD,OADA,KAAK,IAAI,aAAa,OAAtB,UAAgC,GAAhC,UAA6C,EAA7C,YAAyD,IAClD,O,mBAST,SAAM,GAA8B,WAIlC,OAHA,OAAO,KAAK,GAAO,SAAQ,SAAC,GAC1B,EAAK,IAAI,aAAa,OAAtB,UAAgC,GAAhC,aAA6C,EAAM,QAE9C,S,+JChbL,WAAgB,IAAb,EAAa,uDAAH,IAEX,GAAS,EACP,EAAiB,EACpB,MAAM,IACN,KAAI,SAAC,GACJ,MAAI,KAAK,KAAK,KAAO,EACZ,IAEC,MAAN,IACF,GAAU,GAEL,MAER,KAAK,IAER,OADA,KAAK,IAAI,aAAa,IAAI,SAAU,GAC7B,O,mBAWT,SACE,GAK4E,6DAAF,GAAE,IAH1E,iBAG0E,aAF1E,kBAE0E,SAD1E,EAC0E,EAD1E,aAGI,EAA8B,qBAAjB,EAA+B,QAAtC,UAAmD,EAAnD,UACN,EAAgB,KAAK,IAAI,aAAa,IAAI,GAQhD,OANA,KAAK,IAAI,aAAa,IACpB,EADF,UAEK,EAAa,UAAM,EAAN,KAAyB,IAF3C,OAEgD,EAFhD,YAE0D,EAAY,MAAQ,OAF9E,YAGI,EAAa,aAAe,cAGzB,O,mBAST,SAAM,GAA+D,6DAAF,GAA5C,EAA8C,EAA9C,aACf,EAA8B,qBAAjB,EAA+B,QAAtC,UAAmD,EAAnD,UAEZ,OADA,KAAK,IAAI,aAAa,IAAI,EAA1B,UAAkC,IAC3B,O,mBAUT,SAAM,EAAc,GAA4D,6DAAF,GAA5C,EAA8C,EAA9C,aAC1B,EAAoC,qBAAjB,EAA+B,SAAtC,UAAoD,EAApD,WACZ,EAAmC,qBAAjB,EAA+B,QAAtC,UAAmD,EAAnD,UAIjB,OAHA,KAAK,IAAI,aAAa,IAAI,EAA1B,UAAwC,IAExC,KAAK,IAAI,aAAa,IAAI,EAA1B,UAAuC,EAAK,EAAO,IAC5C,O,oBAOT,WAEQ,OADA,KAAD,QAAL,OAAyB,oCAClB,O,yBAQT,WAAW,WACT,KAAK,QAAL,OAAyB,oCACzB,IAAM,EAAQ,IAAI,EAA0B,MAgB5C,OAfA,EAAM,KAAQ,SAAC,EAAkB,GAAnB,OACZ,EAAK,MAAK,SAAC,G,MACT,OAAa,QAAb,EAAI,EAAI,aAAK,eAAE,QAAQ,SAAS,2BACvB,EAAY,CACjB,MAAO,KACP,KAAM,KACN,MAAO,EAAI,MACX,OAAQ,IACR,WAAY,KACZ,KAAM,OAIH,EAAY,KAClB,IACE,I,iBAMT,WAEE,OADA,KAAK,QAAL,OAAyB,WAClB,S,GAzH+C,ICHrC,E,kDACjB,SAAF,EACE,GACuF,+DAAF,GAAE,IAArF,eAAqF,MAA3E,GAA2E,EAAvE,EAAuE,EAAvE,OAAuE,4BAEvF,cAAM,KACD,IAAM,IAAI,IAAI,GACnB,EAAK,QAAO,iBAAQ,GACpB,EAAK,OAAS,EALyE,E,0CAezF,WAQQ,IAPN,EAOM,uDAPI,IAOJ,yDAAF,GAAE,IALJ,YAKI,aAJJ,aAII,MAJI,KAIJ,EAEA,KAAD,OAAS,MAEd,IAAI,GAAS,EACP,EAAiB,EACpB,MAAM,IACN,KAAI,SAAC,GACJ,MAAI,KAAK,KAAK,KAAO,EACZ,IAEC,MAAN,IACF,GAAU,GAEL,MAER,KAAK,IAQR,OAPA,KAAK,IAAI,aAAa,IAAI,SAAU,GAChC,IACF,KAAK,QAAL,uBAAkC,IAEhC,IACF,KAAK,OAAS,QAET,IAAI,EAAuB,Q,oBA6BpC,SACE,GAWM,6DAAF,GAAE,IATJ,cASI,SARJ,EAQI,EARJ,WAQI,IAPJ,iBAOI,MAPQ,iBAOR,MANJ,aAMI,MANI,KAMJ,EAEN,KAAK,OAAS,OAER,MAAiB,kBAAW,IAWlC,GAVI,GAAQ,EAAe,KAAK,+BAE5B,QAAyB,IAAf,GAA0B,KAAK,IAAI,aAAa,IAAI,cAAe,GACjF,KAAK,KAAO,EACR,GACF,EAAe,KAAf,gBAA6B,IAG/B,KAAK,QAAL,OAAyB,EAAe,KAAK,KAEzC,MAAM,QAAQ,GAAS,CACzB,IAAM,EAAU,EAAO,QAAO,SAAC,EAAK,GAAN,OAAY,EAAI,OAAO,OAAO,KAAK,MAAK,IACtE,GAAI,EAAQ,OAAS,EAAG,CACtB,IAAM,EAAa,YAAO,IAAI,IAAI,IAClC,KAAK,IAAI,aAAa,IAAI,UAAW,EAAc,KAAK,OAI5D,OAAO,IAAI,EAAuB,Q,oBAYpC,SACE,GAWM,6DAAF,GATF,EASI,EATJ,WASI,IARJ,iBAQI,MARQ,iBAQR,MAPJ,aAOI,MAPI,KAOJ,MANJ,wBAMI,SAEN,KAAK,OAAS,OAEd,IAAM,EAAiB,sBACP,EAAmB,SAAW,QADvB,gCAEX,IAWZ,YARmB,IAAf,GAA0B,KAAK,IAAI,aAAa,IAAI,cAAe,GACvE,KAAK,KAAO,EACR,GACF,EAAe,KAAf,gBAA6B,IAG/B,KAAK,QAAL,OAAyB,EAAe,KAAK,KAEtC,IAAI,EAAuB,Q,oBAUpC,SACE,GAOM,6DAAF,GAAE,IALJ,iBAKI,MALQ,iBAKR,MAJJ,aAII,MAJI,KAIJ,EAEN,KAAK,OAAS,QACd,IAAM,EAAiB,kBAAW,IAMlC,OALA,KAAK,KAAO,EACR,GACF,EAAe,KAAf,gBAA6B,IAE/B,KAAK,QAAL,OAAyB,EAAe,KAAK,KACtC,IAAI,EAAuB,Q,oBASpC,WAMM,6DAAF,GAAE,IALJ,iBAKI,MALQ,iBAKR,MAJJ,aAII,MAJI,KAIJ,EACJ,KAAK,OAAS,SACd,IAAM,EAAiB,kBAAW,IAKlC,OAJI,GACF,EAAe,KAAf,gBAA6B,IAE/B,KAAK,QAAL,OAAyB,EAAe,KAAK,KACtC,IAAI,EAAuB,U,GA5MgB,GCAjC,E,kDACjB,SAAF,EACE,GACuF,+DAAF,GAAE,IAArF,eAAqF,MAA3E,GAA2E,EAAvE,EAAuE,EAAvE,OAAuE,4BAEvF,cAAM,KACD,IAAM,IAAI,IAAI,GACnB,EAAK,QAAO,iBAAQ,GACpB,EAAK,OAAS,EALyE,E,uCAWzF,SACE,GAKM,6DAAF,GAAE,IAHJ,aAGI,MAHI,KAGJ,EAUN,OARA,KAAK,OAAS,OACd,KAAK,KAAO,EAER,SAC6B,IAA3B,KAAK,QAAL,OAAsC,KAAK,QAAL,yBAAoC,GACzE,KAAK,QAAL,uBAAkC,IAGlC,IAAI,EAAuB,U,GA9Bc,GCC/B,E,WAYjB,SAAF,EACE,GACuF,6DAAF,GAAE,IAArF,eAAqF,MAA3E,GAA2E,EAAvE,EAAuE,EAAvE,OAAuE,oBAEvF,KAAK,IAAM,EACPA,KAAC,QAAU,EACX,KAAC,OAAS,E,wCAQhB,SAAK,GAEH,OADA,KAAK,QAAL,+BAA0C,GACnC,O,kBAQT,SAAc,GACZ,IAAM,EAAG,UAAM,KAAK,IAAX,YAAkB,GAC3B,OAAO,IAAI,EAAyB,EAAK,CAAE,QAAS,KAAK,QAAS,OAAQ,KAAK,W,iBAUjF,SACE,EACA,GAKM,6DAAF,GAAE,IAHJ,aAGI,MAHI,KAGJ,EAEA,EAAG,UAAM,KAAK,IAAX,gBAAsB,GAC/B,OAAO,IAAI,EAAuB,EAAK,CACrC,QAAS,KAAK,QACd,OAAQ,KAAK,SACZ,IAAI,EAAQ,CAAE,c,eP1DrB,SAAY,GACR6J,EAAF,kBACEA,EAAF,YACEA,EAAF,YACEA,EAAF,sBACEA,EAAF,gBACEA,EAAF,gBACEA,EAAF,YACEA,EAAF,YACEA,EAAF,sBACEA,EAAF,YACEA,EAAF,sBACEA,EAAF,YACEA,EAAF,cACEA,EAAF,cACEA,EAAF,kBACEA,EAAF,UACEA,EAAF,kBACEA,EAAF,YACEA,EAAF,sBACEA,EAAF,0BACEA,EAAF,gBACEA,EAAF,kBACA,wBAvBF,CAAY,MAAa,KAiDlB,INlDK,EAOA,EAQA,EAQA,EM2BC,EAAoB,SAC/B,EACA,GAEE,IADF,EACE,uDADkC,GAEhC,EAAiC,GACjC,EAC2B,qBAAtB,EAAQ,UAA4B,EAAQ,UAAY,GAI/D,OAHF,OAAO,QAAQ,GAAS,KAAI,YAAiB,uBAAf,EAAe,UAC3C,EAAO,GAAO,EAAc,EAAK,EAAS,EAAS,MAE9C,GAiBI,EAAgB,SAC3B,EACA,EACA,EACA,GAEE,IAAE,EAAS,EAAQ,MAAK,SAAC,GAAD,OAAO,EAAE,MAAQ,KACzC,OAAG,GAAU,EAAU,SAAS,EAAO,MAChC,EAAK,EAAQ,IAEb,EAAY,EAAO,KAAM,EAAQ,KAiB/B,EAAc,SAAC,EAAc,GACtC,IACI,GAAgB,OAAhB,EAAsB,OAAO,KAG7B,GAAmB,MAAnB,EAAK,OAAO,GAAY,CACpB,IAAF,EAAa,EAAK,MAAM,EAAG,EAAK,QAC9B,OAAC,GAAQ,EAAa,GAI1B,OAAI,GACA,KAAD,EAAc,QACjB,OAAO,EAAK,GACR,KAAD,EAAc,KACjB,OAAO,EAAU,GACb,KAAD,EAAc,KACjB,OAAO,EAAK,GACR,KAAD,EAAc,UACjB,OAAO,GAAY,GACf,KAAD,EAAc,OAEb,KAAD,EAAc,OACjB,OAAO,GAAQ,GACX,KAAD,EAAc,KAEb,KAAD,EAAc,KACjB,OAAO,GAAM,GACT,KAAD,EAAc,UACjB,OAAO,GAAW,GACd,KAAD,EAAc,KACjB,OAAO,GAAM,GACT,KAAD,EAAc,UACjB,OAAO,GAAW,GACd,KAAD,EAAc,KAEnB,KAAK,EAAc,MACjB,OAAO,GAAO,GAChB,KAAK,EAAc,MAEnB,KAAK,EAAc,QACjB,OAAO,GAAQ,GACjB,KAAK,EAAc,IACjB,OAAO,GAAM,GACf,KAAK,EAAc,QAEnB,KAAK,EAAc,KACjB,OAAO,EAAK,GACd,KAAK,EAAc,UACjB,OAAO,GAAkB,GACrB,KAAD,EAAc,YAEb,KAAD,EAAc,OACjB,OAAO,EAAK,GACR,KAAD,EAAc,QAEnB,KAAK,EAAc,UACjB,OAAO,GAAY,GACrB,QAEE,OAAO,EAAK,IAEhB,MAAO,GAKP,OAJA,QAAQ,IAAR,yCACoC,EADpC,sBACsD,IAEtD,QAAQ,IAAR,6BAAkC,IAC3B,IAIL,EAAO,SAAC,GACV,OAAK,GAEI,EAAY,SAAC,GACtB,OAAM,GACN,IAAK,IACH,OAAO,EACT,IAAK,IACH,OAAO,EACT,QACE,OAAO,OAGA,EAAS,SAAC,GACrB,OAAO,IAAI,KAAK,IAEL,GAAc,SAAC,GACxB,IAAE,EAAM,KAAK,MAAM,GACnB,MAAK,CAAC,IAAI,KAAK,EAAI,IAAK,IAAI,KAAK,EAAI,MAE5B,GAAU,SAAC,GACpB,OAAK,WAAW,IAEP,GAAQ,SAAC,GACpB,OAAO,SAAS,IAEL,GAAa,SAAC,GACzB,IAAI,EAAM,KAAK,MAAM,GACrB,MAAO,CAAC,SAAS,EAAI,IAAK,SAAS,EAAI,MAE5B,GAAS,SAAC,GACrB,OAAO,KAAK,MAAM,IAWP,GAAU,SAAC,EAAqB,GAE3C,IAAI,EAAiB,EAAY,MAAM,EAAG,EAAY,OAAS,GAS/D,OALkB,EAAe,OAAS,EAAI,EAAe,MAAM,KAAO,IAC3C,KAAI,SAAC,GAClC,OAAO,EAAY,EAAM,OAahB,GAAoB,SAAC,GAChC,OAAO,EAAY,QAAQ,IAAK,MNpPrB,GAAkB,KAI/B,SAAY,GACRC,EAAcA,EAAhB,2BACEA,EAAcA,EAAhB,eACA,yBACA,uBAJF,CAAY,MAAa,KAOzB,SAAY,GACRC,EAAF,gBACEA,EAAF,kBACEA,EAAF,gBACA,oBACA,oBALF,CAAY,MAAc,KAQ1B,SAAY,GACRC,EAAF,kBACEA,EAAF,kBACEA,EAAF,gBACA,oBACA,oBALF,CAAY,MAAc,KAQ1B,SAAY,GACV,wBADF,CAAY,MAAU,K,IcjBD,G,WAIjB,SAAF,EAAmB,EAA2B,GAAmB,oBAA9C,gBAA2B,iBAH9C,gBAA4B,EACxB,KAAJ,MAAgB,EAGVhK,KAAC,SAAW,EACZA,KAAC,UAAY,E,yCAGnB,WACE,KAAK,MAAQ,EACb,aAAa,KAAK,S,6BAIpB,WAAe,WACb,aAAa,KAAK,OAEZ,KAAD,MAAa,YAAW,WAC3B,EAAK,MAAQ,EAAK,MAAQ,EAC1B,EAAK,aACJ,KAAK,UAAU,KAAK,MAAQ,Q,KC9Bd,G,WAsBjB,SAAF,EACS,EACA,GAEiC,IADjC,EACiC,uDADlB,GACf,EAAiC,uDAAf,GAAe,oBAHjC,eACA,aACA,eACA,eAzBT,WAAgB,EAChB,uBAAmC,EACnC,SAAc,GACd,kBAGW,KACP,KAAJ,SAGM,GACF,KAAJ,SAA0B,K,0CAiB1B,SAAO,GACC,KAAD,QAAU,EACf,KAAK,kBACL,KAAK,IAAM,GACX,KAAK,SAAW,KAChB,KAAK,aAAe,KACd,KAAD,MAAO,EACN,KAAD,S,kBAGP,WACM,KAAK,aAAa,aAGtB,KAAK,eACC,KAAD,MAAO,EACZ,KAAK,QAAQ,OAAO,KAAK,CACvB,MAAO,KAAK,QAAQ,MACpB,MAAO,KAAK,MACZ,QAAS,KAAK,QACd,IAAK,KAAK,S,qBAId,SAAQ,EAAgB,G,MAMhB,OALFA,KAAK,aAAa,IACpB,EAA0B,QAAlB,EAAC,KAAK,oBAAY,eAAE,UAGxB,KAAD,SAAS,KAAK,CAAE,SAAQ,aACtB,O,0BAGT,WAAY,WACN,KAAK,eAGT,KAAK,IAAM,KAAK,QAAQ,OAAO,UACzB,KAAD,SAAW,KAAK,QAAQ,eAAe,KAAK,KAEjD,KAAK,QAAQ,GAAG,KAAK,UAAU,SAAC,GAC9B,EAAK,kBACL,EAAK,iBACL,EAAK,aAAe,EACpB,EAAK,cAAc,MAGrB,KAAK,aAAoB,YAAW,WAClC,EAAK,QAAQ,UAAW,MACvB,KAAK,Y,qBAGV,SAAQ,EAAgB,GAClB,KAAK,UAAU,KAAK,QAAQ,QAAQ,KAAK,SAAU,CAAE,SAAQ,e,6BAG3D,WACD,KAAK,UAGV,KAAK,QAAQ,IAAI,KAAK,Y,4BAGhB,WACN,aAAa,KAAK,cAClB,KAAK,kBAAe,I,2BAGd,YAMP,IALC,EAKD,EALC,OACA,EAID,EAJC,SAKA,KAAK,SACF,QAAO,SAAC,GAAD,OAAO,EAAE,SAAW,KAC3B,SAAQ,SAAC,GAAD,OAAO,EAAE,SAAS,Q,0BAGvB,SAAa,GACnB,OAAO,KAAK,cAAgB,KAAK,aAAa,SAAW,M,KC5GxC,G,WASjB,SAAF,EACS,GAEsB,WADtB,EACsB,uDADR,GACd,EAAsB,2DAFtB,aACA,cACA,cAXL,KAAJ,SAAkB,GAEd,KAAJ,MAAQ,EAAe,OACnB,KAAJ,YAAa,EAGT,KAAJ,WAAqB,GAOf,KAAC,QAAU,KAAK,OAAO,QACvB,KAAC,SAAW,IAAI,GAClB,KACA,EAAe,KACf,KAAK,OACL,KAAK,SAEH,KAAC,YAAc,IAAI,IACrB,kBAAM,EAAK,yBACX,KAAK,OAAO,kBAEV,KAAC,SAAS,QAAQ,MAAM,WACpB,EAAD,MAAQ,EAAe,OACtB,EAAD,YAAY,QACX,EAAD,WAAW,SAAQ,SAAC,GAAD,OAAqB,EAAU,UACvD,EAAK,WAAa,MAEhB,KAAC,SAAQ,WACL,EAAD,YAAY,QACX,EAAD,OAAO,IAAI,UAAhB,gBAAoC,EAAK,MAAzC,YAAkD,EAAK,YACjD,EAAD,MAAQ,EAAe,OACtB,EAAD,OAAO,OAAO,MAEjB,KAAC,SAAQ,SAAC,GACR,EAAK,aAAe,EAAK,aAG7B,EAAK,OAAO,IAAI,UAAhB,gBAAoC,EAAK,OAAS,GAClD,EAAK,MAAQ,EAAe,QAC5B,EAAK,YAAY,sBAEf,KAAC,SAAS,QAAQ,WAAW,WAC1B,EAAK,cAGV,EAAK,OAAO,IAAI,UAAhB,kBAAsC,EAAK,OAAS,EAAK,SAAS,SAC5D,EAAD,MAAQ,EAAe,QAC5B,EAAK,YAAY,sBAEf,KAAC,GAAG,EAAe,OAAO,SAAC,EAAc,GACrC,EAAD,QAAQ,EAAK,eAAe,GAAM,M,wDAI3C,WACE,KAAK,YAAY,kBACb,KAAK,OAAO,eACd,KAAK,W,uBAIT,WAAgC,IAAtB,EAAsB,uDAAZ,KAAK,QACvB,GAAI,KAAK,WACP,4GAIA,OAFA,KAAK,YAAa,EAClB,KAAK,OAAO,GACL,KAAK,W,qBAIhB,SAAQ,GACN,KAAK,GAAG,EAAe,MAAO,K,qBAGhC,SAAQ,GACN,KAAK,GAAG,EAAe,OAAO,SAAC,GAAD,OAAoB,EAAS,Q,gBAG7D,SAAG,EAAe,GAChB,KAAK,SAAS,KAAK,CAAE,QAAO,e,iBAG9B,SAAI,GACF,KAAK,SAAW,KAAK,SAAS,QAAO,SAAC,GAAD,OAAU,EAAK,QAAU,O,qBAGhE,WACE,OAAO,KAAK,OAAO,eAAiB,KAAK,a,kBAG3C,SAAK,EAAuB,GAAoC,IAAtB,EAAsB,uDAAZ,KAAK,QACvD,IAAK,KAAK,WACR,8BAAwB,EAAxB,iBAAsC,KAAK,MAA3C,mEAEI,IAAF,EAAY,IAAI,GAAK,KAAM,EAAO,EAAS,GAQ/C,OAPI,KAAK,UACP,EAAU,QAEV,EAAU,eACV,KAAK,WAAW,KAAK,IAGhB,I,yBAYT,WAAkC,WAAtB,EAAsB,uDAAZ,KAAK,QACzB,KAAK,MAAQ,EAAe,QAC5B,IAAI,EAAU,WACZ,EAAK,OAAO,IAAI,UAAhB,gBAAoC,EAAK,QACzC,EAAK,QAAQ,EAAe,MAAO,QAAS,EAAK,YAE/C,EAAY,IAAI,GAAK,KAAM,EAAe,MAAO,GAAI,GAOzD,OANA,EAAU,QAAQ,MAAM,kBAAM,OAAW,QAAQ,WAAW,kBAAM,OAClE,EAAU,OACL,KAAK,WACR,EAAU,QAAQ,KAAM,IAGnB,I,uBAST,SAAU,EAAe,EAAc,GACrC,OAAO,I,sBAGT,SAAS,GACD,OAAC,KAAK,QAAU,I,qBAGxB,WACQ,OAAC,KAAK,SAAS,M,sBAGvB,SAAS,GACP,KAAK,MAAQ,EAAe,QACtB,KAAD,SAAS,OAAO,K,oBAGvB,WAA6B,IAAtB,EAAsB,uDAAZ,KAAK,QAChB,KAAK,aAGT,KAAK,SAAS,K,qBAGhB,SAAQ,EAAe,EAAe,GACpC,IAAM,EAA8B,EAA9B,MAAO,EAAuB,EAAvB,MAAO,EAAgB,EAAhB,MAAO,EAAS,EAAT,KAE3B,KAAI,GADmB,CAAC,EAAO,EAAO,EAAO,GAC3B,QAAQ,IAAU,GAAK,IAAQ,KAAK,WAAtD,CAGA,IAAI,EAAiB,KAAK,UAAU,EAAO,EAAS,GACpD,GAAI,IAAY,EACd,KAAM,8EAGR,KAAK,SACF,QAAO,SAAC,GAEP,MAAmB,MAAf,EAAK,MACA,KAAiB,OAAP,QAAO,IAAP,OAAO,EAAP,EAAS,MAEnB,EAAK,QAAU,KAGzB,KAAI,SAAC,GAAD,OAAU,EAAK,SAAS,EAAgB,S,4BAGjD,SAAe,GACb,2BAAqB,K,sBAGvB,WACE,OAAO,KAAK,QAAU,EAAe,S,uBAEvC,WACE,OAAO,KAAK,QAAU,EAAe,U,sBAEvC,WACE,OAAO,KAAK,QAAU,EAAe,S,uBAEvC,WACE,OAAO,KAAK,QAAU,EAAe,U,uBAEvC,WACE,OAAO,KAAK,QAAU,EAAe,Y,eC/MpB,G,WAAnB,SAAF,IAAI,oBACE,KAAJ,cAAgB,E,0CAEhB,SAAO,EAAkC,GACvC,OAAI,EAAW,cAAgB,YACtB,EAAS,KAAK,cAAc,IAI5B,EADiB,kBAAf,EACO,KAAK,MAAM,GAGb,M,2BAGV,SAAc,GACpB,IAAM,EAAO,IAAI,SAAS,GACpB,EAAU,IAAI,YAEpB,OAAO,KAAK,iBAAiB,EAAQ,EAAM,K,8BAGrC,SACN,EACA,EACA,GAOA,IAAM,EAAY,EAAK,SAAS,GAC1B,EAAY,EAAK,SAAS,GAC5B,EAAS,KAAK,cAAgB,EAC5B,EAAQ,EAAQ,OAAO,EAAO,MAAM,EAAQ,EAAS,IAC3D,GAAkB,EAClB,IAAM,EAAQ,EAAQ,OAAO,EAAO,MAAM,EAAQ,EAAS,IAM3D,OALA,GAAkB,EAKX,CAAE,IAAK,KAAM,MAAO,EAAO,MAAO,EAAO,QAJnC,KAAK,MAChB,EAAQ,OAAO,EAAO,MAAM,EAAQ,EAAO,mB,4SCX3C,GAAO,aAEQ,G,WA+CjB,SAAF,EAAY,EAAkB,GAAiB,+BA9C3C,KAAJ,SAAmC,GAC/B,KAAJ,SAAmB,GACf,KAAJ,QAAsC,GAClC,KAAJ,OAAqC,GACjC,KAAJ,QAAkB,GACd,KAAJ,UAAiB,gBACb,KAAJ,oBAA8B,IAC1B,KAAJ,kBAA4B,IACxB,KAAJ,oBAA6D,EACzD,KAAJ,oBAAqC,KACjC,KAAJ,IAAc,EAEV,KAAJ,OAAmB,GAIf,KAAJ,KAAyB,KACrB,KAAJ,WAAyB,GACrB,KAAJ,WAAyB,IAAI,GACzB,KAAJ,qBAKI,CACF,KAAM,GACA,MAAC,GACP,MAAO,GACD,QAAG,IAmBT,KAAK,SAAL,UAAmB,EAAnB,YAA+B,EAAW,YAE/B,OAAP,QAAO,IAAP,OAAO,EAAP,EAAS,UAAQ,KAAK,OAAS,EAAQ,SAChC,OAAP,QAAO,IAAP,OAAO,EAAP,EAAS,WAAS,KAAK,QAAU,EAAQ,UAClC,OAAP,QAAO,IAAP,OAAO,EAAP,EAAS,WAAS,KAAK,QAAU,EAAQ,UAClC,OAAP,QAAO,IAAP,OAAO,EAAP,EAAS,UAAQ,KAAK,OAAS,EAAQ,SAChC,OAAP,QAAO,IAAP,OAAO,EAAP,EAAS,aAAW,KAAK,UAAY,EAAQ,YACtC,OAAP,QAAO,IAAP,OAAO,EAAP,EAAS,uBACX,KAAK,oBAAsB,EAAQ,sBAC1B,OAAP,QAAO,IAAP,OAAO,EAAP,EAAS,qBACX,KAAK,kBAAoB,EAAQ,mBAE/B,KAAC,kBAA0B,OAAP,QAAO,IAAP,OAAO,EAAP,EAAS,kBAC7B,EAAQ,iBACR,SAAC,GACC,MAAO,CAAC,IAAM,IAAM,IAAM,KAAO,EAAQ,IAAM,KAErD,KAAK,QAAgB,OAAP,QAAO,IAAP,OAAO,EAAP,EAAS,QACnB,EAAQ,OACR,SAAC,EAAe,GACd,OAAO,EAAS,KAAK,UAAU,KAErC,KAAK,QAAgB,OAAP,QAAO,IAAP,OAAO,EAAP,EAAS,QACnB,EAAQ,OACR,KAAK,WAAW,OAAO,KAAK,KAAK,YACjC,KAAC,eAAiB,IAAI,IAAM,kBAAW,2GACzC,OADyC,SACnC,KAAK,aAD8B,OAEzC,KAAK,UAFoC,kDAGxC,KAAK,kB,2CAMV,WAAa,IAAN,OACD,KAAK,OAIH,KAAD,KAAO,IAAI,KAAK,UAAU,KAAK,cAAe,GAAI,KAAM,KAAK,SAC9D,KAAK,OAEP,KAAK,KAAK,WAAa,cACvB,KAAK,KAAK,OAAS,kBAAM,EAAK,eAC9B,KAAK,KAAK,QAAU,SAAC,GAAD,OAAW,EAAK,aAAa,IACjD,KAAK,KAAK,UAAY,SAAC,GAAD,OAAW,EAAK,cAAc,IACpD,KAAK,KAAK,QAAU,SAAC,GAAD,OAAW,EAAK,aAAa,Q,wBAUrD,SACE,EACA,GAAe,WAEf,OAAO,IAAI,SAAQ,SAAC,EAAS,GAC3B,IACM,EAAK,OACP,EAAK,KAAK,QAAU,aAChB,EACF,EAAK,KAAK,MAAM,EAAM,GAAU,IAEhC,EAAK,KAAK,QAEZ,EAAK,KAAO,MAEd,EAAQ,CAAE,MAAO,KAAM,MAAM,IAC7B,MAAO,GACP,EAAQ,CAAE,QAAO,MAAM,U,iBAQ7B,SAAI,EAAc,EAAa,GAC7B,KAAK,OAAO,EAAM,EAAK,K,oBAUzB,SAAO,GACL,KAAK,qBAAqB,KAAK,KAAK,K,qBAUtC,SAAQ,GACN,KAAK,qBAAqB,MAAM,KAAK,K,qBAUvC,SAAQ,GACN,KAAK,qBAAqB,MAAM,KAAK,K,uBAUvC,SAAU,GACR,KAAK,qBAAqB,QAAQ,KAAK,K,6BAMzC,WACE,OAAQA,KAAK,MAAQ,KAAK,KAAK,YAC7B,KAAK,EAAc,WACjB,MAAO,aACT,KAAK,EAAc,KACjB,MAAO,OACT,KAAK,EAAc,QACjB,MAAO,UACT,QACE,MAAO,Y,yBAOb,WACQ,MAA4B,SAA3B,KAAK,oB,oBAQd,SAAO,GACL,KAAK,SAAW,KAAK,SAAS,QAC5B,SAAC,GAAD,OAA6B,EAAE,YAAc,EAAQ,e,qBAIzD,SAAQ,GAA8B,IAAf,EAAe,uDAAF,GAC9B,EAAO,IAAI,GAAqB,EAAO,EAAY,MAEvD,OADA,KAAK,SAAS,KAAK,GACZ,I,kBAGT,SAAK,GAAa,WACV,EAA+B,EAA/B,MAAO,EAAwB,EAAxB,MAAO,EAAiB,EAAjB,QAAS,EAAQ,EAAR,IACzB,EAAW,WACb,EAAK,OAAO,GAAM,SAAC,G,MACR,QAAT,IAAK,YAAI,SAAE,KAAK,OAGpB,KAAK,IAAI,OAAT,UAAoB,EAApB,YAA6B,EAA7B,aAAuC,EAAvC,KAA+C,GAC3CA,KAAK,cACP,IAEA,KAAK,WAAW,KAAK,K,2BAIzB,SAAc,GAAe,WAC3B,KAAK,OAAO,EAAW,MAAM,SAAC,GAC5B,IAAM,EAA+B,EAA/B,MAAO,EAAwB,EAAxB,MAAO,EAAiB,EAAjB,QAAS,EAAQ,EAAR,IACzB,GAAO,IAAQ,EAAK,oBACtB,EAAK,oBAAsB,KAClB,KAAiB,OAAP,QAAO,IAAP,OAAO,EAAP,EAAS,OAC5B,EAAK,kBAGP,EAAK,IACH,UADF,UAEK,EAAQ,QAAU,GAFvB,YAE6B,EAF7B,YAEsC,EAFtC,YAGK,GAAO,IAAM,EAAM,KAAQ,IAE9B,GAEF,EAAK,SACF,QAAO,SAAC,GAAD,OAAmC,EAAQ,SAAS,MAC3D,SAAQ,SAAC,GAAD,OACP,EAAQ,QAAQ,EAAO,EAAS,MAEpC,EAAK,qBAAqB,QAAQ,SAAQ,SAAC,GAAD,OAAc,EAAS,W,yBAOrE,WACE,OAAO,KAAK,cACV,KAAK,SACL,OAAO,OAAO,GAAI,KAAK,OAAQ,CAAE,IlBzSZ,a,qBkBgTzB,WACQ,IAAF,EAAS,KAAK,IAAM,EAOlB,OANF,IAAW,KAAK,IAClB,KAAK,IAAM,EAEX,KAAK,IAAM,EAGN,KAAK,IAAI,a,yBAGV,WACN,KAAK,IAAI,YAAT,uBAAsC,KAAK,gBAC3C,KAAK,mBACL,KAAK,eAAe,QACpB,KAAK,kBACL,KAAK,qBAAqB,KAAK,SAAQ,SAAC,GAAD,OAAc,S,0BAG/C,SAAa,GACnB,KAAK,IAAI,YAAa,QAAS,GAC/B,KAAK,oBACL,KAAK,gBAAkB,cAAc,KAAK,gBAC1C,KAAK,eAAe,kBACpB,KAAK,qBAAqB,MAAM,SAAQ,SAAC,GAAD,OAAc,EAAS,Q,0BAGzD,SAAa,GACnB,KAAK,IAAI,YAAa,EAAM,SAC5B,KAAK,oBACL,KAAK,qBAAqB,MAAM,SAAQ,SAAC,GAAD,OAAc,EAAS,Q,+BAGzD,WACN,KAAK,SAAS,SAAQ,SAAC,GAAD,OACpB,EAAQ,QAAQ,EAAe,Y,2BAI3B,SAAc,EAAa,GACjC,GAAmC,IAA/B,OAAO,KAAK,GAAQ,OACtB,OAAO,EAET,IAAM,EAAS,EAAI,MAAM,MAAQ,IAAM,IACjC,EAAQ,IAAI,gBAAgB,GAElC,gBAAU,GAAV,OAAgB,GAAhB,OAAyB,K,8BAGnB,WACF,KAAK,eAAiB,KAAK,WAAW,OAAS,IACjD,KAAK,WAAW,SAAQ,SAAC,GAAD,OAAc,OACtC,KAAK,WAAa,M,6BAId,WAAe,WACrB,KAAK,oBAAsB,KAC3B,KAAK,gBAAkB,cAAc,KAAK,gBAC1C,KAAK,eAAiB,aACpB,kBAAM,EAAK,mBACX,KAAK,uB,4BAID,W,MACN,GAAK,KAAK,cAAV,CAGA,GAAI,KAAK,oBAOP,OANA,KAAK,oBAAsB,KAC3B,KAAK,IACH,YACA,iEAEO,QAAT,OAAK,YAAI,SAAE,MlBvXc,IkBuXS,qBAGpC,KAAK,oBAAsB,KAAK,UAChC,KAAK,KAAK,CACR,MAAO,UACP,MAAO,YACP,QAAS,GACT,IAAK,KAAK,2B,KChYH,GAAb,WAGI,SAAF,EAAY,EAAwB,EAAgB,GAAiB,oBAC/D,IAAE,EAAsB,MAAd,qBAAgC,GAAhC,mBAAuD,EAAvD,YAAiE,GAC3E,KAAC,aAAe,EAAO,QAAQ,GALrC,uBAAE,IAAJ,oBAAI,MAQM,SAAkB,GAClB,MAAU,CACd,IAAK,GACL,IAAK,IAWP,MARqB,WAAjB,EAAQ,MAAsC,WAAjB,EAAQ,OACvC,EAAQ,IAAM,EAAa,kBAAkB,EAAQ,QAAS,EAAQ,SAGnD,WAAjB,EAAQ,MAAsC,WAAjB,EAAQ,OACvC,EAAQ,IAAM,EAAa,kBAAkB,EAAQ,QAAS,EAAQ,aAGjE,IAtBX,CAAI,IAAJ,KAAI,MA+BF,SAAG,EAA2B,GAAyD,WAe/E,OAdA,KAAD,aAAa,GAAG,GAAO,SAAC,GAC3B,IAAI,EAAgD,CAClD,OAAQ,EAAQ,OAChB,MAAO,EAAQ,MACf,iBAAkB,EAAQ,iBAC1B,UAAW,EAAQ,KACnB,IAAK,GACL,IAAK,IAGP,EAAe,+BAAQ,GAAoB,EAAK,kBAAkB,IAElE,EAAS,MAEJ,OA9CX,CAAI,IAAJ,YAAI,MAoDF,WAAuC,IAA7B,EAA6B,uDAAR,aAQ7B,OAPA,KAAK,aAAa,SAAQ,SAAC,GAAD,OAAc,EAAS,qBAAsB,MACvE,KAAK,aAAa,SAAQ,kBAAM,EAAS,aACzC,KAAK,aACF,YACA,QAAQ,MAAM,kBAAM,EAAS,iBAC7B,QAAQ,SAAS,SAAC,GAAD,OAAc,EAAS,qBAAsB,MAC9D,QAAQ,WAAW,kBAAM,EAAS,6BAC9B,KAAK,iBA5DhB,KCEa,GAAb,YAAE,qBAAF,iBAII,SAAF,EACE,EADF,GAYG,UATC,eASD,MATW,GASX,EARC,EAQD,EARC,OACA,EAOD,EAPC,SACA,EAMD,EANC,MAMD,4BAED,cAAM,EAAK,CAAE,UAAS,YAEjB,cAAgB,IAAI,GAAuB,EAAU,EAAQ,GAClE,EAAK,UAAY,EALhB,EAhBH,uBAAE,IAAJ,KAAI,MA6BF,SACE,EACA,GAKA,OAHK,KAAK,UAAU,eAClB,KAAK,UAAU,UAEV,KAAK,cAAc,GAAG,EAAO,OApCxC,GAA6C,G,uSrBUvC,GAAmB,SAAC,GAAD,OACvB,EAAI,KAAO,EAAI,SAAW,EAAI,mBAAqB,EAAI,OAAS,KAAK,UAAU,IAE3E,GAAc,SAACN,EAAY,GAC7B,GAAwB,oBAAf,EAAM,KACf,OAAO,EAAO,GAEhB,EAAM,OAAO,MAAK,SAAC,GACjB,OAAO,EAAO,CACZ,QAAS,GAAiB,GAC1B,QAAa,OAAL,QAAK,IAAL,OAAK,EAAL,EAAO,SAAU,UAKzB,GAAoB,SACxB,EACA,EACA,EACA,GAEE,IAAI,EAA+B,CAAE,SAAQ,SAAgB,OAAP,QAAO,IAAP,OAAO,EAAP,EAAS,UAAW,IAE1E,MAAa,QAAX,EACK,GAGP,EAAK,QAAO,eAAK,eAAgB,oBAA8B,OAAP,QAAO,IAAP,OAAO,EAAP,EAAS,SACjE,EAAK,KAAO,KAAK,UAAU,GAC7B,+BAAY,GAAW,KAGzB,SAAe,GACb,EACA,EACA,EACA,EACA,G,8IAEO,IAAI,SAAQ,SAAC,EAAS,GAC3B,IAAM,EAAK,GAAkB,EAAQ,EAAS,EAAY,IACvD,MAAK,SAAC,GACL,IAAK,EAAO,GAAI,MAAM,EACtB,OAAW,OAAP,QAAO,IAAP,OAAO,EAAP,EAAS,eAAsB,EAAQ,GACpC,EAAO,UAEf,MAAK,SAAC,GAAD,OAAU,EAAQ,MACvB,OAAM,SAAC,GAAD,OAAW,GAAY,EAAO,U,2CAIrC,SAAgB,GACpB,EACA,EACA,G,8IAEO,GAAe,MAAO,EAAK,EAAS,I,2CAGvC,SAAgB,GACpB,EACA,EACA,EACA,G,8IAEO,GAAe,OAAQ,EAAK,EAAS,EAAY,I,2CAGpD,SAAgB,GACpB,EACA,EACA,EACA,G,8IAEO,GAAe,MAAO,EAAK,EAAS,EAAY,I,2CAGnD,SAAgB,GACpB,EACA,EACA,EACA,G,8IAEO,GAAe,SAAU,EAAK,EAAS,EAAY,I,2CGlGrD,IAAM,GAAY,iBAAwB,qBAAXuK,Q,uSmBIhC,GAAyB,CAC3B,MAAK,IACL,OAAM,EACN,OAAM,CACN,OAAQ,OACR,MAAO,QAIL,GAAoC,CACtC,aAAY,OACZ,QAAM,GAGG,GAAb,WAKE,WAAY,GAAuE,IAA1D,EAA0D,uDAArB,GAAI,EAAiB,2DACjF,KAAK,IAAM,EACPjK,KAAC,QAAU,EACXA,KAAC,SAAW,EARpB,0CAkBQ,SACJ,EACA,EACA,G,+IAGO,K,sBAAmB,IAAI,MAAM,wB,OAStB,OAPN,EAAW,IAAI,SAEf,EAAO,+BAAQ,IAAyB,GAC9C,EAAS,OAAO,eAAgB,EAAQ,cACxC,EAAS,OAAO,GAAI,EAAM,EAAK,MAEzB,EAAQ,KAAK,cAAc,G,UACf,MAAK,UAAI,KAAK,IAAT,mBAAuB,GAAS,CACrD,OAAQ,OACR,KAAM,EACN,QAAO,+BACF,KAAK,SAAO,CACf,WAAY,OAAkB,OAAX,QAAW,IAAX,OAAW,EAAX,EAAa,Y,aAL9B,E,QASE,G,0CAGC,CAAE,KAAM,CAAE,IAAK,GAAS,MAAO,O,QAExB,O,UAAM,EAAI,O,eAAlB,E,yBACC,CAAE,KAAM,KAAM,U,mFAGhB,CAAE,KAAM,KAAM,MAAK,O,4DAnDhC,oBA8DQ,SACJ,EACA,EACA,G,+IAGO,K,sBAAmB,IAAI,MAAM,wB,OAStB,OAPN,EAAW,IAAI,SAEf,EAAO,+BAAQ,IAAyB,GAC9C,EAAS,OAAO,eAAgB,EAAQ,cACxC,EAAS,OAAO,GAAI,EAAM,EAAK,MAEzB,EAAQ,KAAK,cAAc,G,UACf,MAAK,UAAI,KAAK,IAAT,mBAAuB,GAAS,CACrD,OAAQ,MACR,KAAM,EACN,QAAO,iBAAO,KAAK,W,aAHf,E,QAME,G,0CAGC,CAAE,KAAM,CAAE,IAAK,GAAS,MAAO,O,QAExB,O,UAAM,EAAI,O,eAAlB,E,yBACC,CAAE,KAAM,KAAM,U,mFAGhB,CAAE,KAAM,KAAM,MAAK,O,4DA5FhC,kBAsGQ,SACJ,EACA,G,2HAGe,O,kBAAM,GAAI,UAClB,KAAK,IADa,gBAErB,CAAE,SAAU,KAAK,SAAU,UAAW,EAAU,eAAgB,GAChE,CAAE,QAAS,KAAK,U,cAHZ,E,yBAKC,CAAE,OAAM,MAAO,O,yDAEf,CAAE,KAAM,KAAM,MAAK,O,2DAlHhC,6BA4HQ,SACJ,EACA,G,+HAQa,O,SADL,EAAQ,KAAK,cAAc,G,SAChB,GAAI,UAChB,KAAK,IADW,wBACQ,GAC3B,CAAE,aACF,CAAE,QAAS,KAAK,U,cAHd,E,OAKE,E,UAAe,KAAK,K,OAAM,EAAK,WACrC,EAAO,CAAE,a,kBACF,CAAE,OAAM,MAAO,KAAM,c,2DAErB,CAAE,KAAM,KAAM,MAAK,KAAE,UAAW,O,4DA/I7C,sBAwJQ,SAAS,G,+HAGC,O,SADN,EAAQ,KAAK,cAAc,G,SACf,GAAG,UAAI,KAAK,IAAT,mBAAuB,GAAS,CACnD,QAAS,KAAK,QACd,eAAe,I,OAEJ,OAJP,E,gBAIa,EAAI,O,cAAjB,E,yBACC,CAAE,OAAM,MAAO,O,2DAEf,CAAE,KAAM,KAAM,MAAK,O,4DAlKhC,0BA2KE,SACE,GAMA,IACE,IAAM,EAAQ,KAAK,cAAc,GAC3B,EAAS,UAAM,KAAK,IAAX,0BAAgC,GAE/C,MAAO,CAAE,KADI,CAAE,aACA,MAAO,KAAM,aAC5B,MAAO,GACP,MAAO,CAAE,KAAM,KAAM,QAAO,UAAW,SAxL7C,oBAiMQ,SAAO,G,2HAEI,O,kBAAM,GAAM,UACpB,KAAK,IADe,mBACD,KAAK,UAC3B,CAAE,SAAU,GACZ,CAAE,QAAS,KAAK,U,cAHZ,E,yBAKC,CAAE,OAAM,MAAO,O,yDAEf,CAAE,KAAM,KAAM,MAAK,O,2DA1MhC,kBAkPQ,SACJ,EACA,EACA,G,6HAIe,O,SADP,EAAI,6CAAQ,IAA2B,GAAO,CAAE,OAAQ,GAAQ,K,SACnD,GAAI,UAClB,KAAK,IADa,wBACM,KAAK,UAChC,EACA,CAAE,QAAS,KAAK,SAChB,G,cAJI,E,yBAMC,CAAE,OAAM,MAAO,O,yDAEf,CAAE,KAAM,KAAM,MAAK,O,2DAjQhC,2BAqQE,SAAc,GACZ,gBAAU,KAAK,SAAf,YAA2B,OAtQ/B,K,uSChBa,GAAb,YAAE,qBAAF,iBACI,SAAF,EAAY4F,GAAoD,IAAvC,EAAuC,uDAAF,GAAE,uCACxD,EAAK,GAFb,uBAAE,IAAJ,OAAI,MAUF,SAAK,GACH,OAAO,IAAI,GAAe,KAAK,IAAK,KAAK,QAAS,OAXtD,GCCA,WAII,SAAF,EAAY,GAAoD,IAAvC,EAAuC,uDAAF,GAAE,oBAC9D,KAAK,IAAM,EACX,KAAK,QAAU,EANjB,uBAAE,IAAJ,cAAI,MAYI,W,2HAEW,O,kBAAM,GAAG,UAAI,KAAK,IAAT,WAAuB,CAAE,QAAS,KAAK,U,cAAvD,E,yBACC,CAAE,OAAM,MAAO,O,yDAEf,CAAE,KAAM,KAAM,MAAK,O,2DAjBhC,CAAI,IAAJ,YAAI,MA0BI,SAAU,G,2HAEC,O,kBAAM,GAAG,UAAI,KAAK,IAAT,mBAAuB,GAAM,CAAE,QAAS,KAAK,U,cAA7D,E,yBACC,CAAE,OAAM,MAAO,O,yDAEf,CAAE,KAAM,KAAM,MAAK,O,2DA/BhC,CAAI,IAAJ,eAAI,MAyCI,SACJ,GACgD,IAAhD,EAAgD,uDAAjB,CAAE,QAAQ,G,2HAG1B,O,kBAAM,GAAI,UAClB,KAAK,IADa,WAErB,CAAE,KAAI,KAAM,EAAI,OAAQ,EAAQ,QAChC,CAAE,QAAS,KAAK,U,cAHZ,E,yBAKC,CAAE,KAAM,EAAK,KAAM,MAAO,O,yDAE1B,CAAE,KAAM,KAAM,MAAK,O,2DArDhC,CAAI,IAAJ,eAAI,MA8DI,SACJ,EACA,G,2HAGe,O,kBAAM,GAAG,UACjB,KAAK,IADY,mBACE,GACtB,CAAE,KAAI,KAAM,EAAI,OAAQ,EAAQ,QAChC,CAAE,QAAS,KAAK,U,cAHZ,E,yBAKC,CAAE,OAAM,MAAO,O,yDAEf,CAAE,KAAM,KAAM,MAAK,O,2DA1EhC,CAAI,IAAJ,cAAI,MAmFI,SACJ,G,2HAGe,O,kBAAM,GAAI,UAAI,KAAK,IAAT,mBAAuB,EAAvB,UAAmC,GAAI,CAAE,QAAS,KAAK,U,cAAxE,E,yBACC,CAAE,OAAM,MAAO,O,yDAEf,CAAE,KAAM,KAAM,MAAK,O,2DA1FhC,CAAI,IAAJ,eAAI,MAoGI,SACJ,G,2HAGe,O,kBAAM,GAAM,UAAI,KAAK,IAAT,mBAAuB,GAAM,GAAI,CAAE,QAAS,KAAK,U,cAApE,E,yBACC,CAAE,OAAM,MAAO,O,yDAEf,CAAE,KAAM,KAAM,MAAK,O,6DA3GhC,M,uSCKM,GAAkB,CACtB,OAAQ,SACR,kBAAkB,EAClB,gBAAgB,EAChB,oBAAoB,EACpB,aAAc,WAAW,aACzB,QxBZ6B,IwBoBV,G,WAuBjB,SAAF,EACY,EACA,EACV,GAEI,GAF2B,oBAFrB,mBACA,oBAGL,EAAa,MAAM,IAAI,MAAM,4BAC9B,IAAC,EAAa,MAAM,IAAI,MAAM,4BAE9B,IAAE,EAAQ,+BAAQ,IAAoB,GACtC,KAAC,QAAL,UAAkB,EAAlB,YACI,KAAC,YAAc,UAAG,EAAH,gBAA6B,QAAQ,OAAQ,MAC5D,KAAC,QAAL,UAAkB,EAAlB,YACI,KAAC,WAAL,UAAqB,EAArB,eACA,KAAK,OAAS,EAAS,OAEvB,KAAK,KAAO,KAAK,wBAAwB,GACzC,KAAK,SAAW,KAAK,sB,yCAWvB,WACQ,OAAC,IAAI,GAAsB,KAAK,WAAY,KAAK,qB,kBAQzD,SAAc,GACZ,IAAM,EAAG,UAAM,KAAK,QAAX,YAAsB,GAC/B,OAAO,IAAI,GAAwB,EAAK,CACtC,QAAS,KAAK,kBACd,OAAQ,KAAK,OACb,SAAU,KAAK,SACf,Y,iBAUJ,SAAa,EAAY,GAEjB,OADO,KAAK,uBACN,IAAO,EAAI,K,gCAQzB,SAAmB,GAAkC,WAC7C,OAAC,IAAI,SAAQ,SAAO,GAAP,OAAkB,qHAEjC,OAFiC,kBAE3B,KAAK,mBAAmB,GAFG,UAI3B,EAAoB,KAAK,mBAAmB,OAJjB,iBAMb,OANa,SAMP,KAAK,SAAS,aANP,qBAMvB,EANuB,EAMvB,OANuB,0CAOb,EAAQ,CAAE,WAPG,iCAS1B,EAAQ,CAAE,MAAO,KAAM,KAAM,CAAE,wBATL,2DAW1B,EAAQ,CAAE,MAAK,QAXW,+D,gCAgBzB,SAAmB,G,wHAC1B,EAAa,W,gBAChB,O,SAAM,KAAK,cAAc,G,gFAO7B,WACQ,OAAC,KAAK,SAAS,W,qCAGf,YAKgB,IAJtB,EAIsB,EAJtB,iBACA,EAGsB,EAHtB,eACA,EAEsB,EAFtB,mBACA,EACsB,EADtB,aAEA,OAAO,IAAI,EAAmB,CAC5B,IAAK,KAAK,QACV,QAAS,CACP,cAAa,iBAAY,KAAK,aAC9B,OAAM,UAAK,KAAK,cAElB,mBACA,iBACA,qBACA,mB,iCAII,WACN,OAAO,IAAI,GAAe,KAAK,YAAa,CAC1C,OAAQ,CAAE,OAAQ,KAAK,iB,kCAInB,WACA,OAAC,IAAI,EAAgB,KAAK,QAAS,CAC/B,QAAC,KAAK,kBACd,OAAQ,KAAK,W,6BAIT,W,QACA,EAAqC,GACrC,EAA8C,QAApC,EAAsB,QAAtB,EAAG,KAAK,KAAK,iBAAS,eAAE,oBAAY,QAAI,KAAK,YAG7D,OAFA,EAAO,OAAa,KAAK,YACzB,EAAO,cAAP,iBAAqC,GAC9B,I,2BAGD,SAAc,GAAkC,WACtD,OAAO,IAAI,SAAQ,SAAC,EAAS,GAC3B,EACG,cACA,QAAQ,MAAM,WAEb,OADA,EAAK,SAAS,OAAO,GACd,GAAQ,MAEhB,QAAQ,SAAS,SAAC,GAAD,OAAc,EAAO,a,KC1KzC,GAAe,SACnB,EACA,EACA,GAEA,OAAO,IAAI,GAAe,EAAa,EAAa,K,oBCpBtD,IAAIsE,EACJ,GAA0B,kBAAfC,WACVD,EAAcC,gBAEd,IACCD,EAAcE,EAAQ,KACrB,MAAO1K,IAFT,QAKC,GADKwK,GAAiC,qBAAXD,SAA0BC,EAAcD,SAC9DC,EAAe,MAAM,IAAIhG,MAAM,mCAItC,IAAImG,EAAkBH,EAAYI,WAAaJ,EAAYK,aACvDC,EAAoBJ,EAAQ,KAMhC,SAASK,EAAaC,EAAKC,GAiB1B,OAdIA,EACe,IAAIN,EAAgBK,EAAKC,GAGzB,IAAIN,EAAgBK,GAYpCL,GACH,CAAC,aAAc,OAAQ,UAAW,UAAUzI,SAAQ,SAASgJ,GAC5D5N,OAAOmM,eAAesB,EAAcG,EAAM,CACzC7G,IAAK,WAAa,OAAOsG,EAAgBO,SAQ5C7L,EAAOC,QAAU,CACb,aAAiBqL,EAAkBI,EAAe,KAClD,QAAiBD,I,kBCpDrB,IAAIK,EAAgB,WACnB,GAAoB,kBAAT9K,MAAqBA,KAAM,OAAOA,KAC7C,GAAsB,kBAAXkK,QAAuBA,OAAQ,OAAOA,OACjD,MAAM,IAAI/F,MAAM,oCAGjBnF,EAAOC,QAAW,WACjB,GAAIgB,KAAM,OAAOA,KAKjB,GAA0B,kBAAfmK,YAA2BA,WAAY,OAAOA,WAKzD,IACCnN,OAAOmM,eAAenM,OAAOoB,UAAW,aAAc,CACrD2F,IAAK,WAAc,OAAO/D,MAC1B2J,cAAc,IAEd,MAAOjK,GAGR,OAAOmL,IAER,IAEC,OAAKC,YAAmBD,IAFzB,eAKQ7N,OAAOoB,UAAU0M,YA1BR,I,oBCNlB/L,EAAOC,QAAUoL,EAAQ,KAAmBW,S","file":"static/js/2.0f77f082.chunk.js","sourcesContent":["import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","module.exports = require(\"regenerator-runtime\");\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","var global = typeof self !== 'undefined' ? self : this;\nvar __self__ = (function () {\nfunction F() {\nthis.fetch = false;\nthis.DOMException = global.DOMException\n}\nF.prototype = global;\nreturn new F();\n})();\n(function(self) {\n\nvar irrelevant = (function (exports) {\n\n  var support = {\n    searchParams: 'URLSearchParams' in self,\n    iterable: 'Symbol' in self && 'iterator' in Symbol,\n    blob:\n      'FileReader' in self &&\n      'Blob' in self &&\n      (function() {\n        try {\n          new Blob();\n          return true\n        } catch (e) {\n          return false\n        }\n      })(),\n    formData: 'FormData' in self,\n    arrayBuffer: 'ArrayBuffer' in self\n  };\n\n  function isDataView(obj) {\n    return obj && DataView.prototype.isPrototypeOf(obj)\n  }\n\n  if (support.arrayBuffer) {\n    var viewClasses = [\n      '[object Int8Array]',\n      '[object Uint8Array]',\n      '[object Uint8ClampedArray]',\n      '[object Int16Array]',\n      '[object Uint16Array]',\n      '[object Int32Array]',\n      '[object Uint32Array]',\n      '[object Float32Array]',\n      '[object Float64Array]'\n    ];\n\n    var isArrayBufferView =\n      ArrayBuffer.isView ||\n      function(obj) {\n        return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n      };\n  }\n\n  function normalizeName(name) {\n    if (typeof name !== 'string') {\n      name = String(name);\n    }\n    if (/[^a-z0-9\\-#$%&'*+.^_`|~]/i.test(name)) {\n      throw new TypeError('Invalid character in header field name')\n    }\n    return name.toLowerCase()\n  }\n\n  function normalizeValue(value) {\n    if (typeof value !== 'string') {\n      value = String(value);\n    }\n    return value\n  }\n\n  // Build a destructive iterator for the value list\n  function iteratorFor(items) {\n    var iterator = {\n      next: function() {\n        var value = items.shift();\n        return {done: value === undefined, value: value}\n      }\n    };\n\n    if (support.iterable) {\n      iterator[Symbol.iterator] = function() {\n        return iterator\n      };\n    }\n\n    return iterator\n  }\n\n  function Headers(headers) {\n    this.map = {};\n\n    if (headers instanceof Headers) {\n      headers.forEach(function(value, name) {\n        this.append(name, value);\n      }, this);\n    } else if (Array.isArray(headers)) {\n      headers.forEach(function(header) {\n        this.append(header[0], header[1]);\n      }, this);\n    } else if (headers) {\n      Object.getOwnPropertyNames(headers).forEach(function(name) {\n        this.append(name, headers[name]);\n      }, this);\n    }\n  }\n\n  Headers.prototype.append = function(name, value) {\n    name = normalizeName(name);\n    value = normalizeValue(value);\n    var oldValue = this.map[name];\n    this.map[name] = oldValue ? oldValue + ', ' + value : value;\n  };\n\n  Headers.prototype['delete'] = function(name) {\n    delete this.map[normalizeName(name)];\n  };\n\n  Headers.prototype.get = function(name) {\n    name = normalizeName(name);\n    return this.has(name) ? this.map[name] : null\n  };\n\n  Headers.prototype.has = function(name) {\n    return this.map.hasOwnProperty(normalizeName(name))\n  };\n\n  Headers.prototype.set = function(name, value) {\n    this.map[normalizeName(name)] = normalizeValue(value);\n  };\n\n  Headers.prototype.forEach = function(callback, thisArg) {\n    for (var name in this.map) {\n      if (this.map.hasOwnProperty(name)) {\n        callback.call(thisArg, this.map[name], name, this);\n      }\n    }\n  };\n\n  Headers.prototype.keys = function() {\n    var items = [];\n    this.forEach(function(value, name) {\n      items.push(name);\n    });\n    return iteratorFor(items)\n  };\n\n  Headers.prototype.values = function() {\n    var items = [];\n    this.forEach(function(value) {\n      items.push(value);\n    });\n    return iteratorFor(items)\n  };\n\n  Headers.prototype.entries = function() {\n    var items = [];\n    this.forEach(function(value, name) {\n      items.push([name, value]);\n    });\n    return iteratorFor(items)\n  };\n\n  if (support.iterable) {\n    Headers.prototype[Symbol.iterator] = Headers.prototype.entries;\n  }\n\n  function consumed(body) {\n    if (body.bodyUsed) {\n      return Promise.reject(new TypeError('Already read'))\n    }\n    body.bodyUsed = true;\n  }\n\n  function fileReaderReady(reader) {\n    return new Promise(function(resolve, reject) {\n      reader.onload = function() {\n        resolve(reader.result);\n      };\n      reader.onerror = function() {\n        reject(reader.error);\n      };\n    })\n  }\n\n  function readBlobAsArrayBuffer(blob) {\n    var reader = new FileReader();\n    var promise = fileReaderReady(reader);\n    reader.readAsArrayBuffer(blob);\n    return promise\n  }\n\n  function readBlobAsText(blob) {\n    var reader = new FileReader();\n    var promise = fileReaderReady(reader);\n    reader.readAsText(blob);\n    return promise\n  }\n\n  function readArrayBufferAsText(buf) {\n    var view = new Uint8Array(buf);\n    var chars = new Array(view.length);\n\n    for (var i = 0; i < view.length; i++) {\n      chars[i] = String.fromCharCode(view[i]);\n    }\n    return chars.join('')\n  }\n\n  function bufferClone(buf) {\n    if (buf.slice) {\n      return buf.slice(0)\n    } else {\n      var view = new Uint8Array(buf.byteLength);\n      view.set(new Uint8Array(buf));\n      return view.buffer\n    }\n  }\n\n  function Body() {\n    this.bodyUsed = false;\n\n    this._initBody = function(body) {\n      this._bodyInit = body;\n      if (!body) {\n        this._bodyText = '';\n      } else if (typeof body === 'string') {\n        this._bodyText = body;\n      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n        this._bodyBlob = body;\n      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n        this._bodyFormData = body;\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this._bodyText = body.toString();\n      } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n        this._bodyArrayBuffer = bufferClone(body.buffer);\n        // IE 10-11 can't handle a DataView body.\n        this._bodyInit = new Blob([this._bodyArrayBuffer]);\n      } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n        this._bodyArrayBuffer = bufferClone(body);\n      } else {\n        this._bodyText = body = Object.prototype.toString.call(body);\n      }\n\n      if (!this.headers.get('content-type')) {\n        if (typeof body === 'string') {\n          this.headers.set('content-type', 'text/plain;charset=UTF-8');\n        } else if (this._bodyBlob && this._bodyBlob.type) {\n          this.headers.set('content-type', this._bodyBlob.type);\n        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8');\n        }\n      }\n    };\n\n    if (support.blob) {\n      this.blob = function() {\n        var rejected = consumed(this);\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return Promise.resolve(this._bodyBlob)\n        } else if (this._bodyArrayBuffer) {\n          return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as blob')\n        } else {\n          return Promise.resolve(new Blob([this._bodyText]))\n        }\n      };\n\n      this.arrayBuffer = function() {\n        if (this._bodyArrayBuffer) {\n          return consumed(this) || Promise.resolve(this._bodyArrayBuffer)\n        } else {\n          return this.blob().then(readBlobAsArrayBuffer)\n        }\n      };\n    }\n\n    this.text = function() {\n      var rejected = consumed(this);\n      if (rejected) {\n        return rejected\n      }\n\n      if (this._bodyBlob) {\n        return readBlobAsText(this._bodyBlob)\n      } else if (this._bodyArrayBuffer) {\n        return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n      } else if (this._bodyFormData) {\n        throw new Error('could not read FormData body as text')\n      } else {\n        return Promise.resolve(this._bodyText)\n      }\n    };\n\n    if (support.formData) {\n      this.formData = function() {\n        return this.text().then(decode)\n      };\n    }\n\n    this.json = function() {\n      return this.text().then(JSON.parse)\n    };\n\n    return this\n  }\n\n  // HTTP methods whose capitalization should be normalized\n  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT'];\n\n  function normalizeMethod(method) {\n    var upcased = method.toUpperCase();\n    return methods.indexOf(upcased) > -1 ? upcased : method\n  }\n\n  function Request(input, options) {\n    options = options || {};\n    var body = options.body;\n\n    if (input instanceof Request) {\n      if (input.bodyUsed) {\n        throw new TypeError('Already read')\n      }\n      this.url = input.url;\n      this.credentials = input.credentials;\n      if (!options.headers) {\n        this.headers = new Headers(input.headers);\n      }\n      this.method = input.method;\n      this.mode = input.mode;\n      this.signal = input.signal;\n      if (!body && input._bodyInit != null) {\n        body = input._bodyInit;\n        input.bodyUsed = true;\n      }\n    } else {\n      this.url = String(input);\n    }\n\n    this.credentials = options.credentials || this.credentials || 'same-origin';\n    if (options.headers || !this.headers) {\n      this.headers = new Headers(options.headers);\n    }\n    this.method = normalizeMethod(options.method || this.method || 'GET');\n    this.mode = options.mode || this.mode || null;\n    this.signal = options.signal || this.signal;\n    this.referrer = null;\n\n    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n      throw new TypeError('Body not allowed for GET or HEAD requests')\n    }\n    this._initBody(body);\n  }\n\n  Request.prototype.clone = function() {\n    return new Request(this, {body: this._bodyInit})\n  };\n\n  function decode(body) {\n    var form = new FormData();\n    body\n      .trim()\n      .split('&')\n      .forEach(function(bytes) {\n        if (bytes) {\n          var split = bytes.split('=');\n          var name = split.shift().replace(/\\+/g, ' ');\n          var value = split.join('=').replace(/\\+/g, ' ');\n          form.append(decodeURIComponent(name), decodeURIComponent(value));\n        }\n      });\n    return form\n  }\n\n  function parseHeaders(rawHeaders) {\n    var headers = new Headers();\n    // Replace instances of \\r\\n and \\n followed by at least one space or horizontal tab with a space\n    // https://tools.ietf.org/html/rfc7230#section-3.2\n    var preProcessedHeaders = rawHeaders.replace(/\\r?\\n[\\t ]+/g, ' ');\n    preProcessedHeaders.split(/\\r?\\n/).forEach(function(line) {\n      var parts = line.split(':');\n      var key = parts.shift().trim();\n      if (key) {\n        var value = parts.join(':').trim();\n        headers.append(key, value);\n      }\n    });\n    return headers\n  }\n\n  Body.call(Request.prototype);\n\n  function Response(bodyInit, options) {\n    if (!options) {\n      options = {};\n    }\n\n    this.type = 'default';\n    this.status = options.status === undefined ? 200 : options.status;\n    this.ok = this.status >= 200 && this.status < 300;\n    this.statusText = 'statusText' in options ? options.statusText : 'OK';\n    this.headers = new Headers(options.headers);\n    this.url = options.url || '';\n    this._initBody(bodyInit);\n  }\n\n  Body.call(Response.prototype);\n\n  Response.prototype.clone = function() {\n    return new Response(this._bodyInit, {\n      status: this.status,\n      statusText: this.statusText,\n      headers: new Headers(this.headers),\n      url: this.url\n    })\n  };\n\n  Response.error = function() {\n    var response = new Response(null, {status: 0, statusText: ''});\n    response.type = 'error';\n    return response\n  };\n\n  var redirectStatuses = [301, 302, 303, 307, 308];\n\n  Response.redirect = function(url, status) {\n    if (redirectStatuses.indexOf(status) === -1) {\n      throw new RangeError('Invalid status code')\n    }\n\n    return new Response(null, {status: status, headers: {location: url}})\n  };\n\n  exports.DOMException = self.DOMException;\n  try {\n    new exports.DOMException();\n  } catch (err) {\n    exports.DOMException = function(message, name) {\n      this.message = message;\n      this.name = name;\n      var error = Error(message);\n      this.stack = error.stack;\n    };\n    exports.DOMException.prototype = Object.create(Error.prototype);\n    exports.DOMException.prototype.constructor = exports.DOMException;\n  }\n\n  function fetch(input, init) {\n    return new Promise(function(resolve, reject) {\n      var request = new Request(input, init);\n\n      if (request.signal && request.signal.aborted) {\n        return reject(new exports.DOMException('Aborted', 'AbortError'))\n      }\n\n      var xhr = new XMLHttpRequest();\n\n      function abortXhr() {\n        xhr.abort();\n      }\n\n      xhr.onload = function() {\n        var options = {\n          status: xhr.status,\n          statusText: xhr.statusText,\n          headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n        };\n        options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL');\n        var body = 'response' in xhr ? xhr.response : xhr.responseText;\n        resolve(new Response(body, options));\n      };\n\n      xhr.onerror = function() {\n        reject(new TypeError('Network request failed'));\n      };\n\n      xhr.ontimeout = function() {\n        reject(new TypeError('Network request failed'));\n      };\n\n      xhr.onabort = function() {\n        reject(new exports.DOMException('Aborted', 'AbortError'));\n      };\n\n      xhr.open(request.method, request.url, true);\n\n      if (request.credentials === 'include') {\n        xhr.withCredentials = true;\n      } else if (request.credentials === 'omit') {\n        xhr.withCredentials = false;\n      }\n\n      if ('responseType' in xhr && support.blob) {\n        xhr.responseType = 'blob';\n      }\n\n      request.headers.forEach(function(value, name) {\n        xhr.setRequestHeader(name, value);\n      });\n\n      if (request.signal) {\n        request.signal.addEventListener('abort', abortXhr);\n\n        xhr.onreadystatechange = function() {\n          // DONE (success or failure)\n          if (xhr.readyState === 4) {\n            request.signal.removeEventListener('abort', abortXhr);\n          }\n        };\n      }\n\n      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit);\n    })\n  }\n\n  fetch.polyfill = true;\n\n  if (!self.fetch) {\n    self.fetch = fetch;\n    self.Headers = Headers;\n    self.Request = Request;\n    self.Response = Response;\n  }\n\n  exports.Headers = Headers;\n  exports.Request = Request;\n  exports.Response = Response;\n  exports.fetch = fetch;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n  return exports;\n\n}({}));\n})(__self__);\n__self__.fetch.ponyfill = true;\n// Remove \"polyfill\" property added by whatwg-fetch\ndelete __self__.fetch.polyfill;\n// Choose between native implementation (global) or custom implementation (__self__)\n// var ctx = global.fetch ? global : __self__;\nvar ctx = __self__; // this line disable service worker support temporarily\nexports = ctx.fetch // To enable: import fetch from 'cross-fetch'\nexports.default = ctx.fetch // For TypeScript consumers without esModuleInterop.\nexports.fetch = ctx.fetch // To enable: import {fetch} from 'cross-fetch'\nexports.Headers = ctx.Headers\nexports.Request = ctx.Request\nexports.Response = ctx.Response\nmodule.exports = exports\n","import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport fetch from 'cross-fetch';\nconst _getErrorMessage = (err) => err.msg || err.message || err.error_description || err.error || JSON.stringify(err);\nconst handleError = (error, reject) => {\n    if (typeof error.json !== 'function') {\n        return reject(error);\n    }\n    error.json().then((err) => {\n        return reject({\n            message: _getErrorMessage(err),\n            status: (error === null || error === void 0 ? void 0 : error.status) || 500,\n        });\n    });\n};\nconst _getRequestParams = (method, options, parameters, body) => {\n    const params = { method, headers: (options === null || options === void 0 ? void 0 : options.headers) || {} };\n    if (method === 'GET') {\n        return params;\n    }\n    params.headers = Object.assign({ 'Content-Type': 'application/json' }, options === null || options === void 0 ? void 0 : options.headers);\n    params.body = JSON.stringify(body);\n    return Object.assign(Object.assign({}, params), parameters);\n};\nfunction _handleRequest(method, url, options, parameters, body) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return new Promise((resolve, reject) => {\n            fetch(url, _getRequestParams(method, options, parameters, body))\n                .then((result) => {\n                if (!result.ok)\n                    throw result;\n                if (options === null || options === void 0 ? void 0 : options.noResolveJson)\n                    return resolve(result);\n                return result.json();\n            })\n                .then((data) => resolve(data))\n                .catch((error) => handleError(error, reject));\n        });\n    });\n}\nexport function get(url, options, parameters) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return _handleRequest('GET', url, options, parameters);\n    });\n}\nexport function post(url, body, options, parameters) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return _handleRequest('POST', url, options, parameters, body);\n    });\n}\nexport function put(url, body, options, parameters) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return _handleRequest('PUT', url, options, parameters, body);\n    });\n}\nexport function remove(url, body, options, parameters) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return _handleRequest('DELETE', url, options, parameters, body);\n    });\n}\n//# sourceMappingURL=fetch.js.map","export const VSN = '1.0.0';\nexport const DEFAULT_TIMEOUT = 10000;\nexport const WS_CLOSE_NORMAL = 1000;\nexport var SOCKET_STATES;\n(function (SOCKET_STATES) {\n    SOCKET_STATES[SOCKET_STATES[\"connecting\"] = 0] = \"connecting\";\n    SOCKET_STATES[SOCKET_STATES[\"open\"] = 1] = \"open\";\n    SOCKET_STATES[SOCKET_STATES[\"closing\"] = 2] = \"closing\";\n    SOCKET_STATES[SOCKET_STATES[\"closed\"] = 3] = \"closed\";\n})(SOCKET_STATES || (SOCKET_STATES = {}));\nexport var CHANNEL_STATES;\n(function (CHANNEL_STATES) {\n    CHANNEL_STATES[\"closed\"] = \"closed\";\n    CHANNEL_STATES[\"errored\"] = \"errored\";\n    CHANNEL_STATES[\"joined\"] = \"joined\";\n    CHANNEL_STATES[\"joining\"] = \"joining\";\n    CHANNEL_STATES[\"leaving\"] = \"leaving\";\n})(CHANNEL_STATES || (CHANNEL_STATES = {}));\nexport var CHANNEL_EVENTS;\n(function (CHANNEL_EVENTS) {\n    CHANNEL_EVENTS[\"close\"] = \"phx_close\";\n    CHANNEL_EVENTS[\"error\"] = \"phx_error\";\n    CHANNEL_EVENTS[\"join\"] = \"phx_join\";\n    CHANNEL_EVENTS[\"reply\"] = \"phx_reply\";\n    CHANNEL_EVENTS[\"leave\"] = \"phx_leave\";\n})(CHANNEL_EVENTS || (CHANNEL_EVENTS = {}));\nexport var TRANSPORTS;\n(function (TRANSPORTS) {\n    TRANSPORTS[\"websocket\"] = \"websocket\";\n})(TRANSPORTS || (TRANSPORTS = {}));\n//# sourceMappingURL=constants.js.map","/**\n * Serialize data into a cookie header.\n */\nfunction serialize(name, val, options) {\n    const opt = options || {};\n    const enc = encodeURIComponent;\n    const fieldContentRegExp = /^[\\u0009\\u0020-\\u007e\\u0080-\\u00ff]+$/;\n    if (typeof enc !== 'function') {\n        throw new TypeError('option encode is invalid');\n    }\n    if (!fieldContentRegExp.test(name)) {\n        throw new TypeError('argument name is invalid');\n    }\n    const value = enc(val);\n    if (value && !fieldContentRegExp.test(value)) {\n        throw new TypeError('argument val is invalid');\n    }\n    let str = name + '=' + value;\n    if (null != opt.maxAge) {\n        const maxAge = opt.maxAge - 0;\n        if (isNaN(maxAge) || !isFinite(maxAge)) {\n            throw new TypeError('option maxAge is invalid');\n        }\n        str += '; Max-Age=' + Math.floor(maxAge);\n    }\n    if (opt.domain) {\n        if (!fieldContentRegExp.test(opt.domain)) {\n            throw new TypeError('option domain is invalid');\n        }\n        str += '; Domain=' + opt.domain;\n    }\n    if (opt.path) {\n        if (!fieldContentRegExp.test(opt.path)) {\n            throw new TypeError('option path is invalid');\n        }\n        str += '; Path=' + opt.path;\n    }\n    if (opt.expires) {\n        if (typeof opt.expires.toUTCString !== 'function') {\n            throw new TypeError('option expires is invalid');\n        }\n        str += '; Expires=' + opt.expires.toUTCString();\n    }\n    if (opt.httpOnly) {\n        str += '; HttpOnly';\n    }\n    if (opt.secure) {\n        str += '; Secure';\n    }\n    if (opt.sameSite) {\n        const sameSite = typeof opt.sameSite === 'string' ? opt.sameSite.toLowerCase() : opt.sameSite;\n        switch (sameSite) {\n            case 'lax':\n                str += '; SameSite=Lax';\n                break;\n            case 'strict':\n                str += '; SameSite=Strict';\n                break;\n            case 'none':\n                str += '; SameSite=None';\n                break;\n            default:\n                throw new TypeError('option sameSite is invalid');\n        }\n    }\n    return str;\n}\n/**\n * Based on the environment and the request we know if a secure cookie can be set.\n */\nfunction isSecureEnvironment(req) {\n    if (!req || !req.headers || !req.headers.host) {\n        throw new Error('The \"host\" request header is not available');\n    }\n    const host = (req.headers.host.indexOf(':') > -1 && req.headers.host.split(':')[0]) || req.headers.host;\n    if (['localhost', '127.0.0.1'].indexOf(host) > -1 || host.endsWith('.local')) {\n        return false;\n    }\n    return true;\n}\n/**\n * Serialize a cookie to a string.\n */\nfunction serializeCookie(cookie, secure) {\n    var _a, _b, _c;\n    return serialize(cookie.name, cookie.value, {\n        maxAge: cookie.maxAge,\n        expires: new Date(Date.now() + cookie.maxAge * 1000),\n        httpOnly: true,\n        secure,\n        path: (_a = cookie.path) !== null && _a !== void 0 ? _a : '/',\n        domain: (_b = cookie.domain) !== null && _b !== void 0 ? _b : '',\n        sameSite: (_c = cookie.sameSite) !== null && _c !== void 0 ? _c : 'lax',\n    });\n}\n/**\n * Set one or more cookies.\n */\nexport function setCookies(req, res, cookies) {\n    const strCookies = cookies.map((c) => serializeCookie(c, isSecureEnvironment(req)));\n    const previousCookies = res.getHeader('Set-Cookie');\n    if (previousCookies) {\n        if (previousCookies instanceof Array) {\n            Array.prototype.push.apply(strCookies, previousCookies);\n        }\n        else if (typeof previousCookies === 'string') {\n            strCookies.push(previousCookies);\n        }\n    }\n    res.setHeader('Set-Cookie', strCookies);\n}\n/**\n * Set one or more cookies.\n */\nexport function setCookie(req, res, cookie) {\n    setCookies(req, res, [cookie]);\n}\nexport function deleteCookie(req, res, name) {\n    setCookie(req, res, {\n        name,\n        value: '',\n        maxAge: -1,\n    });\n}\n//# sourceMappingURL=cookies.js.map","export const isBrowser = () => typeof window !== 'undefined';\n//# sourceMappingURL=helpers.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { get, post, put, remove } from './lib/fetch';\nimport { COOKIE_OPTIONS } from './lib/constants';\nimport { setCookie, deleteCookie } from './lib/cookies';\nimport { expiresAt } from './lib/helpers';\nexport default class GoTrueApi {\n    constructor({ url = '', headers = {}, cookieOptions, }) {\n        this.url = url;\n        this.headers = headers;\n        this.cookieOptions = Object.assign(Object.assign({}, COOKIE_OPTIONS), cookieOptions);\n    }\n    /**\n     * Creates a new user using their email address.\n     * @param email The email address of the user.\n     * @param password The password of the user.\n     * @param redirectTo A URL or mobile address to send the user to after they are confirmed.\n     *\n     * @returns A logged-in session if the server has \"autoconfirm\" ON\n     * @returns A user if the server has \"autoconfirm\" OFF\n     */\n    signUpWithEmail(email, password, options = {}) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                let headers = Object.assign({}, this.headers);\n                let queryString = '';\n                if (options.redirectTo) {\n                    queryString = '?redirect_to=' + encodeURIComponent(options.redirectTo);\n                }\n                const data = yield post(`${this.url}/signup${queryString}`, { email, password }, { headers });\n                let session = Object.assign({}, data);\n                if (session.expires_in)\n                    session.expires_at = expiresAt(data.expires_in);\n                return { data: session, error: null };\n            }\n            catch (error) {\n                return { data: null, error };\n            }\n        });\n    }\n    /**\n     * Logs in an existing user using their email address.\n     * @param email The email address of the user.\n     * @param password The password of the user.\n     * @param redirectTo A URL or mobile address to send the user to after they are confirmed.\n     */\n    signInWithEmail(email, password, options = {}) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                let headers = Object.assign({}, this.headers);\n                let queryString = '?grant_type=password';\n                if (options.redirectTo) {\n                    queryString += '&redirect_to=' + encodeURIComponent(options.redirectTo);\n                }\n                const data = yield post(`${this.url}/token${queryString}`, { email, password }, { headers });\n                let session = Object.assign({}, data);\n                if (session.expires_in)\n                    session.expires_at = expiresAt(data.expires_in);\n                return { data: session, error: null };\n            }\n            catch (error) {\n                return { data: null, error };\n            }\n        });\n    }\n    /**\n     * Sends a magic login link to an email address.\n     * @param email The email address of the user.\n     * @param redirectTo A URL or mobile address to send the user to after they are confirmed.\n     */\n    sendMagicLinkEmail(email, options = {}) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                let headers = Object.assign({}, this.headers);\n                let queryString = '';\n                if (options.redirectTo) {\n                    queryString += '?redirect_to=' + encodeURIComponent(options.redirectTo);\n                }\n                const data = yield post(`${this.url}/magiclink${queryString}`, { email }, { headers });\n                return { data, error: null };\n            }\n            catch (error) {\n                return { data: null, error };\n            }\n        });\n    }\n    /**\n     * Sends an invite link to an email address.\n     * @param email The email address of the user.\n     * @param redirectTo A URL or mobile address to send the user to after they are confirmed.\n     */\n    inviteUserByEmail(email, options = {}) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                let headers = Object.assign({}, this.headers);\n                let queryString = '';\n                if (options.redirectTo) {\n                    queryString += '?redirect_to=' + encodeURIComponent(options.redirectTo);\n                }\n                const data = yield post(`${this.url}/invite${queryString}`, { email }, { headers });\n                return { data, error: null };\n            }\n            catch (error) {\n                return { data: null, error };\n            }\n        });\n    }\n    /**\n     * Sends a reset request to an email address.\n     * @param email The email address of the user.\n     * @param redirectTo A URL or mobile address to send the user to after they are confirmed.\n     */\n    resetPasswordForEmail(email, options = {}) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                let headers = Object.assign({}, this.headers);\n                let queryString = '';\n                if (options.redirectTo) {\n                    queryString += '?redirect_to=' + encodeURIComponent(options.redirectTo);\n                }\n                const data = yield post(`${this.url}/recover${queryString}`, { email }, { headers });\n                return { data, error: null };\n            }\n            catch (error) {\n                return { data: null, error };\n            }\n        });\n    }\n    /**\n     * Create a temporary object with all configured headers and\n     * adds the Authorization token to be used on request methods\n     * @param jwt A valid, logged-in JWT.\n     */\n    _createRequestHeaders(jwt) {\n        const headers = Object.assign({}, this.headers);\n        headers['Authorization'] = `Bearer ${jwt}`;\n        return headers;\n    }\n    /**\n     * Removes a logged-in session.\n     * @param jwt A valid, logged-in JWT.\n     */\n    signOut(jwt) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                yield post(`${this.url}/logout`, {}, { headers: this._createRequestHeaders(jwt), noResolveJson: true });\n                return { error: null };\n            }\n            catch (error) {\n                return { error };\n            }\n        });\n    }\n    /**\n     * Generates the relevant login URL for a third-party provider.\n     * @param provider One of the providers supported by GoTrue.\n     * @param redirectTo A URL or mobile address to send the user to after they are confirmed.\n     * @param scopes A space-separated list of scopes granted to the OAuth application.\n     */\n    getUrlForProvider(provider, options) {\n        let urlParams = [`provider=${encodeURIComponent(provider)}`];\n        if (options === null || options === void 0 ? void 0 : options.redirectTo) {\n            urlParams.push(`redirect_to=${encodeURIComponent(options.redirectTo)}`);\n        }\n        if (options === null || options === void 0 ? void 0 : options.scopes) {\n            urlParams.push(`scopes=${encodeURIComponent(options.scopes)}`);\n        }\n        return `${this.url}/authorize?${urlParams.join('&')}`;\n    }\n    /**\n     * Gets the user details.\n     * @param jwt A valid, logged-in JWT.\n     */\n    getUser(jwt) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const data = yield get(`${this.url}/user`, { headers: this._createRequestHeaders(jwt) });\n                return { user: data, data, error: null };\n            }\n            catch (error) {\n                return { user: null, data: null, error };\n            }\n        });\n    }\n    /**\n     * Updates the user data.\n     * @param jwt A valid, logged-in JWT.\n     * @param attributes The data you want to update.\n     */\n    updateUser(jwt, attributes) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const data = yield put(`${this.url}/user`, attributes, {\n                    headers: this._createRequestHeaders(jwt),\n                });\n                return { user: data, data, error: null };\n            }\n            catch (error) {\n                return { user: null, data: null, error };\n            }\n        });\n    }\n    /**\n     * Delete an user.\n     * @param uid The user uid you want to remove.\n     * @param jwt A valid JWT. Must be a full-access API key (e.g. service_role key).\n     */\n    deleteUser(uid, jwt) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const data = yield remove(`${this.url}/admin/users/${uid}`, {}, {\n                    headers: this._createRequestHeaders(jwt),\n                });\n                return { user: data, data, error: null };\n            }\n            catch (error) {\n                return { user: null, data: null, error };\n            }\n        });\n    }\n    /**\n     * Generates a new JWT.\n     * @param refreshToken A valid refresh token that was returned on login.\n     */\n    refreshAccessToken(refreshToken) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const data = yield post(`${this.url}/token?grant_type=refresh_token`, { refresh_token: refreshToken }, { headers: this.headers });\n                let session = Object.assign({}, data);\n                if (session.expires_in)\n                    session.expires_at = expiresAt(data.expires_in);\n                return { data: session, error: null };\n            }\n            catch (error) {\n                return { data: null, error };\n            }\n        });\n    }\n    /**\n     * Set/delete the auth cookie based on the AuthChangeEvent.\n     * Works for Next.js & Express (requires cookie-parser middleware).\n     */\n    setAuthCookie(req, res) {\n        if (req.method !== 'POST') {\n            res.setHeader('Allow', 'POST');\n            res.status(405).end('Method Not Allowed');\n        }\n        const { event, session } = req.body;\n        if (!event)\n            throw new Error('Auth event missing!');\n        if (event === 'SIGNED_IN') {\n            if (!session)\n                throw new Error('Auth session missing!');\n            setCookie(req, res, {\n                name: this.cookieOptions.name,\n                value: session.access_token,\n                domain: this.cookieOptions.domain,\n                maxAge: this.cookieOptions.lifetime,\n                path: this.cookieOptions.path,\n                sameSite: this.cookieOptions.sameSite,\n            });\n        }\n        if (event === 'SIGNED_OUT')\n            deleteCookie(req, res, this.cookieOptions.name);\n        res.status(200).json({});\n    }\n    /**\n     * Get user by reading the cookie from the request.\n     * Works for Next.js & Express (requires cookie-parser middleware).\n     */\n    getUserByCookie(req) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                if (!req.cookies)\n                    throw new Error('Not able to parse cookies! When using Express make sure the cookie-parser middleware is in use!');\n                if (!req.cookies[this.cookieOptions.name])\n                    throw new Error('No cookie found!');\n                const token = req.cookies[this.cookieOptions.name];\n                const { user, error } = yield this.getUser(token);\n                if (error)\n                    throw error;\n                return { user, data: user, error: null };\n            }\n            catch (error) {\n                return { user: null, data: null, error };\n            }\n        });\n    }\n}\n//# sourceMappingURL=GoTrueApi.js.map","// @ts-nocheck\n/**\n * https://mathiasbynens.be/notes/globalthis\n */\nexport function polyfillGlobalThis() {\n    if (typeof globalThis === 'object')\n        return;\n    try {\n        Object.defineProperty(Object.prototype, '__magic__', {\n            get: function () {\n                return this;\n            },\n            configurable: true,\n        });\n        __magic__.globalThis = __magic__;\n        delete Object.prototype.__magic__;\n    }\n    catch (e) {\n        if (typeof self !== 'undefined') {\n            self.globalThis = self;\n        }\n    }\n}\n//# sourceMappingURL=polyfills.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport GoTrueApi from './GoTrueApi';\nimport { isBrowser, getParameterByName, uuid, LocalStorage } from './lib/helpers';\nimport { GOTRUE_URL, DEFAULT_HEADERS, STORAGE_KEY } from './lib/constants';\nimport { polyfillGlobalThis } from './lib/polyfills';\npolyfillGlobalThis(); // Make \"globalThis\" available\nconst DEFAULT_OPTIONS = {\n    url: GOTRUE_URL,\n    autoRefreshToken: true,\n    persistSession: true,\n    localStorage: globalThis.localStorage,\n    detectSessionInUrl: true,\n    headers: DEFAULT_HEADERS,\n};\nexport default class GoTrueClient {\n    /**\n     * Create a new client for use in the browser.\n     * @param options.url The URL of the GoTrue server.\n     * @param options.headers Any additional headers to send to the GoTrue server.\n     * @param options.detectSessionInUrl Set to \"true\" if you want to automatically detects OAuth grants in the URL and signs in the user.\n     * @param options.autoRefreshToken Set to \"true\" if you want to automatically refresh the token before expiring.\n     * @param options.persistSession Set to \"true\" if you want to automatically save the user session into local storage.\n     * @param options.localStorage\n     */\n    constructor(options) {\n        this.stateChangeEmitters = new Map();\n        const settings = Object.assign(Object.assign({}, DEFAULT_OPTIONS), options);\n        this.currentUser = null;\n        this.currentSession = null;\n        this.autoRefreshToken = settings.autoRefreshToken;\n        this.persistSession = settings.persistSession;\n        this.localStorage = new LocalStorage(settings.localStorage);\n        this.api = new GoTrueApi({\n            url: settings.url,\n            headers: settings.headers,\n            cookieOptions: settings.cookieOptions,\n        });\n        this._recoverSession();\n        this._recoverAndRefresh();\n        // Handle the OAuth redirect\n        try {\n            if (settings.detectSessionInUrl && isBrowser() && !!getParameterByName('access_token')) {\n                this.getSessionFromUrl({ storeSession: true });\n            }\n        }\n        catch (error) {\n            console.log('Error getting session from URL.');\n        }\n    }\n    /**\n     * Creates a new user.\n     * @type UserCredentials\n     * @param email The user's email address.\n     * @param password The user's password.\n     * @param redirectTo A URL or mobile address to send the user to after they are confirmed.\n     */\n    signUp({ email, password }, options = {}) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                this._removeSession();\n                const { data, error } = yield this.api.signUpWithEmail(email, password, {\n                    redirectTo: options.redirectTo,\n                });\n                if (error) {\n                    throw error;\n                }\n                if (!data) {\n                    throw 'An error occurred on sign up.';\n                }\n                let session = null;\n                let user = null;\n                if (data.access_token) {\n                    session = data;\n                    user = session.user;\n                    this._saveSession(session);\n                    this._notifyAllSubscribers('SIGNED_IN');\n                }\n                if (data.id) {\n                    user = data;\n                }\n                return { data, user, session, error: null };\n            }\n            catch (error) {\n                return { data: null, user: null, session: null, error };\n            }\n        });\n    }\n    /**\n     * Log in an existing user, or login via a third-party provider.\n     * @type UserCredentials\n     * @param email The user's email address.\n     * @param password The user's password.\n     * @param refreshToken A valid refresh token that was returned on login.\n     * @param provider One of the providers supported by GoTrue.\n     * @param redirectTo A URL or mobile address to send the user to after they are confirmed.\n     * @param scopes A space-separated list of scopes granted to the OAuth application.\n     */\n    signIn({ email, password, refreshToken, provider }, options = {}) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                this._removeSession();\n                if (email && !password) {\n                    const { error } = yield this.api.sendMagicLinkEmail(email, {\n                        redirectTo: options.redirectTo,\n                    });\n                    return { data: null, user: null, session: null, error };\n                }\n                if (email && password) {\n                    return this._handleEmailSignIn(email, password, {\n                        redirectTo: options.redirectTo,\n                    });\n                }\n                if (refreshToken) {\n                    // currentSession and currentUser will be updated to latest on _callRefreshToken using the passed refreshToken\n                    const { error } = yield this._callRefreshToken(refreshToken);\n                    if (error)\n                        throw error;\n                    return {\n                        data: this.currentSession,\n                        user: this.currentUser,\n                        session: this.currentSession,\n                        error: null,\n                    };\n                }\n                if (provider) {\n                    return this._handleProviderSignIn(provider, {\n                        redirectTo: options.redirectTo,\n                        scopes: options.scopes,\n                    });\n                }\n                throw new Error(`You must provide either an email or a third-party provider.`);\n            }\n            catch (error) {\n                return { data: null, user: null, session: null, error };\n            }\n        });\n    }\n    /**\n     * Inside a browser context, `user()` will return the user data, if there is a logged in user.\n     *\n     * For server-side management, you can get a user through `auth.api.getUserByCookie()`\n     */\n    user() {\n        return this.currentUser;\n    }\n    /**\n     * Returns the session data, if there is an active session.\n     */\n    session() {\n        return this.currentSession;\n    }\n    /**\n     * Force refreshes the session including the user data in case it was updated in a different session.\n     */\n    refreshSession() {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                if (!((_a = this.currentSession) === null || _a === void 0 ? void 0 : _a.access_token))\n                    throw new Error('Not logged in.');\n                // currentSession and currentUser will be updated to latest on _callRefreshToken\n                const { error } = yield this._callRefreshToken();\n                if (error)\n                    throw error;\n                return { data: this.currentSession, user: this.currentUser, error: null };\n            }\n            catch (error) {\n                return { data: null, user: null, error };\n            }\n        });\n    }\n    /**\n     * Updates user data, if there is a logged in user.\n     */\n    update(attributes) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                if (!((_a = this.currentSession) === null || _a === void 0 ? void 0 : _a.access_token))\n                    throw new Error('Not logged in.');\n                const { user, error } = yield this.api.updateUser(this.currentSession.access_token, attributes);\n                if (error)\n                    throw error;\n                if (!user)\n                    throw Error('Invalid user data.');\n                const session = Object.assign(Object.assign({}, this.currentSession), { user });\n                this._saveSession(session);\n                this._notifyAllSubscribers('USER_UPDATED');\n                return { data: user, user, error: null };\n            }\n            catch (error) {\n                return { data: null, user: null, error };\n            }\n        });\n    }\n    /**\n     * Sets the session data from refresh_token and returns current Session and Error\n     * @param refresh_token a JWT token\n     */\n    setSession(refresh_token) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                if (!refresh_token) {\n                    throw new Error('No current session.');\n                }\n                const { data, error } = yield this.api.refreshAccessToken(refresh_token);\n                if (error) {\n                    return { session: null, error: error };\n                }\n                if (!data) {\n                    return {\n                        session: null,\n                        error: { name: 'Invalid refresh_token', message: 'JWT token provided is Invalid' },\n                    };\n                }\n                this._saveSession(data);\n                this._notifyAllSubscribers('SIGNED_IN');\n                return { session: data, error: null };\n            }\n            catch (error) {\n                return { error, session: null };\n            }\n        });\n    }\n    /**\n     * Overrides the JWT on the current client. The JWT will then be sent in all subsequent network requests.\n     * @param access_token a jwt access token\n     */\n    setAuth(access_token) {\n        this.currentSession = Object.assign(Object.assign({}, this.currentSession), { access_token, token_type: 'bearer', user: null });\n        return this.currentSession;\n    }\n    /**\n     * Gets the session data from a URL string\n     * @param options.storeSession Optionally store the session in the browser\n     */\n    getSessionFromUrl(options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                if (!isBrowser())\n                    throw new Error('No browser detected.');\n                const error_description = getParameterByName('error_description');\n                if (error_description)\n                    throw new Error(error_description);\n                const provider_token = getParameterByName('provider_token');\n                const access_token = getParameterByName('access_token');\n                if (!access_token)\n                    throw new Error('No access_token detected.');\n                const expires_in = getParameterByName('expires_in');\n                if (!expires_in)\n                    throw new Error('No expires_in detected.');\n                const refresh_token = getParameterByName('refresh_token');\n                if (!refresh_token)\n                    throw new Error('No refresh_token detected.');\n                const token_type = getParameterByName('token_type');\n                if (!token_type)\n                    throw new Error('No token_type detected.');\n                const timeNow = Math.round(Date.now() / 1000);\n                const expires_at = timeNow + parseInt(expires_in);\n                const { user, error } = yield this.api.getUser(access_token);\n                if (error)\n                    throw error;\n                const session = {\n                    provider_token,\n                    access_token,\n                    expires_in: parseInt(expires_in),\n                    expires_at,\n                    refresh_token,\n                    token_type,\n                    user: user,\n                };\n                if (options === null || options === void 0 ? void 0 : options.storeSession) {\n                    this._saveSession(session);\n                    this._notifyAllSubscribers('SIGNED_IN');\n                    if (getParameterByName('type') === 'recovery') {\n                        this._notifyAllSubscribers('PASSWORD_RECOVERY');\n                    }\n                }\n                // Remove tokens from URL\n                window.location.hash = '';\n                return { data: session, error: null };\n            }\n            catch (error) {\n                return { data: null, error };\n            }\n        });\n    }\n    /**\n     * Inside a browser context, `signOut()` will remove extract the logged in user from the browser session\n     * and log them out - removing all items from localstorage and then trigger a \"SIGNED_OUT\" event.\n     *\n     * For server-side management, you can disable sessions by passing a JWT through to `auth.api.signOut(JWT: string)`\n     */\n    signOut() {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            const accessToken = (_a = this.currentSession) === null || _a === void 0 ? void 0 : _a.access_token;\n            this._removeSession();\n            this._notifyAllSubscribers('SIGNED_OUT');\n            if (accessToken) {\n                const { error } = yield this.api.signOut(accessToken);\n                if (error)\n                    return { error };\n            }\n            return { error: null };\n        });\n    }\n    /**\n     * Receive a notification every time an auth event happens.\n     * @returns {Subscription} A subscription object which can be used to unsubscribe itself.\n     */\n    onAuthStateChange(callback) {\n        try {\n            const id = uuid();\n            const self = this;\n            const subscription = {\n                id,\n                callback,\n                unsubscribe: () => {\n                    self.stateChangeEmitters.delete(id);\n                },\n            };\n            this.stateChangeEmitters.set(id, subscription);\n            return { data: subscription, error: null };\n        }\n        catch (error) {\n            return { data: null, error };\n        }\n    }\n    _handleEmailSignIn(email, password, options = {}) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const { data, error } = yield this.api.signInWithEmail(email, password, {\n                    redirectTo: options.redirectTo,\n                });\n                if (error || !data)\n                    return { data: null, user: null, session: null, error };\n                if ((_a = data === null || data === void 0 ? void 0 : data.user) === null || _a === void 0 ? void 0 : _a.confirmed_at) {\n                    this._saveSession(data);\n                    this._notifyAllSubscribers('SIGNED_IN');\n                }\n                return { data, user: data.user, session: data, error: null };\n            }\n            catch (error) {\n                return { data: null, user: null, session: null, error };\n            }\n        });\n    }\n    _handleProviderSignIn(provider, options = {}) {\n        const url = this.api.getUrlForProvider(provider, {\n            redirectTo: options.redirectTo,\n            scopes: options.scopes,\n        });\n        try {\n            // try to open on the browser\n            if (isBrowser()) {\n                window.location.href = url;\n            }\n            return { provider, url, data: null, session: null, user: null, error: null };\n        }\n        catch (error) {\n            // fallback to returning the URL\n            if (!!url)\n                return { provider, url, data: null, session: null, user: null, error: null };\n            return { data: null, user: null, session: null, error };\n        }\n    }\n    /**\n     * Attempts to get the session from LocalStorage\n     * Note: this should never be async (even for React Native), as we need it to return immediately in the constructor.\n     */\n    _recoverSession() {\n        var _a;\n        try {\n            const json = isBrowser() && ((_a = this.localStorage) === null || _a === void 0 ? void 0 : _a.getItem(STORAGE_KEY));\n            if (!json || typeof json !== 'string') {\n                return null;\n            }\n            const data = JSON.parse(json);\n            const { currentSession, expiresAt } = data;\n            const timeNow = Math.round(Date.now() / 1000);\n            if (expiresAt >= timeNow && (currentSession === null || currentSession === void 0 ? void 0 : currentSession.user)) {\n                this._saveSession(currentSession);\n                this._notifyAllSubscribers('SIGNED_IN');\n            }\n        }\n        catch (error) {\n            console.log('error', error);\n        }\n    }\n    /**\n     * Recovers the session from LocalStorage and refreshes\n     * Note: this method is async to accommodate for AsyncStorage e.g. in React native.\n     */\n    _recoverAndRefresh() {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const json = isBrowser() && (yield this.localStorage.getItem(STORAGE_KEY));\n                if (!json) {\n                    return null;\n                }\n                const data = JSON.parse(json);\n                const { currentSession, expiresAt } = data;\n                const timeNow = Math.round(Date.now() / 1000);\n                if (expiresAt < timeNow) {\n                    if (this.autoRefreshToken && currentSession.refresh_token) {\n                        const { error } = yield this._callRefreshToken(currentSession.refresh_token);\n                        if (error) {\n                            console.log(error.message);\n                            yield this._removeSession();\n                        }\n                    }\n                    else {\n                        this._removeSession();\n                    }\n                }\n                else if (!currentSession || !currentSession.user) {\n                    console.log('Current session is missing data.');\n                    this._removeSession();\n                }\n                else {\n                    // should be handled on _recoverSession method already\n                    // But we still need the code here to accommodate for AsyncStorage e.g. in React native\n                    this._saveSession(currentSession);\n                    this._notifyAllSubscribers('SIGNED_IN');\n                }\n            }\n            catch (err) {\n                console.error(err);\n                return null;\n            }\n        });\n    }\n    _callRefreshToken(refresh_token) {\n        var _a;\n        if (refresh_token === void 0) { refresh_token = (_a = this.currentSession) === null || _a === void 0 ? void 0 : _a.refresh_token; }\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                if (!refresh_token) {\n                    throw new Error('No current session.');\n                }\n                const { data, error } = yield this.api.refreshAccessToken(refresh_token);\n                if (error)\n                    throw error;\n                if (!data)\n                    throw Error('Invalid session data.');\n                this._saveSession(data);\n                this._notifyAllSubscribers('SIGNED_IN');\n                return { data, error: null };\n            }\n            catch (error) {\n                return { data: null, error };\n            }\n        });\n    }\n    _notifyAllSubscribers(event) {\n        this.stateChangeEmitters.forEach((x) => x.callback(event, this.currentSession));\n    }\n    /**\n     * set currentSession and currentUser\n     * process to _startAutoRefreshToken if possible\n     */\n    _saveSession(session) {\n        this.currentSession = session;\n        this.currentUser = session.user;\n        const expiresAt = session.expires_at;\n        if (expiresAt) {\n            const timeNow = Math.round(Date.now() / 1000);\n            const expiresIn = expiresAt - timeNow;\n            const refreshDurationBeforeExpires = expiresIn > 60 ? 60 : 0.5;\n            this._startAutoRefreshToken((expiresIn - refreshDurationBeforeExpires) * 1000);\n        }\n        // Do we need any extra check before persist session\n        // access_token or user ?\n        if (this.persistSession && session.expires_at) {\n            this._persistSession(this.currentSession);\n        }\n    }\n    _persistSession(currentSession) {\n        const data = { currentSession, expiresAt: currentSession.expires_at };\n        isBrowser() && this.localStorage.setItem(STORAGE_KEY, JSON.stringify(data));\n    }\n    _removeSession() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.currentSession = null;\n            this.currentUser = null;\n            if (this.refreshTokenTimer)\n                clearTimeout(this.refreshTokenTimer);\n            isBrowser() && (yield this.localStorage.removeItem(STORAGE_KEY));\n        });\n    }\n    /**\n     * Clear and re-create refresh token timer\n     * @param value time intervals in milliseconds\n     */\n    _startAutoRefreshToken(value) {\n        if (this.refreshTokenTimer)\n            clearTimeout(this.refreshTokenTimer);\n        if (value <= 0 || !this.autoRefreshToken)\n            return;\n        this.refreshTokenTimer = setTimeout(() => this._callRefreshToken(), value);\n        if (typeof this.refreshTokenTimer.unref === 'function')\n            this.refreshTokenTimer.unref();\n    }\n}\n//# sourceMappingURL=GoTrueClient.js.map","/**\n * Helpers to convert the change Payload into native JS types.\n */\n// Adapted from epgsql (src/epgsql_binary.erl), this module licensed under\n// 3-clause BSD found here: https://raw.githubusercontent.com/epgsql/epgsql/devel/LICENSE\nexport var PostgresTypes;\n(function (PostgresTypes) {\n    PostgresTypes[\"abstime\"] = \"abstime\";\n    PostgresTypes[\"bool\"] = \"bool\";\n    PostgresTypes[\"date\"] = \"date\";\n    PostgresTypes[\"daterange\"] = \"daterange\";\n    PostgresTypes[\"float4\"] = \"float4\";\n    PostgresTypes[\"float8\"] = \"float8\";\n    PostgresTypes[\"int2\"] = \"int2\";\n    PostgresTypes[\"int4\"] = \"int4\";\n    PostgresTypes[\"int4range\"] = \"int4range\";\n    PostgresTypes[\"int8\"] = \"int8\";\n    PostgresTypes[\"int8range\"] = \"int8range\";\n    PostgresTypes[\"json\"] = \"json\";\n    PostgresTypes[\"jsonb\"] = \"jsonb\";\n    PostgresTypes[\"money\"] = \"money\";\n    PostgresTypes[\"numeric\"] = \"numeric\";\n    PostgresTypes[\"oid\"] = \"oid\";\n    PostgresTypes[\"reltime\"] = \"reltime\";\n    PostgresTypes[\"time\"] = \"time\";\n    PostgresTypes[\"timestamp\"] = \"timestamp\";\n    PostgresTypes[\"timestamptz\"] = \"timestamptz\";\n    PostgresTypes[\"timetz\"] = \"timetz\";\n    PostgresTypes[\"tsrange\"] = \"tsrange\";\n    PostgresTypes[\"tstzrange\"] = \"tstzrange\";\n})(PostgresTypes || (PostgresTypes = {}));\n/**\n * Takes an array of columns and an object of string values then converts each string value\n * to its mapped type.\n *\n * @param {{name: String, type: String}[]} columns\n * @param {Object} records\n * @param {Object} options The map of various options that can be applied to the mapper\n * @param {Array} options.skipTypes The array of types that should not be converted\n *\n * @example convertChangeData([{name: 'first_name', type: 'text'}, {name: 'age', type: 'int4'}], {first_name: 'Paul', age:'33'}, {})\n * //=>{ first_name: 'Paul', age: 33 }\n */\nexport const convertChangeData = (columns, records, options = {}) => {\n    let result = {};\n    let skipTypes = typeof options.skipTypes !== 'undefined' ? options.skipTypes : [];\n    Object.entries(records).map(([key, value]) => {\n        result[key] = convertColumn(key, columns, records, skipTypes);\n    });\n    return result;\n};\n/**\n * Converts the value of an individual column.\n *\n * @param {String} columnName The column that you want to convert\n * @param {{name: String, type: String}[]} columns All of the columns\n * @param {Object} records The map of string values\n * @param {Array} skipTypes An array of types that should not be converted\n * @return {object} Useless information\n *\n * @example convertColumn('age', [{name: 'first_name', type: 'text'}, {name: 'age', type: 'int4'}], ['Paul', '33'], [])\n * //=> 33\n * @example convertColumn('age', [{name: 'first_name', type: 'text'}, {name: 'age', type: 'int4'}], ['Paul', '33'], ['int4'])\n * //=> \"33\"\n */\nexport const convertColumn = (columnName, columns, records, skipTypes) => {\n    let column = columns.find((x) => x.name == columnName);\n    if (!column || skipTypes.includes(column.type)) {\n        return noop(records[columnName]);\n    }\n    else {\n        return convertCell(column.type, records[columnName]);\n    }\n};\n/**\n * If the value of the cell is `null`, returns null.\n * Otherwise converts the string value to the correct type.\n * @param {String} type A postgres column type\n * @param {String} stringValue The cell value\n *\n * @example convertCell('bool', 'true')\n * //=> true\n * @example convertCell('int8', '10')\n * //=> 10\n * @example convertCell('_int4', '{1,2,3,4}')\n * //=> [1,2,3,4]\n */\nexport const convertCell = (type, stringValue) => {\n    try {\n        if (stringValue === null)\n            return null;\n        // if data type is an array\n        if (type.charAt(0) === '_') {\n            let arrayValue = type.slice(1, type.length);\n            return toArray(stringValue, arrayValue);\n        }\n        // If not null, convert to correct type.\n        switch (type) {\n            case PostgresTypes.abstime:\n                return noop(stringValue); // To allow users to cast it based on Timezone\n            case PostgresTypes.bool:\n                return toBoolean(stringValue);\n            case PostgresTypes.date:\n                return noop(stringValue); // To allow users to cast it based on Timezone\n            case PostgresTypes.daterange:\n                return toDateRange(stringValue);\n            case PostgresTypes.float4:\n                return toFloat(stringValue);\n            case PostgresTypes.float8:\n                return toFloat(stringValue);\n            case PostgresTypes.int2:\n                return toInt(stringValue);\n            case PostgresTypes.int4:\n                return toInt(stringValue);\n            case PostgresTypes.int4range:\n                return toIntRange(stringValue);\n            case PostgresTypes.int8:\n                return toInt(stringValue);\n            case PostgresTypes.int8range:\n                return toIntRange(stringValue);\n            case PostgresTypes.json:\n                return toJson(stringValue);\n            case PostgresTypes.jsonb:\n                return toJson(stringValue);\n            case PostgresTypes.money:\n                return toFloat(stringValue);\n            case PostgresTypes.numeric:\n                return toFloat(stringValue);\n            case PostgresTypes.oid:\n                return toInt(stringValue);\n            case PostgresTypes.reltime:\n                return noop(stringValue); // To allow users to cast it based on Timezone\n            case PostgresTypes.time:\n                return noop(stringValue); // To allow users to cast it based on Timezone\n            case PostgresTypes.timestamp:\n                return toTimestampString(stringValue); // Format to be consistent with PostgREST\n            case PostgresTypes.timestamptz:\n                return noop(stringValue); // To allow users to cast it based on Timezone\n            case PostgresTypes.timetz:\n                return noop(stringValue); // To allow users to cast it based on Timezone\n            case PostgresTypes.tsrange:\n                return toDateRange(stringValue);\n            case PostgresTypes.tstzrange:\n                return toDateRange(stringValue);\n            default:\n                // All the rest will be returned as strings\n                return noop(stringValue);\n        }\n    }\n    catch (error) {\n        console.log(`Could not convert cell of type ${type} and value ${stringValue}`);\n        console.log(`This is the error: ${error}`);\n        return stringValue;\n    }\n};\nconst noop = (stringValue) => {\n    return stringValue;\n};\nexport const toBoolean = (stringValue) => {\n    switch (stringValue) {\n        case 't':\n            return true;\n        case 'f':\n            return false;\n        default:\n            return null;\n    }\n};\nexport const toDate = (stringValue) => {\n    return new Date(stringValue);\n};\nexport const toDateRange = (stringValue) => {\n    let arr = JSON.parse(stringValue);\n    return [new Date(arr[0]), new Date(arr[1])];\n};\nexport const toFloat = (stringValue) => {\n    return parseFloat(stringValue);\n};\nexport const toInt = (stringValue) => {\n    return parseInt(stringValue);\n};\nexport const toIntRange = (stringValue) => {\n    let arr = JSON.parse(stringValue);\n    return [parseInt(arr[0]), parseInt(arr[1])];\n};\nexport const toJson = (stringValue) => {\n    return JSON.parse(stringValue);\n};\n/**\n * Converts a Postgres Array into a native JS array\n *\n * @example toArray('{1,2,3,4}', 'int4')\n * //=> [1,2,3,4]\n * @example toArray('{}', 'int4')\n * //=> []\n */\nexport const toArray = (stringValue, type) => {\n    // this takes off the '{' & '}'\n    let stringEnriched = stringValue.slice(1, stringValue.length - 1);\n    // converts the string into an array\n    // if string is empty (meaning the array was empty), an empty array will be immediately returned\n    let stringArray = stringEnriched.length > 0 ? stringEnriched.split(',') : [];\n    let array = stringArray.map((string) => {\n        return convertCell(type, string);\n    });\n    return array;\n};\n/**\n * Fixes timestamp to be ISO-8601. Swaps the space between the date and time for a 'T'\n * See https://github.com/supabase/supabase/issues/18\n *\n * @example toTimestampString('2019-09-10 00:00:00')\n * //=> '2019-09-10T00:00:00'\n */\nexport const toTimestampString = (stringValue) => {\n    return stringValue.replace(' ', 'T');\n};\n//# sourceMappingURL=transformers.js.map","import { GoTrueClient } from '@supabase/gotrue-js';\nexport class SupabaseAuthClient extends GoTrueClient {\n    constructor(options) {\n        super(options);\n    }\n}\n//# sourceMappingURL=SupabaseAuthClient.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport fetch from 'cross-fetch';\nexport class PostgrestBuilder {\n    constructor(builder) {\n        Object.assign(this, builder);\n    }\n    /**\n     * If there's an error with the query, throwOnError will reject the promise by\n     * throwing the error instead of returning it as part of a successful response.\n     *\n     * {@link https://github.com/supabase/supabase-js/issues/92}\n     */\n    throwOnError() {\n        this.shouldThrowOnError = true;\n        return this;\n    }\n    then(onfulfilled, onrejected) {\n        // https://postgrest.org/en/stable/api.html#switching-schemas\n        if (typeof this.schema === 'undefined') {\n            // skip\n        }\n        else if (['GET', 'HEAD'].includes(this.method)) {\n            this.headers['Accept-Profile'] = this.schema;\n        }\n        else {\n            this.headers['Content-Profile'] = this.schema;\n        }\n        if (this.method !== 'GET' && this.method !== 'HEAD') {\n            this.headers['Content-Type'] = 'application/json';\n        }\n        return fetch(this.url.toString(), {\n            method: this.method,\n            headers: this.headers,\n            body: JSON.stringify(this.body),\n        })\n            .then((res) => __awaiter(this, void 0, void 0, function* () {\n            var _a, _b, _c;\n            let error = null;\n            let data = null;\n            let count = null;\n            if (res.ok) {\n                const isReturnMinimal = (_a = this.headers['Prefer']) === null || _a === void 0 ? void 0 : _a.split(',').includes('return=minimal');\n                if (this.method !== 'HEAD' && !isReturnMinimal) {\n                    const text = yield res.text();\n                    if (!text) {\n                        // discard `text`\n                    }\n                    else if (this.headers['Accept'] === 'text/csv') {\n                        data = text;\n                    }\n                    else {\n                        data = JSON.parse(text);\n                    }\n                }\n                const countHeader = (_b = this.headers['Prefer']) === null || _b === void 0 ? void 0 : _b.match(/count=(exact|planned|estimated)/);\n                const contentRange = (_c = res.headers.get('content-range')) === null || _c === void 0 ? void 0 : _c.split('/');\n                if (countHeader && contentRange && contentRange.length > 1) {\n                    count = parseInt(contentRange[1]);\n                }\n            }\n            else {\n                error = yield res.json();\n                if (error && this.shouldThrowOnError) {\n                    throw error;\n                }\n            }\n            const postgrestResponse = {\n                error,\n                data,\n                count,\n                status: res.status,\n                statusText: res.statusText,\n                body: data,\n            };\n            return postgrestResponse;\n        }))\n            .then(onfulfilled, onrejected);\n    }\n}\n//# sourceMappingURL=types.js.map","import PostgrestTransformBuilder from './PostgrestTransformBuilder';\nexport default class PostgrestFilterBuilder extends PostgrestTransformBuilder {\n    constructor() {\n        super(...arguments);\n        /** @deprecated Use `contains()` instead. */\n        this.cs = this.contains;\n        /** @deprecated Use `containedBy()` instead. */\n        this.cd = this.containedBy;\n        /** @deprecated Use `rangeLt()` instead. */\n        this.sl = this.rangeLt;\n        /** @deprecated Use `rangeGt()` instead. */\n        this.sr = this.rangeGt;\n        /** @deprecated Use `rangeGte()` instead. */\n        this.nxl = this.rangeGte;\n        /** @deprecated Use `rangeLte()` instead. */\n        this.nxr = this.rangeLte;\n        /** @deprecated Use `rangeAdjacent()` instead. */\n        this.adj = this.rangeAdjacent;\n        /** @deprecated Use `overlaps()` instead. */\n        this.ov = this.overlaps;\n    }\n    /**\n     * Finds all rows which doesn't satisfy the filter.\n     *\n     * @param column  The column to filter on.\n     * @param operator  The operator to filter with.\n     * @param value  The value to filter with.\n     */\n    not(column, operator, value) {\n        this.url.searchParams.append(`${column}`, `not.${operator}.${value}`);\n        return this;\n    }\n    /**\n     * Finds all rows satisfying at least one of the filters.\n     *\n     * @param filters  The filters to use, separated by commas.\n     * @param foreignTable  The foreign table to use (if `column` is a foreign column).\n     */\n    or(filters, { foreignTable } = {}) {\n        const key = typeof foreignTable === 'undefined' ? 'or' : `${foreignTable}.or`;\n        this.url.searchParams.append(key, `(${filters})`);\n        return this;\n    }\n    /**\n     * Finds all rows whose value on the stated `column` exactly matches the\n     * specified `value`.\n     *\n     * @param column  The column to filter on.\n     * @param value  The value to filter with.\n     */\n    eq(column, value) {\n        this.url.searchParams.append(`${column}`, `eq.${value}`);\n        return this;\n    }\n    /**\n     * Finds all rows whose value on the stated `column` doesn't match the\n     * specified `value`.\n     *\n     * @param column  The column to filter on.\n     * @param value  The value to filter with.\n     */\n    neq(column, value) {\n        this.url.searchParams.append(`${column}`, `neq.${value}`);\n        return this;\n    }\n    /**\n     * Finds all rows whose value on the stated `column` is greater than the\n     * specified `value`.\n     *\n     * @param column  The column to filter on.\n     * @param value  The value to filter with.\n     */\n    gt(column, value) {\n        this.url.searchParams.append(`${column}`, `gt.${value}`);\n        return this;\n    }\n    /**\n     * Finds all rows whose value on the stated `column` is greater than or\n     * equal to the specified `value`.\n     *\n     * @param column  The column to filter on.\n     * @param value  The value to filter with.\n     */\n    gte(column, value) {\n        this.url.searchParams.append(`${column}`, `gte.${value}`);\n        return this;\n    }\n    /**\n     * Finds all rows whose value on the stated `column` is less than the\n     * specified `value`.\n     *\n     * @param column  The column to filter on.\n     * @param value  The value to filter with.\n     */\n    lt(column, value) {\n        this.url.searchParams.append(`${column}`, `lt.${value}`);\n        return this;\n    }\n    /**\n     * Finds all rows whose value on the stated `column` is less than or equal\n     * to the specified `value`.\n     *\n     * @param column  The column to filter on.\n     * @param value  The value to filter with.\n     */\n    lte(column, value) {\n        this.url.searchParams.append(`${column}`, `lte.${value}`);\n        return this;\n    }\n    /**\n     * Finds all rows whose value in the stated `column` matches the supplied\n     * `pattern` (case sensitive).\n     *\n     * @param column  The column to filter on.\n     * @param pattern  The pattern to filter with.\n     */\n    like(column, pattern) {\n        this.url.searchParams.append(`${column}`, `like.${pattern}`);\n        return this;\n    }\n    /**\n     * Finds all rows whose value in the stated `column` matches the supplied\n     * `pattern` (case insensitive).\n     *\n     * @param column  The column to filter on.\n     * @param pattern  The pattern to filter with.\n     */\n    ilike(column, pattern) {\n        this.url.searchParams.append(`${column}`, `ilike.${pattern}`);\n        return this;\n    }\n    /**\n     * A check for exact equality (null, true, false), finds all rows whose\n     * value on the stated `column` exactly match the specified `value`.\n     *\n     * @param column  The column to filter on.\n     * @param value  The value to filter with.\n     */\n    is(column, value) {\n        this.url.searchParams.append(`${column}`, `is.${value}`);\n        return this;\n    }\n    /**\n     * Finds all rows whose value on the stated `column` is found on the\n     * specified `values`.\n     *\n     * @param column  The column to filter on.\n     * @param values  The values to filter with.\n     */\n    in(column, values) {\n        const cleanedValues = values\n            .map((s) => {\n            // handle postgrest reserved characters\n            // https://postgrest.org/en/v7.0.0/api.html#reserved-characters\n            if (typeof s === 'string' && new RegExp('[,()]').test(s))\n                return `\"${s}\"`;\n            else\n                return `${s}`;\n        })\n            .join(',');\n        this.url.searchParams.append(`${column}`, `in.(${cleanedValues})`);\n        return this;\n    }\n    /**\n     * Finds all rows whose json, array, or range value on the stated `column`\n     * contains the values specified in `value`.\n     *\n     * @param column  The column to filter on.\n     * @param value  The value to filter with.\n     */\n    contains(column, value) {\n        if (typeof value === 'string') {\n            // range types can be inclusive '[', ']' or exclusive '(', ')' so just\n            // keep it simple and accept a string\n            this.url.searchParams.append(`${column}`, `cs.${value}`);\n        }\n        else if (Array.isArray(value)) {\n            // array\n            this.url.searchParams.append(`${column}`, `cs.{${value.join(',')}}`);\n        }\n        else {\n            // json\n            this.url.searchParams.append(`${column}`, `cs.${JSON.stringify(value)}`);\n        }\n        return this;\n    }\n    /**\n     * Finds all rows whose json, array, or range value on the stated `column` is\n     * contained by the specified `value`.\n     *\n     * @param column  The column to filter on.\n     * @param value  The value to filter with.\n     */\n    containedBy(column, value) {\n        if (typeof value === 'string') {\n            // range\n            this.url.searchParams.append(`${column}`, `cd.${value}`);\n        }\n        else if (Array.isArray(value)) {\n            // array\n            this.url.searchParams.append(`${column}`, `cd.{${value.join(',')}}`);\n        }\n        else {\n            // json\n            this.url.searchParams.append(`${column}`, `cd.${JSON.stringify(value)}`);\n        }\n        return this;\n    }\n    /**\n     * Finds all rows whose range value on the stated `column` is strictly to the\n     * left of the specified `range`.\n     *\n     * @param column  The column to filter on.\n     * @param range  The range to filter with.\n     */\n    rangeLt(column, range) {\n        this.url.searchParams.append(`${column}`, `sl.${range}`);\n        return this;\n    }\n    /**\n     * Finds all rows whose range value on the stated `column` is strictly to\n     * the right of the specified `range`.\n     *\n     * @param column  The column to filter on.\n     * @param range  The range to filter with.\n     */\n    rangeGt(column, range) {\n        this.url.searchParams.append(`${column}`, `sr.${range}`);\n        return this;\n    }\n    /**\n     * Finds all rows whose range value on the stated `column` does not extend\n     * to the left of the specified `range`.\n     *\n     * @param column  The column to filter on.\n     * @param range  The range to filter with.\n     */\n    rangeGte(column, range) {\n        this.url.searchParams.append(`${column}`, `nxl.${range}`);\n        return this;\n    }\n    /**\n     * Finds all rows whose range value on the stated `column` does not extend\n     * to the right of the specified `range`.\n     *\n     * @param column  The column to filter on.\n     * @param range  The range to filter with.\n     */\n    rangeLte(column, range) {\n        this.url.searchParams.append(`${column}`, `nxr.${range}`);\n        return this;\n    }\n    /**\n     * Finds all rows whose range value on the stated `column` is adjacent to\n     * the specified `range`.\n     *\n     * @param column  The column to filter on.\n     * @param range  The range to filter with.\n     */\n    rangeAdjacent(column, range) {\n        this.url.searchParams.append(`${column}`, `adj.${range}`);\n        return this;\n    }\n    /**\n     * Finds all rows whose array or range value on the stated `column` overlaps\n     * (has a value in common) with the specified `value`.\n     *\n     * @param column  The column to filter on.\n     * @param value  The value to filter with.\n     */\n    overlaps(column, value) {\n        if (typeof value === 'string') {\n            // range\n            this.url.searchParams.append(`${column}`, `ov.${value}`);\n        }\n        else {\n            // array\n            this.url.searchParams.append(`${column}`, `ov.{${value.join(',')}}`);\n        }\n        return this;\n    }\n    /**\n     * Finds all rows whose text or tsvector value on the stated `column` matches\n     * the tsquery in `query`.\n     *\n     * @param column  The column to filter on.\n     * @param query  The Postgres tsquery string to filter with.\n     * @param config  The text search configuration to use.\n     * @param type  The type of tsquery conversion to use on `query`.\n     */\n    textSearch(column, query, { config, type = null, } = {}) {\n        let typePart = '';\n        if (type === 'plain') {\n            typePart = 'pl';\n        }\n        else if (type === 'phrase') {\n            typePart = 'ph';\n        }\n        else if (type === 'websearch') {\n            typePart = 'w';\n        }\n        const configPart = config === undefined ? '' : `(${config})`;\n        this.url.searchParams.append(`${column}`, `${typePart}fts${configPart}.${query}`);\n        return this;\n    }\n    /**\n     * Finds all rows whose tsvector value on the stated `column` matches\n     * to_tsquery(`query`).\n     *\n     * @param column  The column to filter on.\n     * @param query  The Postgres tsquery string to filter with.\n     * @param config  The text search configuration to use.\n     *\n     * @deprecated Use `textSearch()` instead.\n     */\n    fts(column, query, { config } = {}) {\n        const configPart = typeof config === 'undefined' ? '' : `(${config})`;\n        this.url.searchParams.append(`${column}`, `fts${configPart}.${query}`);\n        return this;\n    }\n    /**\n     * Finds all rows whose tsvector value on the stated `column` matches\n     * plainto_tsquery(`query`).\n     *\n     * @param column  The column to filter on.\n     * @param query  The Postgres tsquery string to filter with.\n     * @param config  The text search configuration to use.\n     *\n     * @deprecated Use `textSearch()` with `type: 'plain'` instead.\n     */\n    plfts(column, query, { config } = {}) {\n        const configPart = typeof config === 'undefined' ? '' : `(${config})`;\n        this.url.searchParams.append(`${column}`, `plfts${configPart}.${query}`);\n        return this;\n    }\n    /**\n     * Finds all rows whose tsvector value on the stated `column` matches\n     * phraseto_tsquery(`query`).\n     *\n     * @param column  The column to filter on.\n     * @param query  The Postgres tsquery string to filter with.\n     * @param config  The text search configuration to use.\n     *\n     * @deprecated Use `textSearch()` with `type: 'phrase'` instead.\n     */\n    phfts(column, query, { config } = {}) {\n        const configPart = typeof config === 'undefined' ? '' : `(${config})`;\n        this.url.searchParams.append(`${column}`, `phfts${configPart}.${query}`);\n        return this;\n    }\n    /**\n     * Finds all rows whose tsvector value on the stated `column` matches\n     * websearch_to_tsquery(`query`).\n     *\n     * @param column  The column to filter on.\n     * @param query  The Postgres tsquery string to filter with.\n     * @param config  The text search configuration to use.\n     *\n     * @deprecated Use `textSearch()` with `type: 'websearch'` instead.\n     */\n    wfts(column, query, { config } = {}) {\n        const configPart = typeof config === 'undefined' ? '' : `(${config})`;\n        this.url.searchParams.append(`${column}`, `wfts${configPart}.${query}`);\n        return this;\n    }\n    /**\n     * Finds all rows whose `column` satisfies the filter.\n     *\n     * @param column  The column to filter on.\n     * @param operator  The operator to filter with.\n     * @param value  The value to filter with.\n     */\n    filter(column, operator, value) {\n        this.url.searchParams.append(`${column}`, `${operator}.${value}`);\n        return this;\n    }\n    /**\n     * Finds all rows whose columns match the specified `query` object.\n     *\n     * @param query  The object to filter with, with column names as keys mapped\n     *               to their filter values.\n     */\n    match(query) {\n        Object.keys(query).forEach((key) => {\n            this.url.searchParams.append(`${key}`, `eq.${query[key]}`);\n        });\n        return this;\n    }\n}\n//# sourceMappingURL=PostgrestFilterBuilder.js.map","import { PostgrestBuilder } from './types';\n/**\n * Post-filters (transforms)\n */\nexport default class PostgrestTransformBuilder extends PostgrestBuilder {\n    /**\n     * Performs vertical filtering with SELECT.\n     *\n     * @param columns  The columns to retrieve, separated by commas.\n     */\n    select(columns = '*') {\n        // Remove whitespaces except when quoted\n        let quoted = false;\n        const cleanedColumns = columns\n            .split('')\n            .map((c) => {\n            if (/\\s/.test(c) && !quoted) {\n                return '';\n            }\n            if (c === '\"') {\n                quoted = !quoted;\n            }\n            return c;\n        })\n            .join('');\n        this.url.searchParams.set('select', cleanedColumns);\n        return this;\n    }\n    /**\n     * Orders the result with the specified `column`.\n     *\n     * @param column  The column to order on.\n     * @param ascending  If `true`, the result will be in ascending order.\n     * @param nullsFirst  If `true`, `null`s appear first.\n     * @param foreignTable  The foreign table to use (if `column` is a foreign column).\n     */\n    order(column, { ascending = true, nullsFirst = false, foreignTable, } = {}) {\n        const key = typeof foreignTable === 'undefined' ? 'order' : `${foreignTable}.order`;\n        const existingOrder = this.url.searchParams.get(key);\n        this.url.searchParams.set(key, `${existingOrder ? `${existingOrder},` : ''}${column}.${ascending ? 'asc' : 'desc'}.${nullsFirst ? 'nullsfirst' : 'nullslast'}`);\n        return this;\n    }\n    /**\n     * Limits the result with the specified `count`.\n     *\n     * @param count  The maximum no. of rows to limit to.\n     * @param foreignTable  The foreign table to use (for foreign columns).\n     */\n    limit(count, { foreignTable } = {}) {\n        const key = typeof foreignTable === 'undefined' ? 'limit' : `${foreignTable}.limit`;\n        this.url.searchParams.set(key, `${count}`);\n        return this;\n    }\n    /**\n     * Limits the result to rows within the specified range, inclusive.\n     *\n     * @param from  The starting index from which to limit the result, inclusive.\n     * @param to  The last index to which to limit the result, inclusive.\n     * @param foreignTable  The foreign table to use (for foreign columns).\n     */\n    range(from, to, { foreignTable } = {}) {\n        const keyOffset = typeof foreignTable === 'undefined' ? 'offset' : `${foreignTable}.offset`;\n        const keyLimit = typeof foreignTable === 'undefined' ? 'limit' : `${foreignTable}.limit`;\n        this.url.searchParams.set(keyOffset, `${from}`);\n        // Range is inclusive, so add 1\n        this.url.searchParams.set(keyLimit, `${to - from + 1}`);\n        return this;\n    }\n    /**\n     * Retrieves only one row from the result. Result must be one row (e.g. using\n     * `limit`), otherwise this will result in an error.\n     */\n    single() {\n        this.headers['Accept'] = 'application/vnd.pgrst.object+json';\n        return this;\n    }\n    /**\n     * Retrieves at most one row from the result. Result must be at most one row\n     * (e.g. using `eq` on a UNIQUE column), otherwise this will result in an\n     * error.\n     */\n    maybeSingle() {\n        this.headers['Accept'] = 'application/vnd.pgrst.object+json';\n        const _this = new PostgrestTransformBuilder(this);\n        _this.then = ((onfulfilled, onrejected) => this.then((res) => {\n            var _a;\n            if ((_a = res.error) === null || _a === void 0 ? void 0 : _a.details.includes('Results contain 0 rows')) {\n                return onfulfilled({\n                    error: null,\n                    data: null,\n                    count: res.count,\n                    status: 200,\n                    statusText: 'OK',\n                    body: null,\n                });\n            }\n            return onfulfilled(res);\n        }, onrejected));\n        return _this;\n    }\n    /**\n     * Set the response type to CSV.\n     */\n    csv() {\n        this.headers['Accept'] = 'text/csv';\n        return this;\n    }\n}\n//# sourceMappingURL=PostgrestTransformBuilder.js.map","import { PostgrestBuilder } from './types';\nimport PostgrestFilterBuilder from './PostgrestFilterBuilder';\nexport default class PostgrestQueryBuilder extends PostgrestBuilder {\n    constructor(url, { headers = {}, schema } = {}) {\n        super({});\n        this.url = new URL(url);\n        this.headers = Object.assign({}, headers);\n        this.schema = schema;\n    }\n    /**\n     * Performs vertical filtering with SELECT.\n     *\n     * @param columns  The columns to retrieve, separated by commas.\n     * @param head  When set to true, select will void data.\n     * @param count  Count algorithm to use to count rows in a table.\n     */\n    select(columns = '*', { head = false, count = null, } = {}) {\n        this.method = 'GET';\n        // Remove whitespaces except when quoted\n        let quoted = false;\n        const cleanedColumns = columns\n            .split('')\n            .map((c) => {\n            if (/\\s/.test(c) && !quoted) {\n                return '';\n            }\n            if (c === '\"') {\n                quoted = !quoted;\n            }\n            return c;\n        })\n            .join('');\n        this.url.searchParams.set('select', cleanedColumns);\n        if (count) {\n            this.headers['Prefer'] = `count=${count}`;\n        }\n        if (head) {\n            this.method = 'HEAD';\n        }\n        return new PostgrestFilterBuilder(this);\n    }\n    insert(values, { upsert = false, onConflict, returning = 'representation', count = null, } = {}) {\n        this.method = 'POST';\n        const prefersHeaders = [`return=${returning}`];\n        if (upsert)\n            prefersHeaders.push('resolution=merge-duplicates');\n        if (upsert && onConflict !== undefined)\n            this.url.searchParams.set('on_conflict', onConflict);\n        this.body = values;\n        if (count) {\n            prefersHeaders.push(`count=${count}`);\n        }\n        this.headers['Prefer'] = prefersHeaders.join(',');\n        if (Array.isArray(values)) {\n            const columns = values.reduce((acc, x) => acc.concat(Object.keys(x)), []);\n            if (columns.length > 0) {\n                const uniqueColumns = [...new Set(columns)];\n                this.url.searchParams.set('columns', uniqueColumns.join(','));\n            }\n        }\n        return new PostgrestFilterBuilder(this);\n    }\n    /**\n     * Performs an UPSERT into the table.\n     *\n     * @param values  The values to insert.\n     * @param onConflict  By specifying the `on_conflict` query parameter, you can make UPSERT work on a column(s) that has a UNIQUE constraint.\n     * @param returning  By default the new record is returned. Set this to 'minimal' if you don't need this value.\n     * @param count  Count algorithm to use to count rows in a table.\n     * @param ignoreDuplicates  Specifies if duplicate rows should be ignored and not inserted.\n     */\n    upsert(values, { onConflict, returning = 'representation', count = null, ignoreDuplicates = false, } = {}) {\n        this.method = 'POST';\n        const prefersHeaders = [\n            `resolution=${ignoreDuplicates ? 'ignore' : 'merge'}-duplicates`,\n            `return=${returning}`,\n        ];\n        if (onConflict !== undefined)\n            this.url.searchParams.set('on_conflict', onConflict);\n        this.body = values;\n        if (count) {\n            prefersHeaders.push(`count=${count}`);\n        }\n        this.headers['Prefer'] = prefersHeaders.join(',');\n        return new PostgrestFilterBuilder(this);\n    }\n    /**\n     * Performs an UPDATE on the table.\n     *\n     * @param values  The values to update.\n     * @param returning  By default the updated record is returned. Set this to 'minimal' if you don't need this value.\n     * @param count  Count algorithm to use to count rows in a table.\n     */\n    update(values, { returning = 'representation', count = null, } = {}) {\n        this.method = 'PATCH';\n        const prefersHeaders = [`return=${returning}`];\n        this.body = values;\n        if (count) {\n            prefersHeaders.push(`count=${count}`);\n        }\n        this.headers['Prefer'] = prefersHeaders.join(',');\n        return new PostgrestFilterBuilder(this);\n    }\n    /**\n     * Performs a DELETE on the table.\n     *\n     * @param returning  If `true`, return the deleted row(s) in the response.\n     * @param count  Count algorithm to use to count rows in a table.\n     */\n    delete({ returning = 'representation', count = null, } = {}) {\n        this.method = 'DELETE';\n        const prefersHeaders = [`return=${returning}`];\n        if (count) {\n            prefersHeaders.push(`count=${count}`);\n        }\n        this.headers['Prefer'] = prefersHeaders.join(',');\n        return new PostgrestFilterBuilder(this);\n    }\n}\n//# sourceMappingURL=PostgrestQueryBuilder.js.map","import { PostgrestBuilder } from './types';\nimport PostgrestFilterBuilder from './PostgrestFilterBuilder';\nexport default class PostgrestRpcBuilder extends PostgrestBuilder {\n    constructor(url, { headers = {}, schema } = {}) {\n        super({});\n        this.url = new URL(url);\n        this.headers = Object.assign({}, headers);\n        this.schema = schema;\n    }\n    /**\n     * Perform a stored procedure call.\n     */\n    rpc(params, { count = null, } = {}) {\n        this.method = 'POST';\n        this.body = params;\n        if (count) {\n            if (this.headers['Prefer'] !== undefined)\n                this.headers['Prefer'] += `,count=${count}`;\n            else\n                this.headers['Prefer'] = `count=${count}`;\n        }\n        return new PostgrestFilterBuilder(this);\n    }\n}\n//# sourceMappingURL=PostgrestRpcBuilder.js.map","import PostgrestQueryBuilder from './lib/PostgrestQueryBuilder';\nimport PostgrestRpcBuilder from './lib/PostgrestRpcBuilder';\nexport default class PostgrestClient {\n    /**\n     * Creates a PostgREST client.\n     *\n     * @param url  URL of the PostgREST endpoint.\n     * @param headers  Custom headers.\n     * @param schema  Postgres schema to switch to.\n     */\n    constructor(url, { headers = {}, schema } = {}) {\n        this.url = url;\n        this.headers = headers;\n        this.schema = schema;\n    }\n    /**\n     * Authenticates the request with JWT.\n     *\n     * @param token  The JWT token to use.\n     */\n    auth(token) {\n        this.headers['Authorization'] = `Bearer ${token}`;\n        return this;\n    }\n    /**\n     * Perform a table operation.\n     *\n     * @param table  The table name to operate on.\n     */\n    from(table) {\n        const url = `${this.url}/${table}`;\n        return new PostgrestQueryBuilder(url, { headers: this.headers, schema: this.schema });\n    }\n    /**\n     * Perform a stored procedure call.\n     *\n     * @param fn  The function name to call.\n     * @param params  The parameters to pass to the function call.\n     * @param count  Count algorithm to use to count rows in a table.\n     */\n    rpc(fn, params, { count = null, } = {}) {\n        const url = `${this.url}/rpc/${fn}`;\n        return new PostgrestRpcBuilder(url, {\n            headers: this.headers,\n            schema: this.schema,\n        }).rpc(params, { count });\n    }\n}\n//# sourceMappingURL=PostgrestClient.js.map","/**\n * Creates a timer that accepts a `timerCalc` function to perform calculated timeout retries, such as exponential backoff.\n *\n * @example\n *    let reconnectTimer = new Timer(() => this.connect(), function(tries){\n *      return [1000, 5000, 10000][tries - 1] || 10000\n *    })\n *    reconnectTimer.scheduleTimeout() // fires after 1000\n *    reconnectTimer.scheduleTimeout() // fires after 5000\n *    reconnectTimer.reset()\n *    reconnectTimer.scheduleTimeout() // fires after 1000\n */\nexport default class Timer {\n    constructor(callback, timerCalc) {\n        this.callback = callback;\n        this.timerCalc = timerCalc;\n        this.timer = undefined;\n        this.tries = 0;\n        this.callback = callback;\n        this.timerCalc = timerCalc;\n    }\n    reset() {\n        this.tries = 0;\n        clearTimeout(this.timer);\n    }\n    // Cancels any previous scheduleTimeout and schedules callback\n    scheduleTimeout() {\n        clearTimeout(this.timer);\n        this.timer = setTimeout(() => {\n            this.tries = this.tries + 1;\n            this.callback();\n        }, this.timerCalc(this.tries + 1));\n    }\n}\n//# sourceMappingURL=timer.js.map","import { DEFAULT_TIMEOUT } from '../lib/constants';\nexport default class Push {\n    /**\n     * Initializes the Push\n     *\n     * @param channel The Channel\n     * @param event The event, for example `\"phx_join\"`\n     * @param payload The payload, for example `{user_id: 123}`\n     * @param timeout The push timeout in milliseconds\n     */\n    constructor(channel, event, payload = {}, timeout = DEFAULT_TIMEOUT) {\n        this.channel = channel;\n        this.event = event;\n        this.payload = payload;\n        this.timeout = timeout;\n        this.sent = false;\n        this.timeoutTimer = undefined;\n        this.ref = '';\n        this.receivedResp = null;\n        this.recHooks = [];\n        this.refEvent = null;\n    }\n    resend(timeout) {\n        this.timeout = timeout;\n        this._cancelRefEvent();\n        this.ref = '';\n        this.refEvent = null;\n        this.receivedResp = null;\n        this.sent = false;\n        this.send();\n    }\n    send() {\n        if (this._hasReceived('timeout')) {\n            return;\n        }\n        this.startTimeout();\n        this.sent = true;\n        this.channel.socket.push({\n            topic: this.channel.topic,\n            event: this.event,\n            payload: this.payload,\n            ref: this.ref,\n        });\n    }\n    receive(status, callback) {\n        var _a;\n        if (this._hasReceived(status)) {\n            callback((_a = this.receivedResp) === null || _a === void 0 ? void 0 : _a.response);\n        }\n        this.recHooks.push({ status, callback });\n        return this;\n    }\n    startTimeout() {\n        if (this.timeoutTimer) {\n            return;\n        }\n        this.ref = this.channel.socket.makeRef();\n        this.refEvent = this.channel.replyEventName(this.ref);\n        this.channel.on(this.refEvent, (payload) => {\n            this._cancelRefEvent();\n            this._cancelTimeout();\n            this.receivedResp = payload;\n            this._matchReceive(payload);\n        });\n        this.timeoutTimer = setTimeout(() => {\n            this.trigger('timeout', {});\n        }, this.timeout);\n    }\n    trigger(status, response) {\n        if (this.refEvent)\n            this.channel.trigger(this.refEvent, { status, response });\n    }\n    _cancelRefEvent() {\n        if (!this.refEvent) {\n            return;\n        }\n        this.channel.off(this.refEvent);\n    }\n    _cancelTimeout() {\n        clearTimeout(this.timeoutTimer);\n        this.timeoutTimer = undefined;\n    }\n    _matchReceive({ status, response, }) {\n        this.recHooks\n            .filter((h) => h.status === status)\n            .forEach((h) => h.callback(response));\n    }\n    _hasReceived(status) {\n        return this.receivedResp && this.receivedResp.status === status;\n    }\n}\n//# sourceMappingURL=push.js.map","import { CHANNEL_EVENTS, CHANNEL_STATES } from './lib/constants';\nimport Push from './lib/push';\nimport Timer from './lib/timer';\nexport default class RealtimeSubscription {\n    constructor(topic, params = {}, socket) {\n        this.topic = topic;\n        this.params = params;\n        this.socket = socket;\n        this.bindings = [];\n        this.state = CHANNEL_STATES.closed;\n        this.joinedOnce = false;\n        this.pushBuffer = [];\n        this.timeout = this.socket.timeout;\n        this.joinPush = new Push(this, CHANNEL_EVENTS.join, this.params, this.timeout);\n        this.rejoinTimer = new Timer(() => this.rejoinUntilConnected(), this.socket.reconnectAfterMs);\n        this.joinPush.receive('ok', () => {\n            this.state = CHANNEL_STATES.joined;\n            this.rejoinTimer.reset();\n            this.pushBuffer.forEach((pushEvent) => pushEvent.send());\n            this.pushBuffer = [];\n        });\n        this.onClose(() => {\n            this.rejoinTimer.reset();\n            this.socket.log('channel', `close ${this.topic} ${this.joinRef()}`);\n            this.state = CHANNEL_STATES.closed;\n            this.socket.remove(this);\n        });\n        this.onError((reason) => {\n            if (this.isLeaving() || this.isClosed()) {\n                return;\n            }\n            this.socket.log('channel', `error ${this.topic}`, reason);\n            this.state = CHANNEL_STATES.errored;\n            this.rejoinTimer.scheduleTimeout();\n        });\n        this.joinPush.receive('timeout', () => {\n            if (!this.isJoining()) {\n                return;\n            }\n            this.socket.log('channel', `timeout ${this.topic}`, this.joinPush.timeout);\n            this.state = CHANNEL_STATES.errored;\n            this.rejoinTimer.scheduleTimeout();\n        });\n        this.on(CHANNEL_EVENTS.reply, (payload, ref) => {\n            this.trigger(this.replyEventName(ref), payload);\n        });\n    }\n    rejoinUntilConnected() {\n        this.rejoinTimer.scheduleTimeout();\n        if (this.socket.isConnected()) {\n            this.rejoin();\n        }\n    }\n    subscribe(timeout = this.timeout) {\n        if (this.joinedOnce) {\n            throw `tried to subscribe multiple times. 'subscribe' can only be called a single time per channel instance`;\n        }\n        else {\n            this.joinedOnce = true;\n            this.rejoin(timeout);\n            return this.joinPush;\n        }\n    }\n    onClose(callback) {\n        this.on(CHANNEL_EVENTS.close, callback);\n    }\n    onError(callback) {\n        this.on(CHANNEL_EVENTS.error, (reason) => callback(reason));\n    }\n    on(event, callback) {\n        this.bindings.push({ event, callback });\n    }\n    off(event) {\n        this.bindings = this.bindings.filter((bind) => bind.event !== event);\n    }\n    canPush() {\n        return this.socket.isConnected() && this.isJoined();\n    }\n    push(event, payload, timeout = this.timeout) {\n        if (!this.joinedOnce) {\n            throw `tried to push '${event}' to '${this.topic}' before joining. Use channel.subscribe() before pushing events`;\n        }\n        let pushEvent = new Push(this, event, payload, timeout);\n        if (this.canPush()) {\n            pushEvent.send();\n        }\n        else {\n            pushEvent.startTimeout();\n            this.pushBuffer.push(pushEvent);\n        }\n        return pushEvent;\n    }\n    /**\n     * Leaves the channel\n     *\n     * Unsubscribes from server events, and instructs channel to terminate on server.\n     * Triggers onClose() hooks.\n     *\n     * To receive leave acknowledgements, use the a `receive` hook to bind to the server ack, ie:\n     * channel.unsubscribe().receive(\"ok\", () => alert(\"left!\") )\n     */\n    unsubscribe(timeout = this.timeout) {\n        this.state = CHANNEL_STATES.leaving;\n        let onClose = () => {\n            this.socket.log('channel', `leave ${this.topic}`);\n            this.trigger(CHANNEL_EVENTS.close, 'leave', this.joinRef());\n        };\n        let leavePush = new Push(this, CHANNEL_EVENTS.leave, {}, timeout);\n        leavePush.receive('ok', () => onClose()).receive('timeout', () => onClose());\n        leavePush.send();\n        if (!this.canPush()) {\n            leavePush.trigger('ok', {});\n        }\n        return leavePush;\n    }\n    /**\n     * Overridable message hook\n     *\n     * Receives all events for specialized message handling before dispatching to the channel callbacks.\n     * Must return the payload, modified or unmodified.\n     */\n    onMessage(event, payload, ref) {\n        return payload;\n    }\n    isMember(topic) {\n        return this.topic === topic;\n    }\n    joinRef() {\n        return this.joinPush.ref;\n    }\n    sendJoin(timeout) {\n        this.state = CHANNEL_STATES.joining;\n        this.joinPush.resend(timeout);\n    }\n    rejoin(timeout = this.timeout) {\n        if (this.isLeaving()) {\n            return;\n        }\n        this.sendJoin(timeout);\n    }\n    trigger(event, payload, ref) {\n        let { close, error, leave, join } = CHANNEL_EVENTS;\n        let events = [close, error, leave, join];\n        if (ref && events.indexOf(event) >= 0 && ref !== this.joinRef()) {\n            return;\n        }\n        let handledPayload = this.onMessage(event, payload, ref);\n        if (payload && !handledPayload) {\n            throw 'channel onMessage callbacks must return the payload, modified or unmodified';\n        }\n        this.bindings\n            .filter((bind) => {\n            // Bind all events if the user specifies a wildcard.\n            if (bind.event === '*') {\n                return event === (payload === null || payload === void 0 ? void 0 : payload.type);\n            }\n            else {\n                return bind.event === event;\n            }\n        })\n            .map((bind) => bind.callback(handledPayload, ref));\n    }\n    replyEventName(ref) {\n        return `chan_reply_${ref}`;\n    }\n    isClosed() {\n        return this.state === CHANNEL_STATES.closed;\n    }\n    isErrored() {\n        return this.state === CHANNEL_STATES.errored;\n    }\n    isJoined() {\n        return this.state === CHANNEL_STATES.joined;\n    }\n    isJoining() {\n        return this.state === CHANNEL_STATES.joining;\n    }\n    isLeaving() {\n        return this.state === CHANNEL_STATES.leaving;\n    }\n}\n//# sourceMappingURL=RealtimeSubscription.js.map","// This file draws heavily from https://github.com/phoenixframework/phoenix/commit/cf098e9cf7a44ee6479d31d911a97d3c7430c6fe\n// License: https://github.com/phoenixframework/phoenix/blob/master/LICENSE.md\nexport default class Serializer {\n    constructor() {\n        this.HEADER_LENGTH = 1;\n    }\n    decode(rawPayload, callback) {\n        if (rawPayload.constructor === ArrayBuffer) {\n            return callback(this._binaryDecode(rawPayload));\n        }\n        if (typeof rawPayload === 'string') {\n            return callback(JSON.parse(rawPayload));\n        }\n        return callback({});\n    }\n    _binaryDecode(buffer) {\n        const view = new DataView(buffer);\n        const decoder = new TextDecoder();\n        return this._decodeBroadcast(buffer, view, decoder);\n    }\n    _decodeBroadcast(buffer, view, decoder) {\n        const topicSize = view.getUint8(1);\n        const eventSize = view.getUint8(2);\n        let offset = this.HEADER_LENGTH + 2;\n        const topic = decoder.decode(buffer.slice(offset, offset + topicSize));\n        offset = offset + topicSize;\n        const event = decoder.decode(buffer.slice(offset, offset + eventSize));\n        offset = offset + eventSize;\n        const data = JSON.parse(decoder.decode(buffer.slice(offset, buffer.byteLength)));\n        return { ref: null, topic: topic, event: event, payload: data };\n    }\n}\n//# sourceMappingURL=serializer.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { VSN, CHANNEL_EVENTS, TRANSPORTS, SOCKET_STATES, DEFAULT_TIMEOUT, WS_CLOSE_NORMAL, } from './lib/constants';\nimport Timer from './lib/timer';\nimport RealtimeSubscription from './RealtimeSubscription';\nimport { w3cwebsocket as WebSocket } from 'websocket';\nimport Serializer from './lib/serializer';\nconst noop = () => { };\nexport default class RealtimeClient {\n    /**\n     * Initializes the Socket\n     *\n     * @param endPoint The string WebSocket endpoint, ie, \"ws://example.com/socket\", \"wss://example.com\", \"/socket\" (inherited host & protocol)\n     * @param options.transport The Websocket Transport, for example WebSocket.\n     * @param options.timeout The default timeout in milliseconds to trigger push timeouts.\n     * @param options.params The optional params to pass when connecting.\n     * @param options.headers The optional headers to pass when connecting.\n     * @param options.heartbeatIntervalMs The millisec interval to send a heartbeat message.\n     * @param options.logger The optional function for specialized logging, ie: logger: (kind, msg, data) => { console.log(`${kind}: ${msg}`, data) }\n     * @param options.encode The function to encode outgoing messages. Defaults to JSON: (payload, callback) => callback(JSON.stringify(payload))\n     * @param options.decode The function to decode incoming messages. Defaults to Serializer's decode.\n     * @param options.longpollerTimeout The maximum timeout of a long poll AJAX request. Defaults to 20s (double the server long poll timer).\n     * @param options.reconnectAfterMs he optional function that returns the millsec reconnect interval. Defaults to stepped backoff off.\n     */\n    constructor(endPoint, options) {\n        this.channels = [];\n        this.endPoint = '';\n        this.headers = {};\n        this.params = {};\n        this.timeout = DEFAULT_TIMEOUT;\n        this.transport = WebSocket;\n        this.heartbeatIntervalMs = 30000;\n        this.longpollerTimeout = 20000;\n        this.heartbeatTimer = undefined;\n        this.pendingHeartbeatRef = null;\n        this.ref = 0;\n        this.logger = noop;\n        this.conn = null;\n        this.sendBuffer = [];\n        this.serializer = new Serializer();\n        this.stateChangeCallbacks = {\n            open: [],\n            close: [],\n            error: [],\n            message: [],\n        };\n        this.endPoint = `${endPoint}/${TRANSPORTS.websocket}`;\n        if (options === null || options === void 0 ? void 0 : options.params)\n            this.params = options.params;\n        if (options === null || options === void 0 ? void 0 : options.headers)\n            this.headers = options.headers;\n        if (options === null || options === void 0 ? void 0 : options.timeout)\n            this.timeout = options.timeout;\n        if (options === null || options === void 0 ? void 0 : options.logger)\n            this.logger = options.logger;\n        if (options === null || options === void 0 ? void 0 : options.transport)\n            this.transport = options.transport;\n        if (options === null || options === void 0 ? void 0 : options.heartbeatIntervalMs)\n            this.heartbeatIntervalMs = options.heartbeatIntervalMs;\n        if (options === null || options === void 0 ? void 0 : options.longpollerTimeout)\n            this.longpollerTimeout = options.longpollerTimeout;\n        this.reconnectAfterMs = (options === null || options === void 0 ? void 0 : options.reconnectAfterMs) ? options.reconnectAfterMs\n            : (tries) => {\n                return [1000, 2000, 5000, 10000][tries - 1] || 10000;\n            };\n        this.encode = (options === null || options === void 0 ? void 0 : options.encode) ? options.encode\n            : (payload, callback) => {\n                return callback(JSON.stringify(payload));\n            };\n        this.decode = (options === null || options === void 0 ? void 0 : options.decode) ? options.decode\n            : this.serializer.decode.bind(this.serializer);\n        this.reconnectTimer = new Timer(() => __awaiter(this, void 0, void 0, function* () {\n            yield this.disconnect();\n            this.connect();\n        }), this.reconnectAfterMs);\n    }\n    /**\n     * Connects the socket.\n     */\n    connect() {\n        if (this.conn) {\n            return;\n        }\n        this.conn = new this.transport(this.endPointURL(), [], null, this.headers);\n        if (this.conn) {\n            // this.conn.timeout = this.longpollerTimeout // TYPE ERROR\n            this.conn.binaryType = 'arraybuffer';\n            this.conn.onopen = () => this._onConnOpen();\n            this.conn.onerror = (error) => this._onConnError(error);\n            this.conn.onmessage = (event) => this.onConnMessage(event);\n            this.conn.onclose = (event) => this._onConnClose(event);\n        }\n    }\n    /**\n     * Disconnects the socket.\n     *\n     * @param code A numeric status code to send on disconnect.\n     * @param reason A custom reason for the disconnect.\n     */\n    disconnect(code, reason) {\n        return new Promise((resolve, _reject) => {\n            try {\n                if (this.conn) {\n                    this.conn.onclose = function () { }; // noop\n                    if (code) {\n                        this.conn.close(code, reason || '');\n                    }\n                    else {\n                        this.conn.close();\n                    }\n                    this.conn = null;\n                }\n                resolve({ error: null, data: true });\n            }\n            catch (error) {\n                resolve({ error, data: false });\n            }\n        });\n    }\n    /**\n     * Logs the message. Override `this.logger` for specialized logging.\n     */\n    log(kind, msg, data) {\n        this.logger(kind, msg, data);\n    }\n    /**\n     * Registers a callback for connection state change event.\n     * @param callback A function to be called when the event occurs.\n     *\n     * @example\n     *    socket.onOpen(() => console.log(\"Socket opened.\"))\n     */\n    onOpen(callback) {\n        this.stateChangeCallbacks.open.push(callback);\n    }\n    /**\n     * Registers a callbacks for connection state change events.\n     * @param callback A function to be called when the event occurs.\n     *\n     * @example\n     *    socket.onOpen(() => console.log(\"Socket closed.\"))\n     */\n    onClose(callback) {\n        this.stateChangeCallbacks.close.push(callback);\n    }\n    /**\n     * Registers a callback for connection state change events.\n     * @param callback A function to be called when the event occurs.\n     *\n     * @example\n     *    socket.onOpen((error) => console.log(\"An error occurred\"))\n     */\n    onError(callback) {\n        this.stateChangeCallbacks.error.push(callback);\n    }\n    /**\n     * Calls a function any time a message is received.\n     * @param callback A function to be called when the event occurs.\n     *\n     * @example\n     *    socket.onMessage((message) => console.log(message))\n     */\n    onMessage(callback) {\n        this.stateChangeCallbacks.message.push(callback);\n    }\n    /**\n     * Returns the current state of the socket.\n     */\n    connectionState() {\n        switch (this.conn && this.conn.readyState) {\n            case SOCKET_STATES.connecting:\n                return 'connecting';\n            case SOCKET_STATES.open:\n                return 'open';\n            case SOCKET_STATES.closing:\n                return 'closing';\n            default:\n                return 'closed';\n        }\n    }\n    /**\n     * Retuns `true` is the connection is open.\n     */\n    isConnected() {\n        return this.connectionState() === 'open';\n    }\n    /**\n     * Removes a subscription from the socket.\n     *\n     * @param channel An open subscription.\n     */\n    remove(channel) {\n        this.channels = this.channels.filter((c) => c.joinRef() !== channel.joinRef());\n    }\n    channel(topic, chanParams = {}) {\n        let chan = new RealtimeSubscription(topic, chanParams, this);\n        this.channels.push(chan);\n        return chan;\n    }\n    push(data) {\n        let { topic, event, payload, ref } = data;\n        let callback = () => {\n            this.encode(data, (result) => {\n                var _a;\n                (_a = this.conn) === null || _a === void 0 ? void 0 : _a.send(result);\n            });\n        };\n        this.log('push', `${topic} ${event} (${ref})`, payload);\n        if (this.isConnected()) {\n            callback();\n        }\n        else {\n            this.sendBuffer.push(callback);\n        }\n    }\n    onConnMessage(rawMessage) {\n        this.decode(rawMessage.data, (msg) => {\n            let { topic, event, payload, ref } = msg;\n            if (ref && ref === this.pendingHeartbeatRef) {\n                this.pendingHeartbeatRef = null;\n            }\n            else if (event === (payload === null || payload === void 0 ? void 0 : payload.type)) {\n                this._resetHeartbeat();\n            }\n            this.log('receive', `${payload.status || ''} ${topic} ${event} ${(ref && '(' + ref + ')') || ''}`, payload);\n            this.channels\n                .filter((channel) => channel.isMember(topic))\n                .forEach((channel) => channel.trigger(event, payload, ref));\n            this.stateChangeCallbacks.message.forEach((callback) => callback(msg));\n        });\n    }\n    /**\n     * Returns the URL of the websocket.\n     */\n    endPointURL() {\n        return this._appendParams(this.endPoint, Object.assign({}, this.params, { vsn: VSN }));\n    }\n    /**\n     * Return the next message ref, accounting for overflows\n     */\n    makeRef() {\n        let newRef = this.ref + 1;\n        if (newRef === this.ref) {\n            this.ref = 0;\n        }\n        else {\n            this.ref = newRef;\n        }\n        return this.ref.toString();\n    }\n    _onConnOpen() {\n        this.log('transport', `connected to ${this.endPointURL()}`);\n        this._flushSendBuffer();\n        this.reconnectTimer.reset();\n        this._resetHeartbeat();\n        this.stateChangeCallbacks.open.forEach((callback) => callback());\n    }\n    _onConnClose(event) {\n        this.log('transport', 'close', event);\n        this._triggerChanError();\n        this.heartbeatTimer && clearInterval(this.heartbeatTimer);\n        this.reconnectTimer.scheduleTimeout();\n        this.stateChangeCallbacks.close.forEach((callback) => callback(event));\n    }\n    _onConnError(error) {\n        this.log('transport', error.message);\n        this._triggerChanError();\n        this.stateChangeCallbacks.error.forEach((callback) => callback(error));\n    }\n    _triggerChanError() {\n        this.channels.forEach((channel) => channel.trigger(CHANNEL_EVENTS.error));\n    }\n    _appendParams(url, params) {\n        if (Object.keys(params).length === 0) {\n            return url;\n        }\n        const prefix = url.match(/\\?/) ? '&' : '?';\n        const query = new URLSearchParams(params);\n        return `${url}${prefix}${query}`;\n    }\n    _flushSendBuffer() {\n        if (this.isConnected() && this.sendBuffer.length > 0) {\n            this.sendBuffer.forEach((callback) => callback());\n            this.sendBuffer = [];\n        }\n    }\n    _resetHeartbeat() {\n        this.pendingHeartbeatRef = null;\n        this.heartbeatTimer && clearInterval(this.heartbeatTimer);\n        this.heartbeatTimer = setInterval(() => this._sendHeartbeat(), this.heartbeatIntervalMs);\n    }\n    _sendHeartbeat() {\n        var _a;\n        if (!this.isConnected()) {\n            return;\n        }\n        if (this.pendingHeartbeatRef) {\n            this.pendingHeartbeatRef = null;\n            this.log('transport', 'heartbeat timeout. Attempting to re-establish connection');\n            (_a = this.conn) === null || _a === void 0 ? void 0 : _a.close(WS_CLOSE_NORMAL, 'hearbeat timeout');\n            return;\n        }\n        this.pendingHeartbeatRef = this.makeRef();\n        this.push({\n            topic: 'phoenix',\n            event: 'heartbeat',\n            payload: {},\n            ref: this.pendingHeartbeatRef,\n        });\n    }\n}\n//# sourceMappingURL=RealtimeClient.js.map","import { Transformers } from '@supabase/realtime-js';\nexport class SupabaseRealtimeClient {\n    constructor(socket, schema, tableName) {\n        const topic = tableName === '*' ? `realtime:${schema}` : `realtime:${schema}:${tableName}`;\n        this.subscription = socket.channel(topic);\n    }\n    getPayloadRecords(payload) {\n        const records = {\n            new: {},\n            old: {},\n        };\n        if (payload.type === 'INSERT' || payload.type === 'UPDATE') {\n            records.new = Transformers.convertChangeData(payload.columns, payload.record);\n        }\n        if (payload.type === 'UPDATE' || payload.type === 'DELETE') {\n            records.old = Transformers.convertChangeData(payload.columns, payload.old_record);\n        }\n        return records;\n    }\n    /**\n     * The event you want to listen to.\n     *\n     * @param event The event\n     * @param callback A callback function that is called whenever the event occurs.\n     */\n    on(event, callback) {\n        this.subscription.on(event, (payload) => {\n            let enrichedPayload = {\n                schema: payload.schema,\n                table: payload.table,\n                commit_timestamp: payload.commit_timestamp,\n                eventType: payload.type,\n                new: {},\n                old: {},\n            };\n            enrichedPayload = Object.assign(Object.assign({}, enrichedPayload), this.getPayloadRecords(payload));\n            callback(enrichedPayload);\n        });\n        return this;\n    }\n    /**\n     * Enables the subscription.\n     */\n    subscribe(callback = () => { }) {\n        this.subscription.onError((e) => callback('SUBSCRIPTION_ERROR', e));\n        this.subscription.onClose(() => callback('CLOSED'));\n        this.subscription\n            .subscribe()\n            .receive('ok', () => callback('SUBSCRIBED'))\n            .receive('error', (e) => callback('SUBSCRIPTION_ERROR', e))\n            .receive('timeout', () => callback('RETRYING_AFTER_TIMEOUT'));\n        return this.subscription;\n    }\n}\n//# sourceMappingURL=SupabaseRealtimeClient.js.map","import { PostgrestQueryBuilder } from '@supabase/postgrest-js';\nimport { SupabaseRealtimeClient } from './SupabaseRealtimeClient';\nexport class SupabaseQueryBuilder extends PostgrestQueryBuilder {\n    constructor(url, { headers = {}, schema, realtime, table, }) {\n        super(url, { headers, schema });\n        this._subscription = new SupabaseRealtimeClient(realtime, schema, table);\n        this._realtime = realtime;\n    }\n    /**\n     * Subscribe to realtime changes in your databse.\n     * @param event The database event which you would like to receive updates for, or you can use the special wildcard `*` to listen to all changes.\n     * @param callback A callback that will handle the payload that is sent whenever your database changes.\n     */\n    on(event, callback) {\n        if (!this._realtime.isConnected()) {\n            this._realtime.connect();\n        }\n        return this._subscription.on(event, callback);\n    }\n}\n//# sourceMappingURL=SupabaseQueryBuilder.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { get, post, remove } from './fetch';\nimport { isBrowser } from './helpers';\nconst DEFAULT_SEARCH_OPTIONS = {\n    limit: 100,\n    offset: 0,\n    sortBy: {\n        column: 'name',\n        order: 'asc',\n    },\n};\nconst DEFAULT_FILE_OPTIONS = {\n    cacheControl: '3600',\n    upsert: false,\n};\nexport class StorageFileApi {\n    constructor(url, headers = {}, bucketId) {\n        this.url = url;\n        this.headers = headers;\n        this.bucketId = bucketId;\n    }\n    /**\n     * Uploads a file to an existing bucket.\n     *\n     * @param path The relative file path. Should be of the format `folder/subfolder/filename.png`. The bucket must already exist before attempting to upload.\n     * @param file The File object to be stored in the bucket.\n     * @param fileOptions HTTP headers. For example `cacheControl`\n     */\n    upload(path, file, fileOptions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                if (!isBrowser())\n                    throw new Error('No browser detected.');\n                const formData = new FormData();\n                const options = Object.assign(Object.assign({}, DEFAULT_FILE_OPTIONS), fileOptions);\n                formData.append('cacheControl', options.cacheControl);\n                formData.append('', file, file.name);\n                const _path = this._getFinalPath(path);\n                const res = yield fetch(`${this.url}/object/${_path}`, {\n                    method: 'POST',\n                    body: formData,\n                    headers: Object.assign(Object.assign({}, this.headers), { 'x-upsert': String(fileOptions === null || fileOptions === void 0 ? void 0 : fileOptions.upsert) }),\n                });\n                if (res.ok) {\n                    // const data = await res.json()\n                    // temporary fix till backend is updated to the latest storage-api version\n                    return { data: { Key: _path }, error: null };\n                }\n                else {\n                    const error = yield res.json();\n                    return { data: null, error };\n                }\n            }\n            catch (error) {\n                return { data: null, error };\n            }\n        });\n    }\n    /**\n     * Replaces an existing file at the specified path with a new one.\n     *\n     * @param path The relative file path. Should be of the format `folder/subfolder`. The bucket already exist before attempting to upload.\n     * @param file The file object to be stored in the bucket.\n     * @param fileOptions HTTP headers. For example `cacheControl`\n     */\n    update(path, file, fileOptions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                if (!isBrowser())\n                    throw new Error('No browser detected.');\n                const formData = new FormData();\n                const options = Object.assign(Object.assign({}, DEFAULT_FILE_OPTIONS), fileOptions);\n                formData.append('cacheControl', options.cacheControl);\n                formData.append('', file, file.name);\n                const _path = this._getFinalPath(path);\n                const res = yield fetch(`${this.url}/object/${_path}`, {\n                    method: 'PUT',\n                    body: formData,\n                    headers: Object.assign({}, this.headers),\n                });\n                if (res.ok) {\n                    // const data = await res.json()\n                    // temporary fix till backend is updated to the latest storage-api version\n                    return { data: { Key: _path }, error: null };\n                }\n                else {\n                    const error = yield res.json();\n                    return { data: null, error };\n                }\n            }\n            catch (error) {\n                return { data: null, error };\n            }\n        });\n    }\n    /**\n     * Moves an existing file, optionally renaming it at the same time.\n     *\n     * @param fromPath The original file path, including the current file name. For example `folder/image.png`.\n     * @param toPath The new file path, including the new file name. For example `folder/image-copy.png`.\n     */\n    move(fromPath, toPath) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const data = yield post(`${this.url}/object/move`, { bucketId: this.bucketId, sourceKey: fromPath, destinationKey: toPath }, { headers: this.headers });\n                return { data, error: null };\n            }\n            catch (error) {\n                return { data: null, error };\n            }\n        });\n    }\n    /**\n     * Create signed url to download file without requiring permissions. This URL can be valid for a set number of seconds.\n     *\n     * @param path The file path to be downloaded, including the current file name. For example `folder/image.png`.\n     * @param expiresIn The number of seconds until the signed URL expires. For example, `60` for a URL which is valid for one minute.\n     */\n    createSignedUrl(path, expiresIn) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const _path = this._getFinalPath(path);\n                let data = yield post(`${this.url}/object/sign/${_path}`, { expiresIn }, { headers: this.headers });\n                const signedURL = `${this.url}${data.signedURL}`;\n                data = { signedURL };\n                return { data, error: null, signedURL };\n            }\n            catch (error) {\n                return { data: null, error, signedURL: null };\n            }\n        });\n    }\n    /**\n     * Downloads a file.\n     *\n     * @param path The file path to be downloaded, including the path and file name. For example `folder/image.png`.\n     */\n    download(path) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const _path = this._getFinalPath(path);\n                const res = yield get(`${this.url}/object/${_path}`, {\n                    headers: this.headers,\n                    noResolveJson: true,\n                });\n                const data = yield res.blob();\n                return { data, error: null };\n            }\n            catch (error) {\n                return { data: null, error };\n            }\n        });\n    }\n    /**\n     * Retrieve URLs for assets in public buckets\n     *\n     * @param path The file path to be downloaded, including the path and file name. For example `folder/image.png`.\n     */\n    getPublicUrl(path) {\n        try {\n            const _path = this._getFinalPath(path);\n            const publicURL = `${this.url}/object/public/${_path}`;\n            const data = { publicURL };\n            return { data, error: null, publicURL };\n        }\n        catch (error) {\n            return { data: null, error, publicURL: null };\n        }\n    }\n    /**\n     * Deletes files within the same bucket\n     *\n     * @param paths An array of files to be deletes, including the path and file name. For example [`folder/image.png`].\n     */\n    remove(paths) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const data = yield remove(`${this.url}/object/${this.bucketId}`, { prefixes: paths }, { headers: this.headers });\n                return { data, error: null };\n            }\n            catch (error) {\n                return { data: null, error };\n            }\n        });\n    }\n    /**\n     * Get file metadata\n     * @param id the file id to retrieve metadata\n     */\n    // async getMetadata(id: string): Promise<{ data: Metadata | null; error: Error | null }> {\n    //   try {\n    //     const data = await get(`${this.url}/metadata/${id}`, { headers: this.headers })\n    //     return { data, error: null }\n    //   } catch (error) {\n    //     return { data: null, error }\n    //   }\n    // }\n    /**\n     * Update file metadata\n     * @param id the file id to update metadata\n     * @param meta the new file metadata\n     */\n    // async updateMetadata(\n    //   id: string,\n    //   meta: Metadata\n    // ): Promise<{ data: Metadata | null; error: Error | null }> {\n    //   try {\n    //     const data = await post(`${this.url}/metadata/${id}`, { ...meta }, { headers: this.headers })\n    //     return { data, error: null }\n    //   } catch (error) {\n    //     return { data: null, error }\n    //   }\n    // }\n    /**\n     * Lists all the files within a bucket.\n     * @param path The folder path.\n     * @param options Search options, including `limit`, `offset`, and `sortBy`.\n     * @param parameters Fetch parameters, currently only supports `signal`, which is an AbortController's signal\n     */\n    list(path, options, parameters) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const body = Object.assign(Object.assign(Object.assign({}, DEFAULT_SEARCH_OPTIONS), options), { prefix: path || '' });\n                const data = yield post(`${this.url}/object/list/${this.bucketId}`, body, { headers: this.headers }, parameters);\n                return { data, error: null };\n            }\n            catch (error) {\n                return { data: null, error };\n            }\n        });\n    }\n    _getFinalPath(path) {\n        return `${this.bucketId}/${path}`;\n    }\n}\n//# sourceMappingURL=StorageFileApi.js.map","import { StorageBucketApi, StorageFileApi } from './lib';\nexport class SupabaseStorageClient extends StorageBucketApi {\n    constructor(url, headers = {}) {\n        super(url, headers);\n    }\n    /**\n     * Perform file operation in a bucket.\n     *\n     * @param id The bucket id to operate on.\n     */\n    from(id) {\n        return new StorageFileApi(this.url, this.headers, id);\n    }\n}\n//# sourceMappingURL=SupabaseStorageClient.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { get, post, put, remove } from './fetch';\nexport class StorageBucketApi {\n    constructor(url, headers = {}) {\n        this.url = url;\n        this.headers = headers;\n    }\n    /**\n     * Retrieves the details of all Storage buckets within an existing product.\n     */\n    listBuckets() {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const data = yield get(`${this.url}/bucket`, { headers: this.headers });\n                return { data, error: null };\n            }\n            catch (error) {\n                return { data: null, error };\n            }\n        });\n    }\n    /**\n     * Retrieves the details of an existing Storage bucket.\n     *\n     * @param id The unique identifier of the bucket you would like to retrieve.\n     */\n    getBucket(id) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const data = yield get(`${this.url}/bucket/${id}`, { headers: this.headers });\n                return { data, error: null };\n            }\n            catch (error) {\n                return { data: null, error };\n            }\n        });\n    }\n    /**\n     * Creates a new Storage bucket\n     *\n     * @param id A unique identifier for the bucket you are creating.\n     * @returns newly created bucket id\n     */\n    createBucket(id, options = { public: false }) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const data = yield post(`${this.url}/bucket`, { id, name: id, public: options.public }, { headers: this.headers });\n                return { data: data.name, error: null };\n            }\n            catch (error) {\n                return { data: null, error };\n            }\n        });\n    }\n    /**\n     * Updates a new Storage bucket\n     *\n     * @param id A unique identifier for the bucket you are creating.\n     */\n    updateBucket(id, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const data = yield put(`${this.url}/bucket/${id}`, { id, name: id, public: options.public }, { headers: this.headers });\n                return { data, error: null };\n            }\n            catch (error) {\n                return { data: null, error };\n            }\n        });\n    }\n    /**\n     * Removes all objects inside a single bucket.\n     *\n     * @param id The unique identifier of the bucket you would like to empty.\n     */\n    emptyBucket(id) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const data = yield post(`${this.url}/bucket/${id}/empty`, {}, { headers: this.headers });\n                return { data, error: null };\n            }\n            catch (error) {\n                return { data: null, error };\n            }\n        });\n    }\n    /**\n     * Deletes an existing bucket. A bucket can't be deleted with existing objects inside it.\n     * You must first `empty()` the bucket.\n     *\n     * @param id The unique identifier of the bucket you would like to delete.\n     */\n    deleteBucket(id) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const data = yield remove(`${this.url}/bucket/${id}`, {}, { headers: this.headers });\n                return { data, error: null };\n            }\n            catch (error) {\n                return { data: null, error };\n            }\n        });\n    }\n}\n//# sourceMappingURL=StorageBucketApi.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { DEFAULT_HEADERS } from './lib/constants';\nimport { SupabaseAuthClient } from './lib/SupabaseAuthClient';\nimport { SupabaseQueryBuilder } from './lib/SupabaseQueryBuilder';\nimport { SupabaseStorageClient } from '@supabase/storage-js';\nimport { PostgrestClient } from '@supabase/postgrest-js';\nimport { RealtimeClient } from '@supabase/realtime-js';\nconst DEFAULT_OPTIONS = {\n    schema: 'public',\n    autoRefreshToken: true,\n    persistSession: true,\n    detectSessionInUrl: true,\n    localStorage: globalThis.localStorage,\n    headers: DEFAULT_HEADERS,\n};\n/**\n * Supabase Client.\n *\n * An isomorphic Javascript client for interacting with Postgres.\n */\nexport default class SupabaseClient {\n    /**\n     * Create a new client for use in the browser.\n     * @param supabaseUrl The unique Supabase URL which is supplied when you create a new project in your project dashboard.\n     * @param supabaseKey The unique Supabase Key which is supplied when you create a new project in your project dashboard.\n     * @param options.schema You can switch in between schemas. The schema needs to be on the list of exposed schemas inside Supabase.\n     * @param options.autoRefreshToken Set to \"true\" if you want to automatically refresh the token before expiring.\n     * @param options.persistSession Set to \"true\" if you want to automatically save the user session into local storage.\n     * @param options.detectSessionInUrl Set to \"true\" if you want to automatically detects OAuth grants in the URL and signs in the user.\n     * @param options.headers Any additional headers to send with each network request.\n     */\n    constructor(supabaseUrl, supabaseKey, options) {\n        this.supabaseUrl = supabaseUrl;\n        this.supabaseKey = supabaseKey;\n        if (!supabaseUrl)\n            throw new Error('supabaseUrl is required.');\n        if (!supabaseKey)\n            throw new Error('supabaseKey is required.');\n        const settings = Object.assign(Object.assign({}, DEFAULT_OPTIONS), options);\n        this.restUrl = `${supabaseUrl}/rest/v1`;\n        this.realtimeUrl = `${supabaseUrl}/realtime/v1`.replace('http', 'ws');\n        this.authUrl = `${supabaseUrl}/auth/v1`;\n        this.storageUrl = `${supabaseUrl}/storage/v1`;\n        this.schema = settings.schema;\n        this.auth = this._initSupabaseAuthClient(settings);\n        this.realtime = this._initRealtimeClient();\n        // In the future we might allow the user to pass in a logger to receive these events.\n        // this.realtime.onOpen(() => console.log('OPEN'))\n        // this.realtime.onClose(() => console.log('CLOSED'))\n        // this.realtime.onError((e: Error) => console.log('Socket error', e))\n    }\n    /**\n     * Supabase Storage allows you to manage user-generated content, such as photos or videos.\n     */\n    get storage() {\n        return new SupabaseStorageClient(this.storageUrl, this._getAuthHeaders());\n    }\n    /**\n     * Perform a table operation.\n     *\n     * @param table The table name to operate on.\n     */\n    from(table) {\n        const url = `${this.restUrl}/${table}`;\n        return new SupabaseQueryBuilder(url, {\n            headers: this._getAuthHeaders(),\n            schema: this.schema,\n            realtime: this.realtime,\n            table,\n        });\n    }\n    /**\n     * Perform a stored procedure call.\n     *\n     * @param fn  The function name to call.\n     * @param params  The parameters to pass to the function call.\n     */\n    rpc(fn, params) {\n        const rest = this._initPostgRESTClient();\n        return rest.rpc(fn, params);\n    }\n    /**\n     * Removes an active subscription and returns the number of open connections.\n     *\n     * @param subscription The subscription you want to remove.\n     */\n    removeSubscription(subscription) {\n        return new Promise((resolve) => __awaiter(this, void 0, void 0, function* () {\n            try {\n                yield this._closeSubscription(subscription);\n                const openSubscriptions = this.getSubscriptions().length;\n                if (!openSubscriptions) {\n                    const { error } = yield this.realtime.disconnect();\n                    if (error)\n                        return resolve({ error });\n                }\n                return resolve({ error: null, data: { openSubscriptions } });\n            }\n            catch (error) {\n                return resolve({ error });\n            }\n        }));\n    }\n    _closeSubscription(subscription) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!subscription.isClosed()) {\n                yield this._closeChannel(subscription);\n            }\n        });\n    }\n    /**\n     * Returns an array of all your subscriptions.\n     */\n    getSubscriptions() {\n        return this.realtime.channels;\n    }\n    _initSupabaseAuthClient({ autoRefreshToken, persistSession, detectSessionInUrl, localStorage, }) {\n        return new SupabaseAuthClient({\n            url: this.authUrl,\n            headers: {\n                Authorization: `Bearer ${this.supabaseKey}`,\n                apikey: `${this.supabaseKey}`,\n            },\n            autoRefreshToken,\n            persistSession,\n            detectSessionInUrl,\n            localStorage,\n        });\n    }\n    _initRealtimeClient() {\n        return new RealtimeClient(this.realtimeUrl, {\n            params: { apikey: this.supabaseKey },\n        });\n    }\n    _initPostgRESTClient() {\n        return new PostgrestClient(this.restUrl, {\n            headers: this._getAuthHeaders(),\n            schema: this.schema,\n        });\n    }\n    _getAuthHeaders() {\n        var _a, _b;\n        const headers = {};\n        const authBearer = (_b = (_a = this.auth.session()) === null || _a === void 0 ? void 0 : _a.access_token) !== null && _b !== void 0 ? _b : this.supabaseKey;\n        headers['apikey'] = this.supabaseKey;\n        headers['Authorization'] = `Bearer ${authBearer}`;\n        return headers;\n    }\n    _closeChannel(subscription) {\n        return new Promise((resolve, reject) => {\n            subscription\n                .unsubscribe()\n                .receive('ok', () => {\n                this.realtime.remove(subscription);\n                return resolve(true);\n            })\n                .receive('error', (e) => reject(e));\n        });\n    }\n}\n//# sourceMappingURL=SupabaseClient.js.map","import SupabaseClient from './SupabaseClient';\nexport * from '@supabase/gotrue-js';\nexport * from '@supabase/realtime-js';\n/**\n * Creates a new Supabase Client.\n */\nconst createClient = (supabaseUrl, supabaseKey, options) => {\n    return new SupabaseClient(supabaseUrl, supabaseKey, options);\n};\nexport { createClient, SupabaseClient, };\n//# sourceMappingURL=index.js.map","var _globalThis;\nif (typeof globalThis === 'object') {\n\t_globalThis = globalThis;\n} else {\n\ttry {\n\t\t_globalThis = require('es5-ext/global');\n\t} catch (error) {\n\t} finally {\n\t\tif (!_globalThis && typeof window !== 'undefined') { _globalThis = window; }\n\t\tif (!_globalThis) { throw new Error('Could not determine global this'); }\n\t}\n}\n\nvar NativeWebSocket = _globalThis.WebSocket || _globalThis.MozWebSocket;\nvar websocket_version = require('./version');\n\n\n/**\n * Expose a W3C WebSocket class with just one or two arguments.\n */\nfunction W3CWebSocket(uri, protocols) {\n\tvar native_instance;\n\n\tif (protocols) {\n\t\tnative_instance = new NativeWebSocket(uri, protocols);\n\t}\n\telse {\n\t\tnative_instance = new NativeWebSocket(uri);\n\t}\n\n\t/**\n\t * 'native_instance' is an instance of nativeWebSocket (the browser's WebSocket\n\t * class). Since it is an Object it will be returned as it is when creating an\n\t * instance of W3CWebSocket via 'new W3CWebSocket()'.\n\t *\n\t * ECMAScript 5: http://bclary.com/2004/11/07/#a-13.2.2\n\t */\n\treturn native_instance;\n}\nif (NativeWebSocket) {\n\t['CONNECTING', 'OPEN', 'CLOSING', 'CLOSED'].forEach(function(prop) {\n\t\tObject.defineProperty(W3CWebSocket, prop, {\n\t\t\tget: function() { return NativeWebSocket[prop]; }\n\t\t});\n\t});\n}\n\n/**\n * Module exports.\n */\nmodule.exports = {\n    'w3cwebsocket' : NativeWebSocket ? W3CWebSocket : null,\n    'version'      : websocket_version\n};\n","var naiveFallback = function () {\n\tif (typeof self === \"object\" && self) return self;\n\tif (typeof window === \"object\" && window) return window;\n\tthrow new Error(\"Unable to resolve global `this`\");\n};\n\nmodule.exports = (function () {\n\tif (this) return this;\n\n\t// Unexpected strict mode (may happen if e.g. bundled into ESM module)\n\n\t// Fallback to standard globalThis if available\n\tif (typeof globalThis === \"object\" && globalThis) return globalThis;\n\n\t// Thanks @mathiasbynens -> https://mathiasbynens.be/notes/globalthis\n\t// In all ES5+ engines global object inherits from Object.prototype\n\t// (if you approached one that doesn't please report)\n\ttry {\n\t\tObject.defineProperty(Object.prototype, \"__global__\", {\n\t\t\tget: function () { return this; },\n\t\t\tconfigurable: true\n\t\t});\n\t} catch (error) {\n\t\t// Unfortunate case of updates to Object.prototype being restricted\n\t\t// via preventExtensions, seal or freeze\n\t\treturn naiveFallback();\n\t}\n\ttry {\n\t\t// Safari case (window.__global__ works, but __global__ does not)\n\t\tif (!__global__) return naiveFallback();\n\t\treturn __global__;\n\t} finally {\n\t\tdelete Object.prototype.__global__;\n\t}\n})();\n","module.exports = require('../package.json').version;\n"],"sourceRoot":""}